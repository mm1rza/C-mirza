{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"ZippyShare","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://*.zippyshare.com/v/*/file.html","https://*.zippyshare.com/v/*/file.html"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1693425248558,"data":{}},"enabled":false,"position":1,"uuid":"5ccd555e-8db1-4400-ae28-f0ea44ce5451","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIFppcHB5U2hhcmUKLy8gQG5hbWVzcGFjZSAgIHlhbmFnaXJhZ2kKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qLnppcHB5c2hhcmUuY29tL3YvKi9maWxlLmh0bWwKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vKi56aXBweXNoYXJlLmNvbS92LyovZmlsZS5odG1sCi8vIEB2ZXJzaW9uICAgICAxLjEKLy8gQGdyYW50ICAgICAgIG5vbmUKLy8gQGRlc2NyaXB0aW9uIERvd25sb2FkIFdpdGhvdXQgQWRzCi8vID09L1VzZXJTY3JpcHQ9PQovLyBpZiBlcnJvciBvY2N1cnMgd2l0aCBjbG9zaW5nIHdpbmRvd3MsIHRyeSBjb25maWcgZmlyZWZveCBieSBhY2Nlc3NpbmcgYWJvdXQ6Y29uZmlnCnZhciBzZXQ7CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZGwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGxidXR0b24nKTsKICAgIGRsID0gZGwuZ2V0QXR0cmlidXRlKCdocmVmJyk7CiAgICBsb2NhdGlvbi5yZXBsYWNlKGRsKTsgLy8gc3RhcnQgZG93bmxvYWQKICAgIHNldCA9IHNldEludGVydmFsKGNsb3NlV2luZG93cywgMTAwMCAqIDMpOwp9KSgpOwoKZnVuY3Rpb24gY2xvc2VXaW5kb3dzKCl7CiAgICB3aW5kb3cuY2xvc2UoKTsKICAgIGNsZWFySW50ZXJ2YWwoc2V0KTsKfQ=="},{"name":"Address List BGP","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://bgp.he.net/search*","https://bgp.he.net/AS*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1693425248563,"data":{}},"enabled":true,"position":2,"file_url":"https://raw.githubusercontent.com/laksa19/addrlistbgp/main/addrlistbgp.user.js","uuid":"63dc9b5a-fe5a-4593-950e-8dbd0fc10133","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBZGRyZXNzIExpc3QgQkdQCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9sYWtzYTE5LmdpdGh1Yi5pby9hZGRybGlzdGJncAovLyBAdXBkYXRlVVJMICAgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9sYWtzYTE5L2FkZHJsaXN0YmdwL21haW4vYWRkcmxpc3RiZ3AudXNlci5qcwovLyBAZG93bmxvYWRVUkwgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9sYWtzYTE5L2FkZHJsaXN0YmdwL21haW4vYWRkcmxpc3RiZ3AudXNlci5qcwovLyBAdmVyc2lvbiAgICAgIDAuOAovLyBAZGVzY3JpcHRpb24gIEdldCBBZHJlc3MgTGlzdCBmcm9tIEJHUAovLyBAYXV0aG9yICAgICAgIExha3NhbWFkaSBHdWtvCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9iZ3AuaGUubmV0L3NlYXJjaCoKLy8gQG1hdGNoICAgICAgICBodHRwczovL2JncC5oZS5uZXQvQVMqCi8vIEBncmFudCAgICAgICAgbm9uZQovLyBAcmVxdWlyZSAgICAgIGh0dHA6Ly9jb2RlLmpxdWVyeS5jb20vanF1ZXJ5LTMuNC4xLm1pbi5qcwovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQoIiNjb250ZW50IikucHJlcGVuZChgCjxzdHlsZT4KLmJ0bnh7Ym9yZGVyOiAxcHggc29saWQgIzAwMDA2NjtoZWlnaHQ6IDIycHg7bWFyZ2luLXJpZ2h0OiA4cHg7bWFyZ2luLWJvdHRvbTo4cHg7cGFkZGluZy1sZWZ0OiAzcHg7cGFkZGluZy1yaWdodDogM3B4O2N1cnNvcjogcG9pbnRlcjt9CgoudGFicmVzdWx0IHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwNjY7CiAgICBwYWRkaW5nOiAxNXB4OwogICAgbWluLXdpZHRoOiA3NDJweDsKICAgIHdpZHRoOiA3NDJweDsKbWFyZ2luLWJvdHRvbTo4cHg7Cn0KI3RibHJlc3VsdHtib3JkZXI6IG5vbmU7IHdpZHRoOjEwMCV9Cjwvc3R5bGU+Cgo8ZGl2IGlkPSdyZXN1bHQnIHN0eWxlPSdkaXNwbGF5Om5vbmUnIGNsYXNzPSd0YWJyZXN1bHQnPgo8YnV0dG9uIGNsYXNzPSdidG54JyBpZD0nY3BzY3JpcHQnPkNvcHkgU2NyaXB0PC9idXR0b24+CjxidXR0b24gY2xhc3M9J2J0bngnIGlkPSdjbG9zZSc+Q2xvc2U8L2J1dHRvbj4KPHRhYmxlIGlkPSd0YmxyZXN1bHQnPjwvdGFibGU+CjwvZGl2PmAKKTsKICAgICQoIiNoZWFkZXJfc2VhcmNoIikuYXBwZW5kKCI8YSBocmVmPScjJyBpZD0nZ2V0c2NyaXB0JyBzdHlsZT0nY29sb3I6IzAwMDA2NjsnPkdldCBBZGRyZXNzIExpc3QgU2NyaXB0PC9hPiIpOwogICAgJCgiI2dldHNjcmlwdCIpLmNsaWNrKGZ1bmN0aW9uKCl7CgogICAgICAgICAgICBnZXRJUCgpOwogICAgfSkKCgogICAgJCgiI2Nwc2NyaXB0IikuY2xpY2soZnVuY3Rpb24oKXsKICAgICAgICBjb3B5VGFibGUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRibHJlc3VsdCIpKTsKICAgIH0pCiAgICAkKCIjY2xvc2UiKS5jbGljayhmdW5jdGlvbigpezsKICAgICAgICAkKCIjcmVzdWx0IikuaGlkZSgpCiAgICAgICAgJCgiI3RibHJlc3VsdCIpLmh0bWwoIiIpOwogICAgfSkKCgoKICAgIGZ1bmN0aW9uIGdldElQKCl7CiAgICAgICAgJCgiI3RibHJlc3VsdCIpLmh0bWwoIiIpOwogICAgICAgICQoIiN0YmxyZXN1bHQiKS5hcHBlbmQoIjx0cj48dGQ+L2lwIGZpcmV3YWxsIGFkZHJlc3MtbGlzdDwvdGQ+PC90cj4iKQogICAgICAgIHZhciB0ciA9ICQoJ3RhYmxlIHRyJykuZmlsdGVyKGZ1bmN0aW9uKCkgewogICAgICAgICAgICByZXR1cm4gICQodGhpcykuZmluZCgidGQiKTsKICAgICAgICB9KTsKCiAgICAgICAgdHIuZWFjaChmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIGxpc3QgPSIiOwogICAgICAgICAgICB2YXIgaXAgPSAoJCh0aGlzKS5maW5kKCdhJykuaHRtbCgpKTsKICAgICAgICAgICAgaWYobG9jYXRpb24uaHJlZi5zcGxpdCgiLyIpWzNdLnN1YnN0cigwLDIpID09ICJBUyIpewogICAgICAgICAgICAgICAgbGlzdCA9ICQoJyNoZWFkZXInKS5maW5kKCdhJylbMV0uaW5uZXJIVE1MLnNwbGl0KGxvY2F0aW9uLmhyZWYuc3BsaXQoIi8iKVszXS5zcGxpdCgnIycpWzBdKVsxXTsKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICBsaXN0ID0gJCgnI2hlYWRlcicpLmZpbmQoJ2gxJylbMF0uaW5uZXJIVE1MLnNwbGl0KCciJylbMV0uc3BsaXQoJyInKVswXTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZihpcCAmJiBpcC5zcGxpdCgiLiIpLmxlbmd0aCA9PSA0KXsKICAgICAgICAgICAgICAgICQoIiN0YmxyZXN1bHQiKS5hcHBlbmQoYDx0cj48dGQ+YWRkIGxpc3Q9ImArbGlzdCtgIiBhZGRyZXNzPWAraXArYDwvdGQ+PC90cj5gKTsKICAgICAgICAgICAgfQoKICAgICAgICB9KTsKICAgICAgICAgJCgiI3RibHJlc3VsdCIpLmFwcGVuZCgiPHRyPjx0ZD48L3RkPjwvdHI+Iik7CiAgICAgICAgJCgiI3Jlc3VsdCIpLnNob3coKTsKICAgIH0KCiAgICBmdW5jdGlvbiBjb3B5VGFibGUoZWwpIHsKICAgICAgICB2YXIgYm9keSA9IGRvY3VtZW50LmJvZHksIHJhbmdlLCBzZWw7CiAgICAgICAgaWYgKGRvY3VtZW50LmNyZWF0ZVJhbmdlICYmIHdpbmRvdy5nZXRTZWxlY3Rpb24pIHsKICAgICAgICAgICAgcmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpOwogICAgICAgICAgICBzZWwgPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7CiAgICAgICAgICAgIHNlbC5yZW1vdmVBbGxSYW5nZXMoKTsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhlbCk7CiAgICAgICAgICAgICAgICBzZWwuYWRkUmFuZ2UocmFuZ2UpOwogICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3ROb2RlKGVsKTsKICAgICAgICAgICAgICAgIHNlbC5hZGRSYW5nZShyYW5nZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKGJvZHkuY3JlYXRlVGV4dFJhbmdlKSB7CiAgICAgICAgICAgIHJhbmdlID0gYm9keS5jcmVhdGVUZXh0UmFuZ2UoKTsKICAgICAgICAgICAgcmFuZ2UubW92ZVRvRWxlbWVudFRleHQoZWwpOwogICAgICAgICAgICByYW5nZS5zZWxlY3QoKTsKICAgICAgICB9CiAgICAgICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoImNvcHkiKTsKICAgIH0KCn0pKCk7Cgo=","requires":[{"meta":{"name":"jquery-3.4.1.min.js","url":"http://code.jquery.com/jquery-3.4.1.min.js","ts":1699366297834,"mimetype":"text/javascript"},"source":""}]},{"name":"Remove Link Target","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://pahe.li/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1693425248565,"data":{}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/3039-link-target-blank-to-removal/code/Link%20Target%20'blank'%20to%20removal.user.js","uuid":"bcdf80d9-ac3a-4537-822e-536f3ad49e7d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIFJlbW92ZSBMaW5rIFRhcmdldAovLyBAY3JlYXRvciAgICAgICAga291c2kKLy8gQGRlc2NyaXB0aW9uICAgIFJlbW92ZXMgdGFyZ2V0IGF0dHJpYnV0ZSBjb21wbGV0ZWx5LgovLyBAdmVyc2lvbiAgICAgICAgMS4wCgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vcGFoZS5saS8qCi8vID09L1VzZXJTY3JpcHQ9PQoKdmFyIGxpbmtzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2EnKTsKCmZvciAodmFyIGkgPSBsaW5rcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgewogICBsaW5rc1tpXS5yZW1vdmVBdHRyaWJ1dGUoInRhcmdldCIpOwp9"},{"name":"Menghilangkan Web Limit","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1693425248565,"data":{}},"enabled":false,"position":4,"file_url":"https://greasyfork.org/scripts/18886-menghilangkan-web-limit/code/Menghilangkan%20Web%20Limit.user.js","uuid":"904741cd-a0be-4c60-882b-b63ecd98ca6d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWVzcGFjZSAgICAgICAgIGh0dHA6Ly93d3cuZm9ybmVzaWEuY29tCi8vIEBuYW1lICAgICAgICAgICAgICBNZW5naGlsYW5na2FuIFdlYiBMaW1pdAovLyBAZGVzY3JpcHRpb24gICAgICAgTWVuZ2hpbGFuZ2thbiBsaW1pdCBwYWRhIHdlYnNpdGUgeWFuZyB0aWRhayBiaXNhIGNvcHksIGN1dCwgc2VsZWN0IHRoZSB0ZXh0LCByaWdodC1jbGljayBtZW51LgovLyBAaG9tZXBhZ2VVUkwgICAgICAgaHR0cDovL3d3dy5mb3JuZXNpYS5jb20KLy8gQHN1cHBvcnRVUkwgICAgICAgIGh0dHA6Ly93d3cuZm9ybmVzaWEuY29tCgovLyBAYXV0aG9yICAgICAgICAgICAgZm9ybmVzaWFmcmVhawovLyBAdmVyc2lvbiAgICAgICAgICAgMS4wCi8vIEBsaWNlbnNlICAgICAgICAgICBMR1BMdjMKLy8gQGNvbXBhdGlibGUgICAgICAgIGNocm9tZSBDaHJvbWVfNDYuMC4yNDkwLjg2ICsgVGFtcGVyTW9ua2V5Ci8vIEBjb21wYXRpYmxlICAgICAgICBmaXJlZm94IEZpcmVmb3hfNDIuMCArIEdyZWFzZU1vbmtleQovLyBAY29tcGF0aWJsZSAgICAgICAgb3BlcmEgT3BlcmFfMzMuMC4xOTkwLjExNSArIFRhbXBlck1vbmtleQovLyBAY29tcGF0aWJsZSAgICAgICAgc2FmYXJpCi8vIEBtYXRjaCAgICAgICAgICAgICAqOi8vKi8qCi8vIEBncmFudCAgICAgICAgICAgICBub25lCi8vIEBydW4tYXQgICAgICAgICAgICBkb2N1bWVudC1zdGFydAovLyA9PS9Vc2VyU2NyaXB0PT0KJ3VzZSBzdHJpY3QnOwoKdmFyIHJ1bGVzID0gewogIGJsYWNrX3J1bGU6IHsKICAgIG5hbWU6ICJibGFjayIsCiAgICBob29rX2V2ZW50TmFtZXM6ICIiLAogICAgdW5ob29rX2V2ZW50TmFtZXM6ICIiCiAgfSwKICBkZWZhdWx0X3J1bGU6IHsKICAgIG5hbWU6ICJkZWZhdWx0IiwKICAgIGhvb2tfZXZlbnROYW1lczogImNvbnRleHRtZW51fHNlbGVjdHxzZWxlY3RzdGFydHxjb3B5fGN1dHxkcmFnc3RhcnQiLAogICAgdW5ob29rX2V2ZW50TmFtZXM6ICJtb3VzZWRvd258bW91c2V1cHxrZXlkb3dufGtleXVwIiwKICAgIGRvbTA6IHRydWUsCiAgICBob29rX2FkZEV2ZW50TGlzdGVuZXI6IHRydWUsCiAgICBob29rX3ByZXZlbnREZWZhdWx0OiB0cnVlLAogICAgaG9va19zZXRfcmV0dXJuVmFsdWU6IHRydWUsCiAgICBhZGRfY3NzOiB0cnVlCiAgfQp9OwoKdmFyIGxpc3RzID0gewoKICBibGFja19saXN0OiBbCiAgICAvLipcLnlvdXR1YmVcLmNvbS4qLywKICAgIC90cmFuc2xhdGVcLmdvb2dsZVwuLiovCiAgXQp9OwoKdmFyIGhvb2tfZXZlbnROYW1lcywgdW5ob29rX2V2ZW50TmFtZXMsIGV2ZW50TmFtZXM7Cgp2YXIgc3RvcmFnZU5hbWUgPSBnZXRSYW5kU3RyKCdxd2VydHl1aW9wYXNkZmdoamtsenhjdmJubVFXRVJUWVVJT1BBU0RGR0hKS0xaWENWQk5NJywgcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDEyICsgOCkpOwoKdmFyIEV2ZW50VGFyZ2V0X2FkZEV2ZW50TGlzdGVuZXIgPSBFdmVudFRhcmdldC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcjsKdmFyIGRvY3VtZW50X2FkZEV2ZW50TGlzdGVuZXIgPSBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyOwp2YXIgRXZlbnRfcHJldmVudERlZmF1bHQgPSBFdmVudC5wcm90b3R5cGUucHJldmVudERlZmF1bHQ7CgovLyBIb29rIGFkZEV2ZW50TGlzdGVuZXIgcHJvYwpmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKHR5cGUsIGZ1bmMsIHVzZUNhcHR1cmUpIHsKICB2YXIgX2FkZEV2ZW50TGlzdGVuZXIgPSB0aGlzID09PSBkb2N1bWVudCA/IGRvY3VtZW50X2FkZEV2ZW50TGlzdGVuZXIgOiBFdmVudFRhcmdldF9hZGRFdmVudExpc3RlbmVyOwogIGlmKGhvb2tfZXZlbnROYW1lcy5pbmRleE9mKHR5cGUpID49IDApIHsKICAgIF9hZGRFdmVudExpc3RlbmVyLmFwcGx5KHRoaXMsIFt0eXBlLCByZXR1cm5UcnVlLCB1c2VDYXB0dXJlXSk7CiAgfSBlbHNlIGlmKHVuaG9va19ldmVudE5hbWVzLmluZGV4T2YodHlwZSkgPj0gMCkgewogICAgdmFyIGZ1bmNzTmFtZSA9IHN0b3JhZ2VOYW1lICsgdHlwZSArICh1c2VDYXB0dXJlID8gJ3QnIDogJ2YnKTsKCiAgICBpZih0aGlzW2Z1bmNzTmFtZV0gPT09IHVuZGVmaW5lZCkgewogICAgICB0aGlzW2Z1bmNzTmFtZV0gPSBbXTsKICAgICAgX2FkZEV2ZW50TGlzdGVuZXIuYXBwbHkodGhpcywgW3R5cGUsIHVzZUNhcHR1cmUgPyB1bmhvb2tfdCA6IHVuaG9va19mLCB1c2VDYXB0dXJlXSk7CiAgICB9CgogICAgdGhpc1tmdW5jc05hbWVdLnB1c2goZnVuYykKICB9IGVsc2UgewogICAgX2FkZEV2ZW50TGlzdGVuZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Cn0KCmZ1bmN0aW9uIGNsZWFyTG9vcCgpIHsKICB2YXIgZWxlbWVudHMgPSBnZXRFbGVtZW50cygpOwoKICBmb3IodmFyIGkgaW4gZWxlbWVudHMpIHsKICAgIGZvcih2YXIgaiBpbiBldmVudE5hbWVzKSB7CiAgICAgIHZhciBuYW1lID0gJ29uJyArIGV2ZW50TmFtZXNbal07CiAgICAgIGlmKGVsZW1lbnRzW2ldW25hbWVdICE9IG51bGwgJiYgZWxlbWVudHNbaV1bbmFtZV0gIT0gb254eHgpIHsKICAgICAgICBpZih1bmhvb2tfZXZlbnROYW1lcy5pbmRleE9mKGV2ZW50TmFtZXNbal0pID49IDApIHsKICAgICAgICAgIGVsZW1lbnRzW2ldW3N0b3JhZ2VOYW1lICsgbmFtZV0gPSBlbGVtZW50c1tpXVtuYW1lXTsKICAgICAgICAgIGVsZW1lbnRzW2ldW25hbWVdID0gb254eHg7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGVsZW1lbnRzW2ldW25hbWVdID0gbnVsbDsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0KCmZ1bmN0aW9uIHJldHVyblRydWUoZSkgewogIHJldHVybiB0cnVlOwp9CmZ1bmN0aW9uIHVuaG9va190KGUpIHsKICByZXR1cm4gdW5ob29rKGUsIHRoaXMsIHN0b3JhZ2VOYW1lICsgZS50eXBlICsgJ3QnKTsKfQpmdW5jdGlvbiB1bmhvb2tfZihlKSB7CiAgcmV0dXJuIHVuaG9vayhlLCB0aGlzLCBzdG9yYWdlTmFtZSArIGUudHlwZSArICdmJyk7Cn0KZnVuY3Rpb24gdW5ob29rKGUsIHNlbGYsIGZ1bmNzTmFtZSkgewogIHZhciBsaXN0ID0gc2VsZltmdW5jc05hbWVdOwogIGZvcih2YXIgaSBpbiBsaXN0KSB7CiAgICBsaXN0W2ldKGUpOwogIH0KCiAgZS5yZXR1cm5WYWx1ZSA9IHRydWU7CiAgcmV0dXJuIHRydWU7Cn0KZnVuY3Rpb24gb254eHgoZSkgewogIHZhciBuYW1lID0gc3RvcmFnZU5hbWUgKyAnb24nICsgZS50eXBlOwogIHRoaXNbbmFtZV0oZSk7CgogIGUucmV0dXJuVmFsdWUgPSB0cnVlOwogIHJldHVybiB0cnVlOwp9CgpmdW5jdGlvbiBnZXRSYW5kU3RyKGNocywgbGVuKSB7CiAgdmFyIHN0ciA9ICcnOwoKICB3aGlsZShsZW4tLSkgewogICAgc3RyICs9IGNoc1twYXJzZUludChNYXRoLnJhbmRvbSgpICogY2hzLmxlbmd0aCldOwogIH0KCiAgcmV0dXJuIHN0cjsKfQoKCmZ1bmN0aW9uIGdldEVsZW1lbnRzKCkgewogIHZhciBlbGVtZW50cyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCcqJykpOwogIGVsZW1lbnRzLnB1c2goZG9jdW1lbnQpOwoKICByZXR1cm4gZWxlbWVudHM7Cn0KCmZ1bmN0aW9uIGFkZFN0eWxlKGNzcykgewogIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgc3R5bGUuaW5uZXJIVE1MID0gY3NzOwogIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpOwp9CgpmdW5jdGlvbiBnZXRSdWxlKHVybCkgewogIGZ1bmN0aW9uIHRlc3RVcmwobGlzdCwgdXJsKSB7CiAgICBmb3IodmFyIGkgaW4gbGlzdCkgewogICAgICBpZihsaXN0W2ldLnRlc3QodXJsKSkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgaWYodGVzdFVybChsaXN0cy5ibGFja19saXN0LCB1cmwpKSB7CiAgICByZXR1cm4gcnVsZXMuYmxhY2tfcnVsZTsKICB9CgogIHJldHVybiBydWxlcy5kZWZhdWx0X3J1bGU7Cn0KCgpmdW5jdGlvbiBpbml0KCkgewoKICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLmhvc3QgKyB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7CiAgdmFyIHJ1bGUgPSBnZXRSdWxlKHVybCk7CgogIGhvb2tfZXZlbnROYW1lcyA9IHJ1bGUuaG9va19ldmVudE5hbWVzLnNwbGl0KCJ8Iik7CiAgLy8gVE9ETyBBbGxvd2VkIHRvIHJldHVybiB2YWx1ZQogIHVuaG9va19ldmVudE5hbWVzID0gcnVsZS51bmhvb2tfZXZlbnROYW1lcy5zcGxpdCgifCIpOwogIGV2ZW50TmFtZXMgPSBob29rX2V2ZW50TmFtZXMuY29uY2F0KHVuaG9va19ldmVudE5hbWVzKTsKCiAgaWYocnVsZS5kb20wKSB7CiAgICBzZXRJbnRlcnZhbChjbGVhckxvb3AsIDMwICogMTAwMCk7CiAgICBzZXRUaW1lb3V0KGNsZWFyTG9vcCwgMjUwMCk7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGNsZWFyTG9vcCwgdHJ1ZSk7CiAgICBjbGVhckxvb3AoKTsKICB9CgogIC8vIGhvb2sgYWRkRXZlbnRMaXN0ZW5lcgogIGlmKHJ1bGUuaG9va19hZGRFdmVudExpc3RlbmVyKSB7CiAgICBFdmVudFRhcmdldC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lciA9IGFkZEV2ZW50TGlzdGVuZXI7CiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcjsKICB9CgogIC8vIGhvb2sgcHJldmVudERlZmF1bHQKICBpZihydWxlLmhvb2tfcHJldmVudERlZmF1bHQpIHsKICAgIEV2ZW50LnByb3RvdHlwZS5wcmV2ZW50RGVmYXVsdCA9IGZ1bmN0aW9uKCkgewogICAgICBpZihldmVudE5hbWVzLmluZGV4T2YodGhpcy50eXBlKSA8IDApIHsKICAgICAgICBFdmVudF9wcmV2ZW50RGVmYXVsdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CiAgICB9OwogIH0KCiAgLy8gSG9vayBzZXQgcmV0dXJuVmFsdWUKICBpZihydWxlLmhvb2tfc2V0X3JldHVyblZhbHVlKSB7CiAgICBFdmVudC5wcm90b3R5cGUuX19kZWZpbmVTZXR0ZXJfXygncmV0dXJuVmFsdWUnLCBmdW5jdGlvbigpIHsKICAgICAgaWYodGhpcy5yZXR1cm5WYWx1ZSAhPSB0cnVlICYmIGV2ZW50TmFtZXMuaW5kZXhPZih0aGlzLnR5cGUpID49IDApIHsKICAgICAgICB0aGlzLnJldHVyblZhbHVlID0gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgfQoKICBjb25zb2xlLmRlYnVnKCd1cmw6ICcgKyB1cmwsICdzdG9yYWdlTmFtZe+8micgKyBzdG9yYWdlTmFtZSwgJ3J1bGU6ICcgKyBydWxlLm5hbWUpOwoKICBpZihydWxlLmFkZF9jc3MpIHsKICAgIGFkZFN0eWxlKCdodG1sLCAqIHstd2Via2l0LXVzZXItc2VsZWN0OnRleHQhaW1wb3J0YW50OyAtbW96LXVzZXItc2VsZWN0OnRleHQhaW1wb3J0YW50O30nKTsKICB9Cn0KCmluaXQoKTsK"},{"name":"Instagram Download Button","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.instagram.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1693425248566,"data":{}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/406535-instagram-download-button/code/Instagram%20Download%20Button.user.js","uuid":"75bf9b9c-d4f3-4a13-90f2-5f41a49921c5","source":""},{"name":"Spotify Downloader (without login)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["178-79-138-81.ip.linodeusercontent.com","self"],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://open.spotify.com/*","https://178-79-138-81.ip.linodeusercontent.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1696143162357,"data":{"CORS_locked":"bfalse"}},"enabled":false,"position":6,"file_url":"https://greasyfork.org/scripts/435650-spotify-downloader-without-login/code/Spotify%20Downloader%20(without%20login).user.js","uuid":"511d04eb-4e1a-4ff0-a8fd-ac1977bd13e8","source":"","requires":[{"meta":{"name":"FileSaver.min.js","url":"https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js","ts":1696143165518,"mimetype":"text/javascript"},"source":"KGZ1bmN0aW9uKGEsYil7aWYoImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZClkZWZpbmUoW10sYik7ZWxzZSBpZigidW5kZWZpbmVkIiE9dHlwZW9mIGV4cG9ydHMpYigpO2Vsc2V7YigpLGEuRmlsZVNhdmVyPXtleHBvcnRzOnt9fS5leHBvcnRzfX0pKHRoaXMsZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhLGIpe3JldHVybiJ1bmRlZmluZWQiPT10eXBlb2YgYj9iPXthdXRvQm9tOiExfToib2JqZWN0IiE9dHlwZW9mIGImJihjb25zb2xlLndhcm4oIkRlcHJlY2F0ZWQ6IEV4cGVjdGVkIHRoaXJkIGFyZ3VtZW50IHRvIGJlIGEgb2JqZWN0IiksYj17YXV0b0JvbTohYn0pLGIuYXV0b0JvbSYmL15ccyooPzp0ZXh0XC9cUyp8YXBwbGljYXRpb25cL3htbHxcUypcL1xTKlwreG1sKVxzKjsuKmNoYXJzZXRccyo9XHMqdXRmLTgvaS50ZXN0KGEudHlwZSk/bmV3IEJsb2IoWyJcdUZFRkYiLGFdLHt0eXBlOmEudHlwZX0pOmF9ZnVuY3Rpb24gYyhhLGIsYyl7dmFyIGQ9bmV3IFhNTEh0dHBSZXF1ZXN0O2Qub3BlbigiR0VUIixhKSxkLnJlc3BvbnNlVHlwZT0iYmxvYiIsZC5vbmxvYWQ9ZnVuY3Rpb24oKXtnKGQucmVzcG9uc2UsYixjKX0sZC5vbmVycm9yPWZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcigiY291bGQgbm90IGRvd25sb2FkIGZpbGUiKX0sZC5zZW5kKCl9ZnVuY3Rpb24gZChhKXt2YXIgYj1uZXcgWE1MSHR0cFJlcXVlc3Q7Yi5vcGVuKCJIRUFEIixhLCExKTt0cnl7Yi5zZW5kKCl9Y2F0Y2goYSl7fXJldHVybiAyMDA8PWIuc3RhdHVzJiYyOTk+PWIuc3RhdHVzfWZ1bmN0aW9uIGUoYSl7dHJ5e2EuZGlzcGF0Y2hFdmVudChuZXcgTW91c2VFdmVudCgiY2xpY2siKSl9Y2F0Y2goYyl7dmFyIGI9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoIk1vdXNlRXZlbnRzIik7Yi5pbml0TW91c2VFdmVudCgiY2xpY2siLCEwLCEwLHdpbmRvdywwLDAsMCw4MCwyMCwhMSwhMSwhMSwhMSwwLG51bGwpLGEuZGlzcGF0Y2hFdmVudChiKX19dmFyIGY9Im9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvdy53aW5kb3c9PT13aW5kb3c/d2luZG93OiJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZi5zZWxmPT09c2VsZj9zZWxmOiJvYmplY3QiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWwuZ2xvYmFsPT09Z2xvYmFsP2dsb2JhbDp2b2lkIDAsYT1mLm5hdmlnYXRvciYmL01hY2ludG9zaC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSYmL0FwcGxlV2ViS2l0Ly50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpJiYhL1NhZmFyaS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxnPWYuc2F2ZUFzfHwoIm9iamVjdCIhPXR5cGVvZiB3aW5kb3d8fHdpbmRvdyE9PWY/ZnVuY3Rpb24oKXt9OiJkb3dubG9hZCJpbiBIVE1MQW5jaG9yRWxlbWVudC5wcm90b3R5cGUmJiFhP2Z1bmN0aW9uKGIsZyxoKXt2YXIgaT1mLlVSTHx8Zi53ZWJraXRVUkwsaj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7Zz1nfHxiLm5hbWV8fCJkb3dubG9hZCIsai5kb3dubG9hZD1nLGoucmVsPSJub29wZW5lciIsInN0cmluZyI9PXR5cGVvZiBiPyhqLmhyZWY9YixqLm9yaWdpbj09PWxvY2F0aW9uLm9yaWdpbj9lKGopOmQoai5ocmVmKT9jKGIsZyxoKTplKGosai50YXJnZXQ9Il9ibGFuayIpKTooai5ocmVmPWkuY3JlYXRlT2JqZWN0VVJMKGIpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtpLnJldm9rZU9iamVjdFVSTChqLmhyZWYpfSw0RTQpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKGopfSwwKSl9OiJtc1NhdmVPck9wZW5CbG9iImluIG5hdmlnYXRvcj9mdW5jdGlvbihmLGcsaCl7aWYoZz1nfHxmLm5hbWV8fCJkb3dubG9hZCIsInN0cmluZyIhPXR5cGVvZiBmKW5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iKGIoZixoKSxnKTtlbHNlIGlmKGQoZikpYyhmLGcsaCk7ZWxzZXt2YXIgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7aS5ocmVmPWYsaS50YXJnZXQ9Il9ibGFuayIsc2V0VGltZW91dChmdW5jdGlvbigpe2UoaSl9KX19OmZ1bmN0aW9uKGIsZCxlLGcpe2lmKGc9Z3x8b3BlbigiIiwiX2JsYW5rIiksZyYmKGcuZG9jdW1lbnQudGl0bGU9Zy5kb2N1bWVudC5ib2R5LmlubmVyVGV4dD0iZG93bmxvYWRpbmcuLi4iKSwic3RyaW5nIj09dHlwZW9mIGIpcmV0dXJuIGMoYixkLGUpO3ZhciBoPSJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0iPT09Yi50eXBlLGk9L2NvbnN0cnVjdG9yL2kudGVzdChmLkhUTUxFbGVtZW50KXx8Zi5zYWZhcmksaj0vQ3JpT1NcL1tcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO2lmKChqfHxoJiZpfHxhKSYmInVuZGVmaW5lZCIhPXR5cGVvZiBGaWxlUmVhZGVyKXt2YXIgaz1uZXcgRmlsZVJlYWRlcjtrLm9ubG9hZGVuZD1mdW5jdGlvbigpe3ZhciBhPWsucmVzdWx0O2E9aj9hOmEucmVwbGFjZSgvXmRhdGE6W147XSo7LywiZGF0YTphdHRhY2htZW50L2ZpbGU7IiksZz9nLmxvY2F0aW9uLmhyZWY9YTpsb2NhdGlvbj1hLGc9bnVsbH0say5yZWFkQXNEYXRhVVJMKGIpfWVsc2V7dmFyIGw9Zi5VUkx8fGYud2Via2l0VVJMLG09bC5jcmVhdGVPYmplY3RVUkwoYik7Zz9nLmxvY2F0aW9uPW06bG9jYXRpb24uaHJlZj1tLGc9bnVsbCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bC5yZXZva2VPYmplY3RVUkwobSl9LDRFNCl9fSk7Zi5zYXZlQXM9Zy5zYXZlQXM9ZywidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmKG1vZHVsZS5leHBvcnRzPWcpfSk7CgovLyMgc291cmNlTWFwcGluZ1VSTD1GaWxlU2F2ZXIubWluLmpzLm1hcA=="}]},{"name":"Bypass All Shortlinks","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["*://studio.youtube.com/*","*://*.vosan.co/"],"orig_includes":["/^(https?:\\/\\/)(tmearn|makemoneywithurl|shrinkearn|techcyan|link4m|kingsleynyc|modcombo|healthy4pepole|kiktu|1bitspace|pennbookcenter|publicananker|mikl4forex|michaelemad|miklpro|forex-golds|mosqam|semawur|newassets.hcaptcha|challenges.cloudflare|riviwi|doshrink|tophostingapp|calmgram|techmny|yeifly|kiddyshort|kisalt|fatednews|forex-trnd|literaturetimes|onlineincoms|modsfire|short.clickscoin|adclickersbot|mobitaak|modebaca|paylinnk|pubiza|100puan|viralxns|gocmod|bestadvise4u|10short|cuts-url|popimed|toryxlink|aduzz|cdrab|ibrabucks|ethiomi|shortenbuddy|kiemlua|smoner|djbhojpurisongs|modsbase|ac.totsugeki|bcvc2|earnwithshortlink|bitzite|link1s|diadiemcheckin|chooyomi|staaker|lucidcam|linkjust|admediaflex|rekonise|nostralink|bitcotasks|saa3at|mensventure|playpaste|anchurl|neverdims|coincroco|syflink|adlvy|forex-articles|ponselharian|liinkat|thegoneapp|mobi2c|studyuo|hookeaudio|thehostingmentor|linkshortify|mohtawaa|sodocasino68z|dz4link|foodxor|short1s|cr3zyblog|w88th2|fc-lc|expertvn|downphanmem|healdad|ez4mods|try2link|soft3arbi|techyadjectives|ex-foary|blogmado|mgnetu|videoslyrics|api-secure.solvemedia|duplichecke|viralsinfo|coin-free|1xfaucet|cafenau|techacode|sevenjournals|7misr4day|trflink|get4links|memangbau|world2our|vavada5com|bitefaucet|nguyenvanbao|pubgquotes|gaminginfos|sama-pro|bestmobilenew|olhonagrana|chedrives|adrinolinks|techloadz|atglinks|nulledsafe|dreamcheeky|cutpaid|fidlarmusic|rodjulian|webhostingpost|tremamnon|samaa-pro|techrfour|ez4short|skincarie|techrayzer|shorteet|tranquangchuan|blogginglass|1shorten|loptelink|charexempire|shotzon|appsblaze|wellness4live|karanpc|yummy-reciepes|link.bigboxnet|bioinflu|chamcuuhoc|litexblog|ezeviral|urlsopen|1shortlink|linkerload|filenext|doodshort|kienthucrangmieng|adsafelink|cbshort|checkscoin|llinkon|links.apksvip|anhdep24|letsiu|earncryptowrs|cutdomain|usersdrive|uploadrar|krakenfiles|post.copydev|icutlink|starxinvestor|sugarona|linksae|homeculina|short-zero|insurancevela|poketoonworld|arahtekno|mopahealth|nghiencar|educur|bstlar|uploadhaven|aceskip|ecwizon|oncehelp|cutwin|reshort|netflixrelease|recipese|otomi-games|sportsmediaz|techymozo|novelsapps|tirailangit|intercelestial|tribuntekno|bestcash2020|hoxiin|fooot-map|priefy|uptobox|1fichier|freebrightsoft|cutyurls|dz-linkk|chinhnhacoban|autodime|cortaly|link.3dmili|indianshortner|shortyearn|mp4upload|myshrinker|url.namaidani|userscloud|mkomsel|niinga|uppit|donia-tech|donia2tech|donia2link|btafile|pdiskshortener|aljoodm98|shortzon|up4cash|newsharsh|examkhata|linksht|note1s|teknosimple|discordserv|wikitraveltips|bantenexis|weadown|websiu|link.turkdown|pdfcoffee|faucetgigs|huongdanvuotlink123.blogspot|cuanhapkhau|traffic1s|leaveadvice|coins-town|zero-short|esopress|appsinsta|link-yz|apkadmin|ayelads|gawbne|sharemods|ddownload|asideway|drive.google|safe.intipanime|workupload|filedm|beingtek|sub2get|bindaaslinks|ex-load|xdabo|tanytech|social-unlock|short-jambo|lyricsbaazaar|aprovax|vn88goat|shrinklo|xemsport|adpaylink|yxoshort|mdiskurl|cashlinko|ggoklink|mneylink|alpinecorporate|highkeyfinance|best-cpm|clicksfly|megaupto|ufacw|softechbharat|okrzone|adshnk|sub2unlock|oydisk|besargaji|netpopads|adflyfly|monimag|8raa|ikrey|tipsli|urlpayout|urlpoints|hocbeauty|95news|link.get4llink|shrt10|linknih|techkeshri|shrinkgold|itechmafiia|link4earn|hosting4lifetime|oyunfilmindir|maxurlz|digitalmarktrend|newztalkies|bitsusdt|mr-forex|leadcricket|88betbongda|sodovns|iwin68m|shrinkcash|dhlgame|bloginkz|blogtechh|hypershort|shorteurl|adrate|slinkware|foodupe|rshrt|easyworldbusiness|dr-forex|indiajobagency|dz4link1|xpshort|urlshortx|blog.freeoseocheck|bico8|web1s|gogodl|infinityskull|doodjob|link2m|krownlinks|tvseriesnmoviesdl|tgshortener|cut-shortlink|lollty|sheralinks|leitup|dev.miuiflash|techyreviewx|shortox|bankvacency|bitcoinwinco|3rabsports|crazysonglyrics|forexrw7|mangareleasedate|goaibox|gpl-market|timeforearn|link4m|amritadrino|tutorialsaya|revadvert|fx-22|encurtandourl|mixrootmods|mealcold|cutpaidad|allsoftdrivers|cryptfaucet|hotmediahub|tai-mui-hong|adrevlnks|w88linkz|vailonxx|hocreview|sodo66vn|gyanilinks|hamrolekh|minersim|heenglish|comohoy|appkamods|entutes|coinsrev|komikman|bicolink|reshortfly|khoruou-gourmet|contentmenarik|altechen|socialwolvez|lifeezee|rsfinanceinfo|rssoftwareinfo|rshostinginfo|bk8goat|camnangvay|pixeldrain|finoxpert|zegtrends|blackleadr|nestshortener|shortcuthigh|perokokbijak|mneyvip|paste1s|rsshort|rsinsuranceinfo|rsadnetworkinfo|rseducationinfo|adwerty|devuploads|mega4upload|dropgalaxy|houseofblogger|crypto4yu|doodrive|wooseotools|manofadan|yogablogfit|alivedesktop|cut-fly|7r6|linkmonetizers|mcafee-com|mrproblogger|exeurl|usdshort|octolinkz|healthfirstweb|kenzo-flowertag|kojnews|zimabadko|interestingfactsare|anonbar|indirasari|indiansarkari|ignitesmm|truevpnlover|quick91|housezquick|dpbossreal|prakasheditingtamizhan|nisnisin|halosenja|educateenlaweb|bilwards|gadgbuy|te-it|cryptosparatodos|leechpub|swiftlnx|mamahawa|copy-paste-fonts|freemodapp)(\\.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(cararegistrasi|5golink|birdurls|snkra|artiskini|byboe|medcpu|nousdecor|jobswd|gkqnaexam|imperialstudy|linktrims|filepresident|eda-ah|restorbio|upshrink|gifans|ovlinks|imagenesderopaparaperros|digiromotion|wingifta|rancah|delishwell|ourtecads|zubatecno|covemarkets|disheye|askpaccosi|gets4link|elwatanelyoum|ledifha|crypturls|zombiebtc|techwhom|claimbtcbits|techsamir|techymedies|gamelopte|snowurl|claimfey|panylink|wrbloggers|tokenoto|sxslink|saly-cash|nyawang|kongutoday|softwaresolutionshere|insuranceleadsinfo|bitcosite|clink1|upmienphi|coinsward|clink2|gadgetsreview27|anywho-com|teamtechnews|miuiku|upload-4ever|admediaflex|btcpany|assettoworld|vikashmewada|linkyearn|appsbull|gam3ah|tinybc|diudemy|hereofamily|urlcorner|phsensei|4shared|ta2deem7arbya|solarchaine|file-upload|shorterall|tribuncrypto|cempakajaya|safelinkduit|tinycmd|cloudshrinker|proviralhost|technicalatg|v2links|ytsubme|rainurl|arahlink|m4cut|teachsansar|web9academy|flyrar|pythondunyasi|on-scroll|shrtfly|earnash|hipsonyc|sonicbtc|menjelajahi|financerites|itscybertech|maqal360|sahityt|techhadi|lolinez|paid4link|dash-free|sekilastekno|almontsf|cash4share|freevpshere|kredilerim|porterfuneralhomee|aghtas|proappapk|toilaquantri|youssefsayed|aracodes|remixsounds|blogsward|wiki-topia|pinloker|publicearn|uploadsoon|paid4file|gyanitheme|howifx|vocalley|factsdunya|blogyindia|networkhint|pernahsukses|vnshortener|gamingwithtr|udrop|rezence|businessnews-nigeria|elmokhbir|forexscp|youtube|pnfreegames|miuiflash|ishortify|thebindaas|vipalalmania|viewfr|startoshi|adbitfly|shrinkads|newsturbovid|helpdeep|mazen-ve3|thefastpost|encurtaclik|wiour|mtraffics|povathemes|viewboonposts|manga2day|golinki|tensailab|adslinko|linkpio|zainylink|urlblink|ezlinkad|adlinku|rapid-cut|earn2me|shorturllinks|suaurl|greenenez|creditsalah|cybertechng|icashfly|tbhlabsnews|foxbugg|earn2link|mplaylink|techkeshri|linkindo|sakarnewz|eductin|rtilinks|vebma|dreamistore|deimoney|adcorto|newworldnew|tackaway|shtfly)(\\.com)(\\/.*)/","/^(https?:\\/\\/)(ourcoincash|1manga|watchdoge|arenaboard|ccsl|shon|studystar|linkawynet|stryt|stfly|deltabtc|nishankhatri|techthematter|moinsider|short-cash2|wizzly|mgnet|cutdl|sportawy|fexkomin|technemo|99links|bastinews|offrcms|tsinfo|shortlinkto|post.nites-tv|shortplus|techyuth|kukslincs|aku2x|stores.filmyzilla-in|swzz|wizly|horanews|bcvc|healthbloog|mmdrive|egstar|playdisk|studyis|magictoshi|link2money|mkvlinks|nabits|short2url|satoshi-hunter|hasri|blog.movies-near-me|st.kleaco|playlink|satoshi-win|my-coins|ez4short|yalifin|lrncook|animeop|vidoza|linkvibe|strfree|cutyso)(\\.xyz)(\\/.*)/","/^(https?:\\/\\/)(.+)?(senuansatechno|claimercorner|shortly|doctorcoin|speedynews|1apple|ffworld|textpage|pcomnews|earnfacut|healthysamy|coin2pay|fc-lc|urlbharat|dropz|chainfo|techleets|earnl|shortpay|modmakers|kyshort|trxking|aoutoqw|tsinfo|financeandinsurance|mangafun|opli|beycoin|insurancepost|lifeinsurancesblog|hexlinks|ushort|alghtas|multiquality)(\\.xyz)(\\/.*)/","/^(https?:\\/\\/)(techydino|world-trips|yoshare|lets.5get|healthmedic|crypto-fi|wpcheap|catcut|aztravels|dulichkhanhhoa|sub2unlock|dataupload|cutsy|7apple|ccurl|link1s|url.namaidani|adskip|hurirk|usfinf|xervoo|hexupload|eloism|cutt|blog.cryptowidgets|neexulro|dailyuploads|douploads|simfileshare|fir3|magybu|racaty|linegee|blogesque|altblogger|letsboost|conghuongtu|vinaurl|try2link|blog.coinsvalue|8tm|traffic24h|shortearn|megadb|cpmlink|rslinks|dupload|userupload|oaxyteek|xonnews|bluetechno|w88vnz|tmearn|click1s|turbobit|megaup|hitfile|cutearn|hislink|financeyogi|sahlmarketing|rapidgator|blogbux|otechno|fileresources|freepreset|gold-24|shortenurls|offerinfo|revcut|mvplaylink.in|dilink|slfly|dainiknews)(\\.net)(\\/.*)/","/^(https?:\\/\\/)(.+)?(owllink|mozlink|cryptosats|rocklinks|jiotech|illink|jemari|paid4link|link3s|boscoin|linkrex|youshort|yosite|fileku|omnifly.in|up-4ever|bicolink|cookinguide|indiurl.in|webfreetools|themezon|tnshort|makeupguide|carstopia|btcsatoshi|hostadviser|carsmania|khaddavi|file-upload|superfastdownloads)(\\.net)(\\/.*)/","/^(https?:\\/\\/)(tnlink|jrlinks|qualitystudymaterial|missionhight|wpking|zagl|cutp|cplink|cryptomonitor|linkshortify|htlinks|linkocean|djxmaza|bildirim|battlechamp|urlcut|insurancevlog|videolyrics|tekcrypt|missionhight|gplinks|moddingzone|adybrands|gz2|dulink|aclinks|hidelinks|shortearn|thebestwishes|mrdoge|s2fly|thebloggerspoint|technocubes|afly|healthynepal|djnonstopmusic|omegalinks|jobform|kingbit.co|adbitfly|greylinks|djqunjab|rontymobile|jomeramankahe|pmkisanlists|trends99|link.skm4u.co|cutp|du-link|ouoi|by6|adrinolinks|techdaze|link4earn|examsolution|earn4link|ibyt|flyurl|naukrilelo|nanolinks|linkpays|computerpedia|apkupload|banaraswap|bookszone|file-upload|freebitco|nregajobcard|easytoclick|hiharshit|cryptokaro.co|pdiskpro|adiskblog|cyberurl|cyberstockofficial|rojgargovernment|urlspay|linksbanao|apna-blog|shortsnob|flashlinks|healthynepal|dalink|cinemapettai|battlechamp|abhikr|sklinks|suntechu|airlike|cafeurl|kpslink|satyaclub)(\\.in)(\\/.*)/","/^(https?:\\/\\/)(.+)?(crazyblog|technologylover|largestpanel|rsrlink|short2url|99links|enit|url2go|tnvalue|pvidly|mdlink|gamerfang|writedroid|teckypress|fixno|paisakamalo|inkik|shrinkforearn|easysky|akcartoons|open2get|adzz|qora|insurancegold|smallinfo|filmypoints|viplink|e2share|shorturllink|opiniontoday|theforyou|sigmalinks|techyinfo|btcbitco|apnashortener|megafly|megaurl|tplinks|meclipstudy|v2links|finclub|greymatterslinks|shareus|apanmusic|techyblogs|earnmoj|world4u|vslinks|dtglinks|filohappy|webseriesreel|pglink|insuranceinfos|exurl|snaply|skdlink|urllinkshort|warrenrahul|onepagelink|gorating|tarabox|urlpay|clockads)(\\.in)(\\/.*)?/","/^(https?:\\/\\/)(.+)?(azmath|mobilereview|shortlinkto|wez|bitcrypto|cooklike|videoclip|brbushare|fanclup|nulledlist|coinscap|1short|69vn|web1s|missreview|horoscop|nullscript|every-crypto|ajlinks|bit4me|sportweb|shortlinks|10short|shrinkme)(\\.info)(\\/.*)/","/^(https?:\\/\\/)(karyawan.co|rotator.nurul-huda.sch|arahlink|linkk|free4u.nurul-huda.or|mydata.my|healthydad.my|lajangspot.web|mbantul.my)(\\.id)(\\/.*)/","/^(https?:\\/\\/)(.+)?(suratresmi|carapedi|mycut.my|apasih.my|wapka|tonanmedia.my|moviepagol.my)(\\.id)(\\/.*)/","/^(https?:\\/\\/)(aylink|mynewsmedia|gtlink|droplink|123link|hxfile|dosya|takem|dausel|5tl|desiupload|tech5s|10short|veganac|dealprice|arabplus2|adshort|sub2me|gplinks|web1s|ku11net|mixdrop|reminimod|keralalotteryresult)(\\.co)(\\/.*)/","/^(https?:\\/\\/)(.+)?(takez|linksfire|vosan|tinygo|veganab|adfloz|fexkomin|linksly|finsurances)(\\.co)(\\/.*)/","/^(https?:\\/\\/)(girls-like|gobits|zoss|tlin|terafly|gigafly|adnews|papanews|panyflay|mozzfly|shortus|short.croclix|best-news|4cash|wildblog|dddrive|linkpoi|m.newhit|mboost|linkshorts|lozzfly|uptomega|stfly|adbull|youshort|health-and|adsk|linkfly|appdrive|shorter.earn-hub|pkin|cashando|hunterkiller|acortalink|ar-goal|linkdam|adzully|adbully|zumpa|botfly|weezo|gtlinks|krownlinks|blog24|sh24|dbree|hubdrive)(\\.me)(\\/.*)/","/^(https?:\\/\\/)(.+)?(theconomy|qnix|hatelink|shrinke|skiplink|airlike)(\\.me)(\\/.*)/","/^(https?:\\/\\/)(newforex|wplink|nbyts|wealthystyle|clicksfly|happy-living|webcoin.coinrain|teacherana|earnow|earn-cash|yourtechnology|apks|network-earn|shopforex|o-pro|wedocrypto|softindexsite|ea-shorter.earn-hub|kooora365|flylinks|vslinks|getslinks|pglink|dailynew|cutyso|earn-bitcoin|ludofantsypk|panytourism|wikiversity|exactpay|seulink|adsluffa|flashlinks|clickmais)(\\.online)(\\/.*)/","/^(https?:\\/\\/)(.+)?(readi|linkmumet|shorte|battleroyal|kjcrypto|litecoinly|techeysub|forexit|o-pro|animalwallpapers|mphealth|moviestore|inicerita)(\\.online)(\\/.*)/","/^(https?:\\/\\/)(downfile|savelink|linkshortify|short1|forextrader|shortener.goldcontent|lksfy|1xlink|savelink|busthings|icerik|adfly|metasafelink|iphoto)(\\.site)(\\/.*)/","/^(https?:\\/\\/)(.+)?(cekip|link4rev|urlcash|alwrificlick|softindex|bitlinks|shtfly|foxylinks|dclink|linksbanao|bluemediafile|flyearn|claimbits|promo-visits)(\\.site)(\\/.*)/","/^(https?:\\/\\/)(bluemediafile|tourismtravels4)(\\.sbs)(\\/.*)/","/^(https?:\\/\\/)(earnme|sanoybonito|automotur|kooza|1link|zentum|forexwaw|megatube|88bet1|clicknupload)(\\.club)(\\/.*)/","/^(https?:\\/\\/)(.+)?(usanewstoday|webhostingtips|mytop5)(\\.club)(\\/.*)/","/^(https?:\\/\\/)(adrev|paid4|yousm|coinpayz|tr|tfly|sox|besturl|boostme|takefile|appo|panyshort|mdiskshortner|leit|shortano|shortino|bildirim|healthmart|kwee)(\\.link)(\\/.*)/","/^(https?:\\/\\/)(.+)?(cash4|zuba|adsen|shrinkme|shrs|linksfly)(\\.link)(\\/.*)/","/^(https?:\\/\\/)(shurt|shortit|adsy|clik|playstore|megalink|link4)(\\.pw)(\\/.*)/","/^(https?:\\/\\/)(.+)?(prz|pong|insfly|wts|sollink|linkvor)(\\.pw)(\\/.*)/","/^(https?:\\/\\/)(onimports|link.encurtaon|economiarelevante)(\\.com\\.br)(\\/.*)/","/^(https?:\\/\\/)(.+)?(kiiw|passgen|wordcounter|shrink|flyzu|cpm|viply|v2p)(\\.icu)(\\/.*)/","/^(https?:\\/\\/)(.+)?(claimcrypto|1ink|linkpay|moneylink|linkspy|linx|adurly|getlink|stfly)(\\.cc)(\\/.*)/","/^(https?:\\/\\/)(exey|ezlinks|techmody|ouo|uploady|racaty|1short|earnlink|casinotructuyen|vn88|blitly|saly|cuty|oke|eio|oii|exe|shrinkme|up-load|gofile|apkmody|easycut|web1s|shareus|getdashcoin|linkvip|adclicker)(\\.io)(\\/.*)/","/^(https?:\\/\\/)(.+)?(linkfly|usalink|shorti|datacheap)(\\.io)(\\/.*)/","/^(https?:\\/\\/)(cryptoad|wikile|uploadev|cshort|payskip|homeairquality|sl.btc25|earnsfly|linkbong88moinhat|oploverz|kusonime|komikindo|multiup|novafile|mkvflix)(\\.org)(\\/.*)/","/^(https?:\\/\\/)(.+)?(medipost|keeplinks|rajdlsg|readbitcoin|writedroid.eu|modmania.eu|uprwssp)(\\.org)(\\/.*)/","/^(https?:\\/\\/)(.+)?(jameeltips|mitly|adfoc|shrinke|vzu|topfaucet|coingraph|faho)(\\.us)(\\/.*)/","/^(https?:\\/\\/)(.+)?(adshort|1bit|2the|careerhunter|galaxy-link|adz7short|oscut|cryptonworld|dutchycorp|cryptotracker|cryptednews)(\\.space)(\\/.*)/","/^(https?:\\/\\/)(noweconomy|deportealdia|adshort|ay|pngit|pndx|tyzen)(\\.live)(\\/.*)/","/^(https?:\\/\\/)(.+)?(genpassword|shrlink|freeltc|vielink|freebinance|freecrypto|linksfly|bestshortlink|vietnamtravelguide|24payu)(\\.top)(\\/.*)/","/^(https?:\\/\\/)(1Link|dropgalaxy|smartlink|1mlink)(\\.vip)(\\/.*)/","/^(https?:\\/\\/)(.+)?(flyad|lootcash|manylink)(\\.vip)(\\/.*)/","/^(https?:\\/\\/)(faucetcrypto|bildirim|beta.shortearn)(\\.eu)(\\/.*)/","/^(https?:\\/\\/)(antonimos|blog.hostratgeber|sinonimos)(\\.de)(\\/.*)/","/^(https?:\\/\\/)(romania|met|warp)(\\.bz)(\\/.*)/","/^(https?:\\/\\/)(2ad|viya|17o)(\\.ir)(\\/.*)/","/^(https?:\\/\\/)(cut|fc)(\\.lc)(\\/.*)/","/^(https?:\\/\\/)(pingit|upo)(\\.im)(\\/.*)/","/^(https?:\\/\\/)(adshrink|trendzilla)(\\.it)(\\/.*)/","/^(https?:\\/\\/)(clk|9xupload|mg188|adbrite|web1s)(\\.asia)(\\/.*)/","/^(https?:\\/\\/)(aii|clk|oko|ctr|mexa|sht|pro)(\\.sh)(\\/.*)/","/^(https?:\\/\\/)(iir|tei|ier|ckk)(\\.ai)(\\/.*)/","/^(https?:\\/\\/)(.+)?(ptr|mdn|neonime)(\\.lol)(\\/.*)/","/^(https?:\\/\\/)(.+)?(goo|oxy|clk)(\\.st)(\\/.*)/","/^(https?:\\/\\/)(.+)?(paylinks|oxy)(\\.cloud)(\\/.*)/","/^(https?:\\/\\/)(.+)?(mirrored|clicknupload|hec|render-state)(\\.to)(\\/.*)/","/^(https?:\\/\\/)(.+)?(forextrader|daga88)(\\.today)(\\/.*)/","/^(https?:\\/\\/)(.+)?(techgeek|seulink)(\\.digital)(\\/.*)/","/^(https?:\\/\\/)(.+)?(goto.com|nishankhatri.com)(\\.np)(\\/.*)/","/^(https?:\\/\\/)(.+)?(360shortlink|escobarvip)(\\.cf)(\\/.*)/","/^(https?:\\/\\/)(.+)?(clk|bcvc|beast|boost|uptobhai|work|5tl|gainl|adpayl)(\\.ink)(\\/.*)/","/^(https?:\\/\\/)(.+)?(mhma12|surflink|techtrim|yotrickslog|shortlinks|tamilhit|sklinks)(\\.tech)(\\/.*)/","/^(https?:\\/\\/)(adz|komikcast)(\\.moe)(\\/.*)/","/^(https?:\\/\\/)(1dogecoin|faucet|cpu-miner.leaks)(\\.work)(\\/.*)/","/^(https?:\\/\\/)(.+)?(123link|shorturl)(\\.biz)(\\/.*)/","/^(https?:\\/\\/)(.+)?(exe|exee|exeo|cutty|linkfly|rsgamer|exego)(\\.app)(\\/.*)/","/^(https?:\\/\\/)(.+)?(adlink|urlcash|freebitcoin|urlcashh|revly|clicknupload|workink|xtrabits|adbitfly)(\\.click)(\\/.*)/","/^(https?:\\/\\/)(.+)?(hamody|nathanaeldan|freddyoctavio|davisonbarker|clks|cryptosh|bestfonts|gitlink|bitads|afly|mdisk|earnify|inshort|bestlink|10short|wikiall|linkco|urlcut)(\\.pro)(\\/.*)/","/^(https?:\\/\\/)(claim|pricenews|alaashow|bitclick|adsbtc|moburl|clicklink|bitcoinfaucet|terabox|exalink|oscut)(\\.fun)(\\/.*)/","/^(https?:\\/\\/)(.+)?(apkmody|freetrx|aiimgvlog)(\\.fun)(\\/.*)/","/^(https?:\\/\\/)(.+)?(coinhub|clk)(\\.wiki)(\\/.*)/","/^(https?:\\/\\/)(linkati|curto|mg188|freebitcoin|bigbtc|firefaucet)(\\.win)(\\/.*)/","/^(https?:\\/\\/)(zonearn|hynews)(\\.biz)(\\/.*)/","/^https:\\/\\/linkvertise\\.com\\/(1|2|3|4|5|6|7|8|9)/","/^(https?:\\/\\/)(.+)?(nhacaiuytin|sv388|ify)(\\.ac)(\\/.*)/","/^(https?:\\/\\/)(.+)?(mediafire)(\\.com)\\/(download|file)/","/^(https?:\\/\\/)(.+)?(cryptocurrencytracker|freefaucet)(\\.biz)\\/(link)/","/^(https?:\\/\\/)(.+)?(thanglonggroup|bigone|kienvang|silcot.com|bemom.com|sunflowersteiner.edu|phongcachsao)(\\.vn)(\\/.*)/","/^(https?:\\/\\/)(.+)?(clickscoin|offeroc|cryptotyphoon|softairbay)(\\.com)\\/(short)/"],"orig_matches":["*://al.ly/*","*://za.gl/*","*://tny.so/*","*://c2g.at/*","*://tii.la/*","*://send.cm/*","*://adoc.pub/*","*://files.fm/*","*://1gom.shop/*","*://slink.bid/*","*://ouo.press/*","*://7cc.96.lt/*","*://gktech.uk/*","*://one88.day/*","*://*.zcash.one/*","*://giti.works/*","*://*.upload.ee/*","*://*.gdtot.cfd/*","*://share4u.men/*","*://filemoon.sx/*","*://getzen.cash/*","*://*.rawlazy.si/*","*://*.sl1.x10.mx/*","*://quesignifi.ca/*","*://moneylink.tk/*","*://uplinkto.hair/*","*://litecoin.host/*","*://drop.download/*","*://linkshrink.ca/*","*://*/*?xref=*&sl=*","*://cryptonetos.ru/*","*://urlcashh.quest/*","*://*.cizgifilm.tv/*","*://dailytime.store/*","*://downloads.ninja/*","*://*.trangchu.news/*","*://*.rapidshort.lat/*","*://clicknupload.red/*","*://*/recaptcha/api2/*","*://docs.google.com/uc*","*://dutchycorp.ovh/s*/*","*://*.adtival.network/*","*://cryptorotator.website/*","*://adbtc.top/surf/browse/*","*://anonym.ninja/download/*","*://faucetcrypto.net/short/*","*://konstantinova.net/verify/*","*://playnano.online/watch-and*","*://adbtc.top/surfiat/browse/*","*://noodlemagazine.com/download/*","*://*.racedepartment.com/downloads/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":["/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.youtube\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?accounts\\.youtube\\.com(:[0-9]{1,5})?\\/.*$/"],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1693425248572,"data":{}},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/431691-bypass-all-shortlinks/code/Bypass%20All%20Shortlinks.user.js","uuid":"85135e3b-c4d9-40f1-9fad-2f8aacfbf1e3","source":""},{"name":"Facebook, Youtube and Reddit Video Downloader","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.facebook.com/*","https://www.youtube.com/*","https://www.reddit.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":["/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.youtube\\.com(:[0-9]{1,5})?\\/.*$/"],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1693425248572,"data":{}},"enabled":true,"position":8,"file_url":"https://greasyfork.org/scripts/453302-facebook-youtube-and-reddit-video-downloader/code/Facebook,%20Youtube%20and%20Reddit%20Video%20Downloader.user.js","uuid":"bd6ef2a0-ed9b-46f1-bd4b-de84a6feabda","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBGYWNlYm9vaywgWW91dHViZSBhbmQgUmVkZGl0IFZpZGVvIERvd25sb2FkZXIKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9Nb3Jkbzk1LzE0MWVhZDZmZmExZmI2NTU3ZGIxMjdkNzQ0YTM5ZTZmCi8vIEB2ZXJzaW9uICAgICAgMC40Ci8vIEBsaWNlbnNlICAgICAgTUlUCi8vIEBkZXNjcmlwdGlvbiAgV2lsbCBhZGQgYSBkb3dubG9hZCBidXR0b24gdG8gUmVkZGl0LCBGYWNlYm9vayBhbmQgWW91dHViZSB2aWRlb3MKLy8gQGF1dGhvciAgICAgICBHaXRodWIvTW9yZG85NQovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly93d3cueW91dHViZS5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vd3d3LnJlZGRpdC5jb20vKgovLyBAZ3JhbnQgICAgICAgIEdNX3htbGh0dHBSZXF1ZXN0Ci8vIEBydW4tYXQgZG9jdW1lbnQtc3RhcnQKLy8gPT0vVXNlclNjcmlwdD09CgovLyB2ZXJzaW9uIDAuNCBmaXhlcyByZWRkaXQgdGh1bWJuYWlscyBhbHNvIHJlY2VpdmluZyBhIGJ1dHRvbgoKKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIGNsYXNzIE1vcmRvOTVETCB7CiAgICAgICAgc3RhdGljIGFkZFN0eWxlKGNzcykgewogICAgICAgICAgICBjb25zdCBzdHlsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJHTV9hZGRTdHlsZUJ5ODYyNiIpIHx8IChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTsKICAgICAgICAgICAgICAgIHN0eWxlLnR5cGUgPSAndGV4dC9jc3MnOwogICAgICAgICAgICAgICAgc3R5bGUuaWQgPSAiR01fYWRkU3R5bGVCeTg2MjYiOwogICAgICAgICAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7CiAgICAgICAgICAgICAgICByZXR1cm4gc3R5bGU7CiAgICAgICAgICAgIH0pKCk7CiAgICAgICAgICAgIGNvbnN0IHNoZWV0ID0gc3R5bGUuc2hlZXQ7CiAgICAgICAgICAgIHNoZWV0Lmluc2VydFJ1bGUoY3NzLCAoc2hlZXQucnVsZXMgfHwgc2hlZXQuY3NzUnVsZXMgfHwgW10pLmxlbmd0aCk7CiAgICAgICAgfQoKICAgICAgICBzdGF0aWMgcGFyYW1zVG9PYmplY3QoZW50cmllcykgewogICAgICAgICAgICBjb25zdCByZXN1bHQgPSB7fQogICAgICAgICAgICBmb3IoY29uc3QgW2tleSwgdmFsdWVdIG9mIGVudHJpZXMpIHsgLy8gZWFjaCAnZW50cnknIGlzIGEgW2tleSwgdmFsdWVdIHR1cHBsZQogICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgIH0KCiAgICAgICAgc3RhdGljIGJ1aWxkUGFyYW1zKHApIHsKICAgICAgICAgICAgcmV0dXJuIG5ldyBVUkxTZWFyY2hQYXJhbXMocCkudG9TdHJpbmcoKTsKICAgICAgICB9CiAgICB9CgogICAgY2xhc3MgRkJETCB7CiAgICAgICAgZ2V0UmVhY3RGaWJlcihlbCkgewogICAgICAgICAgICBmb3IgKGxldCBwcm9wIG9mIE9iamVjdC5rZXlzKGVsKSkgewogICAgICAgICAgICAgICAgaWYgKHByb3Auc3RhcnRzV2l0aCgiX19yZWFjdEZpYmVyIikpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxbcHJvcF07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfQoKICAgICAgICBmaWJlclJldHVyblVudGlsKGZpYmVyLCBkaXNwbGF5TmFtZSkgewogICAgICAgICAgICBsZXQgZmliZXJJbnN0ID0gZmliZXI7CiAgICAgICAgICAgIHdoaWxlIChmaWJlckluc3QgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgbGV0IGZpYmVySW5zdE5hbWUgPSAiIjsKICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZmliZXJJbnN0LmVsZW1lbnRUeXBlID09PSAic3RyaW5nIikKICAgICAgICAgICAgICAgICAgICBmaWJlckluc3ROYW1lID0gZmliZXJJbnN0LmVsZW1lbnRUeXBlOwogICAgICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGZpYmVySW5zdC5lbGVtZW50VHlwZSA9PT0gImZ1bmN0aW9uIikKICAgICAgICAgICAgICAgICAgICBmaWJlckluc3ROYW1lID0gZmliZXJJbnN0LmVsZW1lbnRUeXBlLmRpc3BsYXlOYW1lOwogICAgICAgICAgICAgICAgaWYgKGZpYmVySW5zdE5hbWUgPT09IGRpc3BsYXlOYW1lKQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmaWJlckluc3Q7CgogICAgICAgICAgICAgICAgZmliZXJJbnN0ID0gZmliZXJJbnN0LnJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICB9CgogICAgICAgIHBhcmVudHNVbnRpbChlbCwgYykgewogICAgICAgICAgICBsZXQgZWxJbnN0ID0gZWw7CiAgICAgICAgICAgIHdoaWxlIChlbEluc3QgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgaWYgKGVsSW5zdC5jbGFzc0xpc3QudG9TdHJpbmcoKSA9PT0gYykKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxJbnN0OwogICAgICAgICAgICAgICAgZWxJbnN0ID0gZWxJbnN0LnBhcmVudEVsZW1lbnQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfQoKICAgICAgICBnZXRWaWRlb0ltcGxlbWVudGF0aW9uKGZpYmVyLCBpbXBsID0gIlZpZGVvUGxheWVyUHJvZ3Jlc3NpdmVJbXBsZW1lbnRhdGlvbiIpIHsKICAgICAgICAgICAgaWYoIWZpYmVyIHx8ICFmaWJlci5tZW1vaXplZFByb3BzIHx8ICFmaWJlci5tZW1vaXplZFByb3BzLmltcGxlbWVudGF0aW9ucykKICAgICAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgICByZXR1cm4gZmliZXIubWVtb2l6ZWRQcm9wcy5pbXBsZW1lbnRhdGlvbnMuZmluZCh4ID0+IHgudHlwZW5hbWUgPT09IGltcGwpOwogICAgICAgIH0KCiAgICAgICAgYWRkVmlkZW9CdXR0b24ob24sIHZpZGVvRWwpIHsKICAgICAgICAgICAgbGV0IGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICAgICAgICBidG4uaW5uZXJIVE1MID0gIkRvd25sb2FkIChIRCkiOwogICAgICAgICAgICBidG4uY2xhc3NMaXN0LmFkZCgiZGxCdG4iKTsKICAgICAgICAgICAgYnRuLm9uY2xpY2sgPSAoKSA9PiB0aGlzLmJ0bkFjdCh2aWRlb0VsKTsKICAgICAgICAgICAgLy9sZXQgcGFyZW50ID0gcGFyZW50c1VudGlsKHZpZGVvRWwsIHZpZGVvRWwuY2xhc3NMaXN0WzBdKSB8fCB2aWRlb0VsLnBhcmVudEVsZW1lbnQ7CiAgICAgICAgICAgIG9uLnByZXBlbmQoYnRuKTsKICAgICAgICB9CgogICAgICAgIGJ0bkFjdCh2aWRlb0VsKSB7CiAgICAgICAgICAgIGxldCBmaWJlciA9IHRoaXMuZ2V0UmVhY3RGaWJlcih2aWRlb0VsKTsKICAgICAgICAgICAgbGV0IHByb3BzID0gdGhpcy5maWJlclJldHVyblVudGlsKGZpYmVyLCAiYSBbZnJvbSBDb3JlVmlkZW9QbGF5ZXIucmVhY3RdIik7CiAgICAgICAgICAgIGxldCBpbXBsID0gdGhpcy5nZXRWaWRlb0ltcGxlbWVudGF0aW9uKHByb3BzKTsKICAgICAgICAgICAgaWYgKGltcGwuZGF0YS5oZFNyYykgewogICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oaW1wbC5kYXRhLmhkU3JjKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKGltcGwuZGF0YS5zZFNyYyk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGluamVjdCgpIHsKICAgICAgICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgICAgICAgICAgbGV0IHZpZGVvcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoInZpZGVvOm5vdChbZGF0YS10YWdnZWRdKSIpOwogICAgICAgICAgICAgICAgZm9yIChsZXQgdmlkZW8gb2YgdmlkZW9zKSB7CiAgICAgICAgICAgICAgICAgICAgdmlkZW8uc2V0QXR0cmlidXRlKCJkYXRhLXRhZ2dlZCIsICJ0cnVlIik7CiAgICAgICAgICAgICAgICAgICAgbGV0IGZpYmVyID0gdGhpcy5nZXRSZWFjdEZpYmVyKHZpZGVvLnBhcmVudEVsZW1lbnQpOwogICAgICAgICAgICAgICAgICAgIGxldCBwcm9wcyA9IHRoaXMuZmliZXJSZXR1cm5VbnRpbChmaWJlciwgImEgW2Zyb20gQ29yZVZpZGVvUGxheWVyLnJlYWN0XSIpOwogICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkVmlkZW9CdXR0b24oZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgW2RhdGEtaW5zdGFuY2VrZXk9JyR7cHJvcHMubWVtb2l6ZWRTdGF0ZS5tZW1vaXplZFN0YXRlfSddYCksIHZpZGVvLnBhcmVudEVsZW1lbnQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCAyMDApOwogICAgICAgICAgICBNb3Jkbzk1REwuYWRkU3R5bGUoIi5kbEJ0bntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO3otaW5kZXg6OTk5OTk7cGFkZGluZzoxMHB4IDE1cHg7bWFyZ2luOjVweDtjdXJzb3I6cG9pbnRlcjtvdXRsaW5lOjA7YmFja2dyb3VuZDp2YXIoLS1wcmltYXJ5LWJ1dHRvbi1iYWNrZ3JvdW5kKTtjb2xvcjp2YXIoLS1wcmltYXJ5LWJ1dHRvbi10ZXh0KTtib3JkZXI6MXB4IHNvbGlkIDFweCBzb2xpZCB2YXIoLS1hY2NlbnQpO2ZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1zZWdvZSkhaW1wb3J0YW50fSIpOwogICAgICAgICAgICBNb3Jkbzk1REwuYWRkU3R5bGUoIi5kbEJ0bjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLXByaW1hcnktYnV0dG9uLXByZXNzZWQpfSIpOwogICAgICAgIH0KICAgIH0KCiAgICBjbGFzcyBZVERMIHsKICAgICAgICBhZGRWaWRlb0J1dHRvbihvbikgewogICAgICAgICAgICBsZXQgYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgICAgIGJ0bi5pbm5lckhUTUwgPSB0aGlzLmJ0blRleHQ7CiAgICAgICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCJkbEJ0biIpOwogICAgICAgICAgICBidG4ub25jbGljayA9ICgpID0+IHRoaXMuZ2V0TGlua3MoYnRuKTsKICAgICAgICAgICAgb24ucHJlcGVuZChidG4pOwogICAgICAgIH0KCiAgICAgICAgZ2V0TGlua3MoYnRuKSB7CiAgICAgICAgICAgIGxldCBmZCA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgICAgICBmZC5zZXQoInEiLCB3aW5kb3cubG9jYXRpb24uaHJlZik7CiAgICAgICAgICAgIGZkLnNldCgidnQiLCAibXA0Iik7CiAgICAgICAgICAgIGxldCB1cmwgPSAiaHR0cHM6Ly95dDFzLmNvbS9hcGkvYWpheFNlYXJjaC9pbmRleCI7CiAgICAgICAgICAgIEdNX3htbGh0dHBSZXF1ZXN0KHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgdXJsLAogICAgICAgICAgICAgICAgZGF0YTogZmQsCiAgICAgICAgICAgICAgICBvbmxvYWQ6IChyZXNwKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgbGV0IGpzID0gSlNPTi5wYXJzZShyZXNwLnJlc3BvbnNlVGV4dCk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb252ZXJ0KGJ0biwganMudmlkLCBqcy5saW5rcy5tcDQuYXV0by5rKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICBjb252ZXJ0KGJ0biwgdmlkLCBrKSB7CiAgICAgICAgICAgIGxldCBmZCA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgICAgICBmZC5zZXQoInZpZCIsIHZpZCk7CiAgICAgICAgICAgIGZkLnNldCgiayIsIGspOwogICAgICAgICAgICBidG4uaW5uZXJIVE1MID0gIkNvbnZlcnRpbmcgLi4uIjsKICAgICAgICAgICAgR01feG1saHR0cFJlcXVlc3QoewogICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3l0MXMuY29tL2FwaS9hamF4Q29udmVydC9jb252ZXJ0JywKICAgICAgICAgICAgICAgIGRhdGE6IGZkLAogICAgICAgICAgICAgICAgdGltZW91dDogNjAwMDAsCiAgICAgICAgICAgICAgICBvbmxvYWQ6IChyZXNwKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgbGV0IGpzID0gSlNPTi5wYXJzZShyZXNwLnJlc3BvbnNlVGV4dCk7CiAgICAgICAgICAgICAgICAgICAgbGV0IHN0YXR1cyA9IGpzLmNfc3RhdHVzOwogICAgICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT09ICJDT05WRVJURUQiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKGpzLmRsaW5rKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgiRXJyb3IgY29udmVydGluZyB2aWRlby4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlciEiKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnRuLmlubmVySFRNTCA9IHRoaXMuYnRuVGV4dDsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBvblRpbWVvdXQ6ICgpID0+IHsgYnRuLmlubmVySFRNTCA9IHRoaXMuYnRuVGV4dDsgfQogICAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIGluamVjdCgpIHsKICAgICAgICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgICAgICAgICAgbGV0IHZpZGVvcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoInZpZGVvOm5vdChbZGF0YS10YWdnZWRdKSIpOwogICAgICAgICAgICAgICAgZm9yIChsZXQgdmlkZW8gb2YgdmlkZW9zKSB7CiAgICAgICAgICAgICAgICAgICAgdmlkZW8uc2V0QXR0cmlidXRlKCJkYXRhLXRhZ2dlZCIsICJ0cnVlIik7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI2NvbnRhaW5lciIpKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFZpZGVvQnV0dG9uKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNjb250YWluZXIueXRkLXBsYXllciIpKTsKCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIDIwMCk7CiAgICAgICAgICAgIE1vcmRvOTVETC5hZGRTdHlsZSgiLmRsQnRue3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7ei1pbmRleDo5OTk5OTtwYWRkaW5nOjEwcHggMTVweDttYXJnaW46NXB4O2N1cnNvcjpwb2ludGVyO291dGxpbmU6MDtiYWNrZ3JvdW5kOiM1MzgzRkI7Y29sb3I6d2hpdGU7Ym9yZGVyOjFweCBzb2xpZCAxcHggc29saWQgIzUzODNGQjtmb250LWZhbWlseTogU2Vnb2UgVUkgSGlzdG9yaWMsIFNlZ29lIFVJLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7Zm9udC1zaXplOjEycHg7fSIpOwogICAgICAgICAgICBNb3Jkbzk1REwuYWRkU3R5bGUoIi5kbEJ0bjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiM4NkE0RkN9Iik7CiAgICAgICAgfQoKICAgICAgICBjb25zdHJ1Y3RvcigpIHsKICAgICAgICAgICAgdGhpcy5idG5UZXh0ID0gIkRvd25sb2FkIChIRCkiOwogICAgICAgIH0KICAgIH0KCiAgICBjbGFzcyBSRERMIHsKICAgICAgICBhZGRWaWRlb0J1dHRvbihvbiwgdmlkZW9FbCkgewogICAgICAgICAgICBvbi5xdWVyeVNlbGVjdG9yQWxsKCIuZGxCdG4iKS5mb3JFYWNoKGVsID0+IGVsLnJlbW92ZSgpKTsKICAgICAgICAgICAgbGV0IGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICAgICAgICBidG4uaW5uZXJIVE1MID0gdGhpcy5idG5UZXh0OwogICAgICAgICAgICBidG4uY2xhc3NMaXN0LmFkZCgiZGxCdG4iKTsKICAgICAgICAgICAgYnRuLm9uY2xpY2sgPSAoKSA9PiB0aGlzLmJ0bkFjdChidG4pOwogICAgICAgICAgICBvbi5wcmVwZW5kKGJ0bik7CiAgICAgICAgfQoKICAgICAgICBidG5BY3QoYnRuKSB7CiAgICAgICAgICAgIGxldCBzcmMgPSB0aGlzLnJldHVyblVudGlsKHRoaXMuZ2V0UmVhY3RJbnRlcm5hbFN0YXRlKGJ0bi5wYXJlbnRFbGVtZW50KSwgIm1wZWdEYXNoU291cmNlIik7CiAgICAgICAgICAgIGlmICghc3JjKSB7CiAgICAgICAgICAgICAgICBhbGVydCgiVW5hYmxlIHRvIGxvYWQgdmlkZW8gZGF0YSIpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGxldCBtcGVnRGFzaFVybCA9IHNyYy5wZW5kaW5nUHJvcHMubXBlZ0Rhc2hTb3VyY2U7CiAgICAgICAgICAgIGxldCBtYXRjaCA9IG1wZWdEYXNoVXJsLm1hdGNoKC9odHRwczpcL1wvdi5yZWRkLml0XC8oPzx2aWRlb0lkPi4rKVwvREFTSFBsYXlsaXN0XC5tcGQvKTsKICAgICAgICAgICAgaWYgKCFtYXRjaCkgewogICAgICAgICAgICAgICAgYWxlcnQoIlVuYWJsZSB0byBsb2FkIHZpZGVvIGRhdGEiKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBsZXQgdmlkZW9JZCA9IG1hdGNoLmdyb3Vwcy52aWRlb0lkOwogICAgICAgICAgICBsZXQgcCA9IE1vcmRvOTVETC5idWlsZFBhcmFtcyh7CiAgICAgICAgICAgICAgICB2aWRlb191cmw6ICdodHRwczovL3YucmVkZC5pdC8nICsgdmlkZW9JZCArICcvREFTSF83MjAubXA0P3NvdXJjZT1mYWxsYmFjaycsCiAgICAgICAgICAgICAgICBhdWRpb191cmw6ICdodHRwczovL3YucmVkZC5pdC8nICsgdmlkZW9JZCArICcvREFTSF9hdWRpby5tcDQ/c291cmNlPWZhbGxiYWNrJywKICAgICAgICAgICAgICAgIHBlcm1hbGluazogd2luZG93LmxvY2F0aW9uLm9yaWdpbiArIHNyYy5wZW5kaW5nUHJvcHMucG9zdFVybC5wYXRobmFtZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgd2luZG93Lm9wZW4oImh0dHBzOi8vZHMucmVkZGl0c2F2ZS5jb20vZG93bmxvYWQucGhwPyIgKyBwKTsKICAgICAgICB9CgogICAgICAgIGdldFJlYWN0SW50ZXJuYWxTdGF0ZShlbCkgewogICAgICAgICAgICBmb3IgKGxldCBwcm9wIG9mIE9iamVjdC5rZXlzKGVsKSkgewogICAgICAgICAgICAgICAgaWYgKHByb3Auc3RhcnRzV2l0aCgiX19yZWFjdEludGVybmFsSW5zdGFuY2UiKSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBlbFtwcm9wXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICB9CgogICAgICAgIHJldHVyblVudGlsKGluc3QsIHByb3ApIHsKICAgICAgICAgICAgbGV0IGZJbnN0ID0gaW5zdDsKICAgICAgICAgICAgd2hpbGUgKGZJbnN0ICE9IG51bGwpIHsKICAgICAgICAgICAgICAgIGlmIChmSW5zdC5wZW5kaW5nUHJvcHNbcHJvcF0pCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZJbnN0OwoKICAgICAgICAgICAgICAgIGZJbnN0ID0gZkluc3QucmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgIH0KCiAgICAgICAgaW5qZWN0KCkgewogICAgICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgICAgICAgICBsZXQgdmlkZW9zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgidmlkZW86bm90KFtkYXRhLXRhZ2dlZF0pIik7CiAgICAgICAgICAgICAgICBmb3IgKGxldCB2aWRlbyBvZiB2aWRlb3MpIHsKICAgICAgICAgICAgICAgICAgICBpZiAodmlkZW8ucGFyZW50RWxlbWVudC5xdWVyeVNlbGVjdG9yKCIuZGxCdG4iKSA9PSBudWxsICYmIHZpZGVvLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSgicm9sZSIpICE9PSAic2xpZGVyIikKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRWaWRlb0J1dHRvbih2aWRlby5wYXJlbnRFbGVtZW50KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgMjAwKTsKCiAgICAgICAgICAgIE1vcmRvOTVETC5hZGRTdHlsZSgiLmRsQnRue3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7ei1pbmRleDo5OTk5OTtwYWRkaW5nOjEwcHggMTVweDttYXJnaW46NXB4O2N1cnNvcjpwb2ludGVyO291dGxpbmU6MDtiYWNrZ3JvdW5kOiM1MzgzRkI7Y29sb3I6d2hpdGU7Ym9yZGVyOjFweCBzb2xpZCAxcHggc29saWQgIzUzODNGQjtmb250LWZhbWlseTogU2Vnb2UgVUkgSGlzdG9yaWMsIFNlZ29lIFVJLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7Zm9udC1zaXplOjEycHg7fSIpOwogICAgICAgICAgICBNb3Jkbzk1REwuYWRkU3R5bGUoIi5kbEJ0bjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiM4NkE0RkN9Iik7CiAgICAgICAgfQoKICAgICAgICBjb25zdHJ1Y3RvcigpIHsKICAgICAgICAgICAgdGhpcy5idG5UZXh0ID0gIkRvd25sb2FkIChIRCkiOwogICAgICAgIH0KICAgIH0KICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7CiAgICAgICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5ocmVmLm1hdGNoKC95b3V0dShcLik/YmUuKi8pKSB7IG5ldyBZVERMKCkuaW5qZWN0KCk7IH0KICAgICAgICBpZiAod2luZG93LmxvY2F0aW9uLmhyZWYubWF0Y2goL2ZhY2Vib29rXC4uKi8pKSB7IG5ldyBGQkRMKCkuaW5qZWN0KCk7IH0KICAgICAgICBpZiAod2luZG93LmxvY2F0aW9uLmhyZWYubWF0Y2goL3JlZGRpdFwuLiovKSkgeyBuZXcgUkRETCgpLmluamVjdCgpOyB9CiAgICB9LCBmYWxzZSk7Cgp9KSgpOw=="},{"name":"Google Drive Auto Download (without preview)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://drive.google.com/*","https://docs.google.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1693971952300,"data":{}},"enabled":false,"position":9,"uuid":"e11698b1-d6b1-404d-824f-1926c1a10240","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBHb29nbGUgRHJpdmUgQXV0byBEb3dubG9hZCAod2l0aG91dCBwcmV2aWV3KQovLyBAbmFtZXNwYWNlICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvZW4vdXNlcnMvMjIzMzYwCi8vIEB2ZXJzaW9uICAgICAgMS4wLjAuMQovLyBAZGVzY3JpcHRpb24gIEF1dG8gZG93bmxvYWQgZmlsZXMgZnJvbSBHb29nbGUgRHJpdmUgd2l0aG91dCBwcmV2aWV3LgovLyBAYXV0aG9yICAgICAgIFplbm5hcgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gQGljb24gICAgICAgICBodHRwczovL3NzbC5nc3RhdGljLmNvbS9kb2NzL2RvY2xpc3QvaW1hZ2VzL2luZmluaXRlX2Fycm93X2Zhdmljb25fNC5pY28KLy8gQHJ1bi1hdCAgICAgICBkb2N1bWVudC1lbmQKLy8gPT0vVXNlclNjcmlwdD09dnZ2YXIgdGhpc1VybCA9IGRvY3VtZW50LmxvY2F0aW9uLmhyZWY7CnZhciB0aGlzVXJsPWxvY2F0aW9uLmhyZWY7CmlmKC9bZHJpdmV8ZG9jc10uZ29vZ2xlLmNvbVwvZmlsZS8udGVzdCh0aGlzVXJsKSkKewogICAgdmFyIGdkZl9pZD0gL1wvZmlsZVwvZFwvKFteXC9dKykvaS5leGVjKHRoaXNVcmwpOwogICAgdmFyIG5ld2hyZWYgPSBsb2NhdGlvbi5wcm90b2NvbCsnLy8nK2xvY2F0aW9uLmhvc3RuYW1lKycvdWM/aWQ9JytnZGZfaWRbMV0rJyZleHBvcnQ9ZG93bmxvYWQnCiAgICBsb2NhdGlvbi5ocmVmPW5ld2hyZWY7CiAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgIHNlbGYuY2xvc2UoKTsKfSwxMDAwMCk7Cn0KaWYoL1tkcml2ZXxkb2NzXS5nb29nbGUuY29tXC91Y1w/aWQvLnRlc3QodGhpc1VybCkpCnsKICAgIHZhciBkbGJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1Yy1kb3dubG9hZC1saW5rJyk7CiAgICBpZiAoZGxidG4uaHJlZi5sZW5ndGggPiAwKSB7CiAgICAgICAgZGxidG4uY2xpY2soKTsKICAgIH0KICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7CiAgICBzZWxmLmNsb3NlKCk7Cn0sMTAwMDApOwp9Cg=="},{"name":"Return YouTube Dislike","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["youtube.com"],"orig_excludes":["*://music.youtube.com/*","*://*.music.youtube.com/*"],"orig_includes":[],"orig_matches":["*://*.youtube.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1697175206372,"data":{}},"enabled":true,"position":10,"file_url":"https://github.com/Anarios/return-youtube-dislike/raw/main/Extensions/UserScript/Return%20Youtube%20Dislike.user.js","uuid":"19d55e25-e9e7-4011-8b6e-b2a7a4030fe9","source":""},{"name":"YouTube™ Multi Downloader - sfrom.net (Shift + D)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.youtube.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1697671535624,"data":{}},"enabled":true,"position":11,"file_url":"https://greasyfork.org/scripts/475514-youtube-multi-downloader-sfrom-net-shift-d/code/YouTube%E2%84%A2%20Multi%20Downloader%20-%20sfromnet%20(Shift%20+%20D).user.js","uuid":"24eff7fe-59a4-4ee8-8ade-5b83616b0f3e","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgWW91VHViZeKEoiBNdWx0aSBEb3dubG9hZGVyIC0gc2Zyb20ubmV0IChTaGlmdCArIEQpCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9lbi91c2Vycy8xMTc1MTY1LWFybnZnbAovLyBAdmVyc2lvbiAgICAgIDEuMAovLyBAZGVzY3JpcHRpb24gIEFkZHMgInNmcm9tLm5ldC8iIHRvIHRoZSBmcm9udCBvZiBZb3VUdWJlIFVSTCB3aGVuIFNoaWZ0ICsgRCBpcyBwcmVzc2VkIHRvIGVuYWJsZSBkb3dubG9hZGluZyB2aWRlb3MgZWFzaWx5LgovLyBAbGljZW5zZSAgICAgIE1JVAovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbihldmVudCkgewogICAgICAgIGlmIChldmVudC5zaGlmdEtleSAmJiBldmVudC5rZXkgPT09ICdEJykgewogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICB2YXIgY3VycmVudFVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwogICAgICAgICAgICB2YXIgbmV3VXJsID0gJ2h0dHBzOi8vc2Zyb20ubmV0LycgKyBjdXJyZW50VXJsOwogICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IG5ld1VybDsKICAgICAgICB9CiAgICB9KTsKfSkoKTs="},{"name":"Remove Adblock Thing","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.youtube.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1697930800301,"data":{}},"enabled":false,"position":12,"file_url":"https://github.com/TheRealJoelmatic/RemoveAdblockThing/raw/main/Youtube-Ad-blocker-Reminder-Remover.user.js","uuid":"0f306fe3-d83e-439a-b51f-7500be23ad6f","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBSZW1vdmUgQWRibG9jayBUaGluZwovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90YW1wZXJtb25rZXkubmV0LwovLyBAdmVyc2lvbiAgICAgIDEuMAovLyBAZGVzY3JpcHRpb24gIFJlbW92ZXMgQWRibG9jayBUaGluZwovLyBAYXV0aG9yICAgICAgIEpvZWxNYXRpYwovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tLyoKLy8gQGljb24gICAgICAgICBodHRwczovL3d3dy5nb29nbGUuY29tL3MyL2Zhdmljb25zP3N6PTY0JmRvbWFpbj15b3V0dWJlLmNvbQovLyBAdXBkYXRlVVJMICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9UaGVSZWFsSm9lbG1hdGljL1JlbW92ZUFkYmxvY2tUaGluZy9yYXcvbWFpbi9Zb3V0dWJlLUFkLWJsb2NrZXItUmVtaW5kZXItUmVtb3Zlci51c2VyLmpzCi8vIEBkb3dubG9hZFVSTCAgaHR0cHM6Ly9naXRodWIuY29tL1RoZVJlYWxKb2VsbWF0aWMvUmVtb3ZlQWRibG9ja1RoaW5nL3Jhdy9tYWluL1lvdXR1YmUtQWQtYmxvY2tlci1SZW1pbmRlci1SZW1vdmVyLnVzZXIuanMKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkKIHsKICAgIC8vCiAgICAvLyAgICAgIENvbmZpZwogICAgLy8KCiAgICAvLyBFbmFibGUgVGhlIFVuZGV0ZWN0ZWQgQWRibG9ja2VyCiAgICBjb25zdCBhZGJsb2NrZXIgPSB0cnVlOwoKICAgIC8vIEVuYWJsZSBUaGUgUG9wdXAgcmVtb3ZlcgogICAgY29uc3QgcmVtb3ZlUG9wdXAgPSB0cnVlOwoKICAgIC8vIEVuYWJsZSBkZWJ1ZyBtZXNzYWdlcyBpbnRvIHRoZSBjb25zb2xlCiAgICBjb25zdCBkZWJ1ZyA9IHRydWU7CgogICAgLy8KICAgIC8vICAgICAgQ09ERQogICAgLy8KCiAgICAvLyBTcGVjaWZ5IGRvbWFpbnMgYW5kIEpTT04gcGF0aHMgdG8gcmVtb3ZlCiAgICBjb25zdCBkb21haW5zVG9SZW1vdmUgPSBbCiAgICAgICAgJyoueW91dHViZS1ub2Nvb2tpZS5jb20vKicKICAgIF07CiAgICBjb25zdCBqc29uUGF0aHNUb1JlbW92ZSA9IFsKICAgICAgICAncGxheWVyUmVzcG9uc2UuYWRQbGFjZW1lbnRzJywKICAgICAgICAncGxheWVyUmVzcG9uc2UucGxheWVyQWRzJywKICAgICAgICAnYWRQbGFjZW1lbnRzJywKICAgICAgICAncGxheWVyQWRzJywKICAgICAgICAncGxheWVyQ29uZmlnJywKICAgICAgICAnYXV4aWxpYXJ5VWkubWVzc2FnZVJlbmRlcmVycy5lbmZvcmNlbWVudE1lc3NhZ2VWaWV3TW9kZWwnCiAgICBdOwoKICAgIC8vIE9ic2VydmUgY29uZmlnCiAgICBjb25zdCBvYnNlcnZlckNvbmZpZyA9IHsKICAgICAgICBjaGlsZExpc3Q6IHRydWUsCiAgICAgICAgc3VidHJlZTogdHJ1ZQogICAgfTsKCiAgICBjb25zdCBrZXlFdmVudCA9IG5ldyBLZXlib2FyZEV2ZW50KCJrZXlkb3duIiwgewogICAgICBrZXk6ICJrIiwKICAgICAgY29kZTogIktleUsiLAogICAgICBrZXlDb2RlOiA3NSwKICAgICAgd2hpY2g6IDc1LAogICAgICBidWJibGVzOiB0cnVlLAogICAgICBjYW5jZWxhYmxlOiB0cnVlLAogICAgICB2aWV3OiB3aW5kb3cKICAgIH0pOwoKICAgIGxldCBtb3VzZUV2ZW50ID0gbmV3IE1vdXNlRXZlbnQoImNsaWNrIiwgewogICAgICBidWJibGVzOiB0cnVlLAogICAgICBjYW5jZWxhYmxlOiB0cnVlLAogICAgICB2aWV3OiB3aW5kb3csCiAgICB9KTsKCiAgICAvL1RoaXMgaXMgdXNlZCB0byBjaGVjayBpZiB0aGUgdmlkZW8gaGFzIGJlZW4gdW5wYXVzZWQgYWxyZWFkeQogICAgbGV0IHVucGF1c2VkQWZ0ZXJTa2lwID0gMDsKCiAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKCJSZW1vdmUgQWRibG9jayBUaGluZzogUmVtb3ZlIEFkYmxvY2sgVGhpbmc6IFNjcmlwdCBzdGFydGVkIik7CiAgICAvLyBPbGQgdmFyaWFibGUgYnV0IGNvdWxkIHdvcmsgaW4gc29tZSBjYXNlcwogICAgd2luZG93Ll9feXRwbGF5ZXJfYWRibG9ja0RldGVjdGVkID0gZmFsc2U7CgogICAgaWYoYWRibG9ja2VyKSBhZGRibG9ja2VyKCk7CiAgICBpZihyZW1vdmVQb3B1cCkgcG9wdXBSZW1vdmVyKCk7CiAgICBpZihyZW1vdmVQb3B1cCkgb2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudC5ib2R5LCBvYnNlcnZlckNvbmZpZyk7CgogICAgLy8gUmVtb3ZlIFRoZW0gcGVzc2tpIHBvcHVwcwogICAgZnVuY3Rpb24gcG9wdXBSZW1vdmVyKCkgewogICAgICAgIHJlbW92ZUpzb25QYXRocyhkb21haW5zVG9SZW1vdmUsIGpzb25QYXRoc1RvUmVtb3ZlKTsKICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7CgogICAgICAgICAgICBjb25zdCBmdWxsU2NyZWVuQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLnl0cC1mdWxsc2NyZWVuLWJ1dHRvbiIpOwogICAgICAgICAgICBjb25zdCBtb2RhbE92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJ0cC15dC1pcm9uLW92ZXJsYXktYmFja2Ryb3AiKTsKICAgICAgICAgICAgY29uc3QgcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuc3R5bGUtc2NvcGUgeXRkLWVuZm9yY2VtZW50LW1lc3NhZ2Utdmlldy1tb2RlbCIpOwogICAgICAgICAgICBjb25zdCBwb3B1cEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJkaXNtaXNzLWJ1dHRvbiIpOwogICAgICAgICAgICAvLyBjb25zdCBwb3B1cEJ1dHRvbjIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgieXRwLXBsYXktYnV0dG9uIHl0cC1idXR0b24iKTsKCiAgICAgICAgICAgIGNvbnN0IHZpZGVvMSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNtb3ZpZV9wbGF5ZXIgPiB2aWRlby5odG1sNS1tYWluLXZpZGVvIik7CiAgICAgICAgICAgIGNvbnN0IHZpZGVvMiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNtb3ZpZV9wbGF5ZXIgPiAuaHRtbDUtdmlkZW8tY29udGFpbmVyID4gdmlkZW8iKTsKCiAgICAgICAgICAgIGNvbnN0IGJvZHlTdHlsZSA9IGRvY3VtZW50LmJvZHkuc3R5bGU7CgogICAgICAgICAgICBib2R5U3R5bGUuc2V0UHJvcGVydHkoJ292ZXJmbG93LXknLCAnc2Nyb2xsJywgJ2ltcG9ydGFudCcpOwoKICAgICAgICAgICAgaWYgKG1vZGFsT3ZlcmxheSkgewogICAgICAgICAgICAgICAgbW9kYWxPdmVybGF5LnJlbW92ZUF0dHJpYnV0ZSgib3BlbmVkIik7CiAgICAgICAgICAgICAgICBtb2RhbE92ZXJsYXkucmVtb3ZlKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChwb3B1cCkgewogICAgICAgICAgICAgICAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZygiUmVtb3ZlIEFkYmxvY2sgVGhpbmc6IFBvcHVwIGRldGVjdGVkLCByZW1vdmluZy4uLiIpOwoKICAgICAgICAgICAgICAgIGlmKHBvcHVwQnV0dG9uKSBwb3B1cEJ1dHRvbi5jbGljaygpOwogICAgICAgICAgICAgICAgLy8gaWYocG9wdXBCdXR0b24yKSBwb3B1cEJ1dHRvbjIuY2xpY2soKTsKICAgICAgICAgICAgICAgIHBvcHVwLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgdW5wYXVzZWRBZnRlclNraXAgPSAyOwoKICAgICAgICAgICAgICAgIGZ1bGxTY3JlZW5CdXR0b24uZGlzcGF0Y2hFdmVudChtb3VzZUV2ZW50KTsKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgICBmdWxsU2NyZWVuQnV0dG9uLmRpc3BhdGNoRXZlbnQobW91c2VFdmVudCk7CiAgICAgICAgICAgICAgICB9LCA1MDApOwoKICAgICAgICAgICAgICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coIlJlbW92ZSBBZGJsb2NrIFRoaW5nOiBQb3B1cCByZW1vdmVkIik7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSB2aWRlbyBpcyBwYXVzZWQgYWZ0ZXIgcmVtb3ZpbmcgdGhlIHBvcHVwCiAgICAgICAgICAgIGlmICghdW5wYXVzZWRBZnRlclNraXAgPiAwKSByZXR1cm47CgoKICAgICAgICAgICAgaWYgKHZpZGVvMSkgewogICAgICAgICAgICAgICAgLy8gVW5QYXVzZSBUaGUgVmlkZW8KICAgICAgICAgICAgICAgIGlmICh2aWRlbzEucGF1c2VkKSB1blBhdXNlVmlkZW8oKTsKICAgICAgICAgICAgICAgIGVsc2UgaWYgKHVucGF1c2VkQWZ0ZXJTa2lwID4gMCkgdW5wYXVzZWRBZnRlclNraXAtLTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodmlkZW8yKSB7CiAgICAgICAgICAgICAgICBpZiAodmlkZW8yLnBhdXNlZCkgdW5QYXVzZVZpZGVvKCk7CiAgICAgICAgICAgICAgICBlbHNlIGlmICh1bnBhdXNlZEFmdGVyU2tpcCA+IDApIHVucGF1c2VkQWZ0ZXJTa2lwLS07CiAgICAgICAgICAgIH0KCiAgICAgICAgfSwgMTAwMCk7CiAgICB9CiAgICAvLyB1bmRldGVjdGVkIGFkYmxvY2tlciBtZXRob2QKICAgIGZ1bmN0aW9uIGFkZGJsb2NrZXIoKQogICAgewogICAgICAgIHNldEludGVydmFsKCgpID0+CiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICBjb25zdCBza2lwQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnZpZGVvQWRVaVNraXBCdXR0b24sLnl0cC1hZC1za2lwLWJ1dHRvbicpOwogICAgICAgICAgICBjb25zdCBhZCA9IFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWQtc2hvd2luZycpXVswXTsKICAgICAgICAgICAgY29uc3Qgc2lkQWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCd5dGQtYWN0aW9uLWNvbXBhbmlvbi1hZC1yZW5kZXJlcicpOwogICAgICAgICAgICBjb25zdCBkaXNwbGF5QWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXYjcm9vdC5zdHlsZS1zY29wZS55dGQtZGlzcGxheS1hZC1yZW5kZXJlci55dC1zaW1wbGUtZW5kcG9pbnQnKTsKICAgICAgICAgICAgY29uc3Qgc3BhcmtsZXNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXYjc3BhcmtsZXMtY29udGFpbmVyLnN0eWxlLXNjb3BlLnl0ZC1wcm9tb3RlZC1zcGFya2xlcy13ZWItcmVuZGVyZXInKTsKICAgICAgICAgICAgY29uc3QgbWFpbkNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2RpdiNtYWluLWNvbnRhaW5lci5zdHlsZS1zY29wZS55dGQtcHJvbW90ZWQtdmlkZW8tcmVuZGVyZXInKTsKICAgICAgICAgICAgY29uc3QgZmVlZEFkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigneXRkLWluLWZlZWQtYWQtbGF5b3V0LXJlbmRlcmVyJyk7CiAgICAgICAgICAgIGNvbnN0IG1hc3RoZWFkQWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcueXRkLXZpZGVvLW1hc3RoZWFkLWFkLXYzLXJlbmRlcmVyJyk7CgogICAgICAgICAgICBpZiAoYWQpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGNvbnN0IHZpZGVvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigndmlkZW8nKTsKICAgICAgICAgICAgICAgIHZpZGVvLnBsYXliYWNrUmF0ZSA9IDEwOwogICAgICAgICAgICAgICAgdmlkZW8udm9sdW1lID0gMDsKICAgICAgICAgICAgICAgIHZpZGVvLmN1cnJlbnRUaW1lID0gdmlkZW8uZHVyYXRpb247CiAgICAgICAgICAgICAgICBza2lwQnRuPy5jbGljaygpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBzaWRBZD8ucmVtb3ZlKCk7CiAgICAgICAgICAgIGRpc3BsYXlBZD8ucmVtb3ZlKCk7CiAgICAgICAgICAgIHNwYXJrbGVzQ29udGFpbmVyPy5yZW1vdmUoKTsKICAgICAgICAgICAgbWFpbkNvbnRhaW5lcj8ucmVtb3ZlKCk7CiAgICAgICAgICAgIGZlZWRBZD8ucmVtb3ZlKCk7CiAgICAgICAgICAgIG1hc3RoZWFkQWQ/LnJlbW92ZSgpOwogICAgICAgIH0sIDUwKQogICAgfQogICAgLy8gVW5wYXVzZSB0aGUgdmlkZW8gV29ya3MgbW9zdCBvZiB0aGUgdGltZQogICAgZnVuY3Rpb24gdW5QYXVzZVZpZGVvKCkKICAgIHsKICAgICAgICAvLyBTaW11bGF0ZSBwcmVzc2luZyB0aGUgImsiIGtleSB0byB1bnBhdXNlIHRoZSB2aWRlbwogICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoa2V5RXZlbnQpOwogICAgICAgIHVucGF1c2VkQWZ0ZXJTa2lwID0gMDsKICAgICAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKCJSZW1vdmUgQWRibG9jayBUaGluZzogVW5wYXVzZWQgdmlkZW8gdXNpbmcgJ2snIGtleSIpOwogICAgfQogICAgZnVuY3Rpb24gcmVtb3ZlSnNvblBhdGhzKGRvbWFpbnMsIGpzb25QYXRocykKICAgIHsKICAgICAgICBjb25zdCBjdXJyZW50RG9tYWluID0gd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lOwogICAgICAgIGlmICghZG9tYWlucy5pbmNsdWRlcyhjdXJyZW50RG9tYWluKSkgcmV0dXJuOwoKICAgICAgICBqc29uUGF0aHMuZm9yRWFjaChqc29uUGF0aCA9PnsKICAgICAgICAgICAgY29uc3QgcGF0aFBhcnRzID0ganNvblBhdGguc3BsaXQoJy4nKTsKICAgICAgICAgICAgbGV0IG9iaiA9IHdpbmRvdzsKICAgICAgICAgICAgZm9yIChjb25zdCBwYXJ0IG9mIHBhdGhQYXJ0cykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShwYXJ0KSkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBvYmogPSBvYmpbcGFydF07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgb2JqID0gdW5kZWZpbmVkOwogICAgICAgIH0pOwogICAgfQogICAgLy8gT2JzZXJ2ZSBhbmQgcmVtb3ZlIGFkcyB3aGVuIG5ldyBjb250ZW50IGlzIGxvYWRlZCBkeW5hbWljYWxseQogICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcigoKSA9PgogICAgewogICAgICAgIHJlbW92ZUpzb25QYXRocyhkb21haW5zVG9SZW1vdmUsIGpzb25QYXRoc1RvUmVtb3ZlKTsKICAgIH0pOwp9KSgpOwo="}],"settings":{"configMode":100,"connect_mode":"ask","default_tab_types":"incognito+normal","enabled":true,"external_connect":"all","external_update_interval":1,"favicon_service":"google","forbiddenPages":["*example.org/*","*paypal.tld/*","*stripe.com/*","https://*deutsche-bank-24.tld/*","https://*bankofamerica.tld/*","/^.*:\\/\\/apis\\.google\\.com\\/((?!render)([^\\/]+)\\/)+([^\\/]+)?$/","*://www.facebook.com/plugins/*","*://platform.twitter.com/widgets/*","https://drive.google.com/*","http://rerips.com/*","http://drakoric.com/*","https://torrentwal.net/*","https://*.google.com/*","https://*.google.co.id/*","https://www.google.com/","https://www.google.com/*","https://www.google.co.id/","https://www.google.co.id/*","https://softgateon.herokuapp.com/*","http://driverename.iblogbox.com/*","https://www.mm1rza.com/*","https://blog.mm1rza.com/*","https://www.tokopedia.com/*","https://shopee.co.id/*","https://account.microsoft.com/*","https://ibanking.bankjateng.co.id/*","https://mm1rza.com/*","https://web.whatsapp.com/*","https://speedtest.cbn.id/*","https://www.netflix.com/*","https://laksa19.github.io/*","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?portal\\.biznetgio\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?toweroffantasy\\.interactivemap\\.app(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?127\\.0\\.0\\.1(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?hotspotan\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?cloud-as\\.ruijienetworks\\.com(:[0-9]{1,5})?\\/.*$/"],"incognito_mode":"temporary","layout":"default","layout_user_css":"","native_import":true,"native_import_path":"","native_import_post_action":"disable","notification_showUpdate":"changelog","page_filter_mode":"black","page_whitelist":["/https?:\\/\\/greasyfork\\.org\\/.*/","http://xkcd.com/970/"],"require_sri_mode":"supported","reset_sync":null,"run_sync":null,"sandbox_mode":"default","scriptUpdateCheckPeriod":21600000,"script_blacklist_server":[{"rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"],"severity":"2"},{"name":"SaveFrom.net helper","reason":"Shows advertisements","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"severity":"3"}],"script_include_mode":"default","statistics_enabled":false,"sync_enabled":false,"sync_type":"4","webrequest_fixCSP":"yes","webrequest_modHeaders":"yes"}}