{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Address List BGP","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://bgp.he.net/search*","https://bgp.he.net/AS*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537189,"data":{}},"enabled":true,"position":1,"file_url":"https://raw.githubusercontent.com/laksa19/addrlistbgp/main/addrlistbgp.user.js","uuid":"63dc9b5a-fe5a-4593-950e-8dbd0fc10133","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBZGRyZXNzIExpc3QgQkdQCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9sYWtzYTE5LmdpdGh1Yi5pby9hZGRybGlzdGJncAovLyBAdXBkYXRlVVJMICAgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9sYWtzYTE5L2FkZHJsaXN0YmdwL21haW4vYWRkcmxpc3RiZ3AudXNlci5qcwovLyBAZG93bmxvYWRVUkwgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9sYWtzYTE5L2FkZHJsaXN0YmdwL21haW4vYWRkcmxpc3RiZ3AudXNlci5qcwovLyBAdmVyc2lvbiAgICAgIDAuOAovLyBAZGVzY3JpcHRpb24gIEdldCBBZHJlc3MgTGlzdCBmcm9tIEJHUAovLyBAYXV0aG9yICAgICAgIExha3NhbWFkaSBHdWtvCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9iZ3AuaGUubmV0L3NlYXJjaCoKLy8gQG1hdGNoICAgICAgICBodHRwczovL2JncC5oZS5uZXQvQVMqCi8vIEBncmFudCAgICAgICAgbm9uZQovLyBAcmVxdWlyZSAgICAgIGh0dHA6Ly9jb2RlLmpxdWVyeS5jb20vanF1ZXJ5LTMuNC4xLm1pbi5qcwovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQoIiNjb250ZW50IikucHJlcGVuZChgCjxzdHlsZT4KLmJ0bnh7Ym9yZGVyOiAxcHggc29saWQgIzAwMDA2NjtoZWlnaHQ6IDIycHg7bWFyZ2luLXJpZ2h0OiA4cHg7bWFyZ2luLWJvdHRvbTo4cHg7cGFkZGluZy1sZWZ0OiAzcHg7cGFkZGluZy1yaWdodDogM3B4O2N1cnNvcjogcG9pbnRlcjt9CgoudGFicmVzdWx0IHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwNjY7CiAgICBwYWRkaW5nOiAxNXB4OwogICAgbWluLXdpZHRoOiA3NDJweDsKICAgIHdpZHRoOiA3NDJweDsKbWFyZ2luLWJvdHRvbTo4cHg7Cn0KI3RibHJlc3VsdHtib3JkZXI6IG5vbmU7IHdpZHRoOjEwMCV9Cjwvc3R5bGU+Cgo8ZGl2IGlkPSdyZXN1bHQnIHN0eWxlPSdkaXNwbGF5Om5vbmUnIGNsYXNzPSd0YWJyZXN1bHQnPgo8YnV0dG9uIGNsYXNzPSdidG54JyBpZD0nY3BzY3JpcHQnPkNvcHkgU2NyaXB0PC9idXR0b24+CjxidXR0b24gY2xhc3M9J2J0bngnIGlkPSdjbG9zZSc+Q2xvc2U8L2J1dHRvbj4KPHRhYmxlIGlkPSd0YmxyZXN1bHQnPjwvdGFibGU+CjwvZGl2PmAKKTsKICAgICQoIiNoZWFkZXJfc2VhcmNoIikuYXBwZW5kKCI8YSBocmVmPScjJyBpZD0nZ2V0c2NyaXB0JyBzdHlsZT0nY29sb3I6IzAwMDA2NjsnPkdldCBBZGRyZXNzIExpc3QgU2NyaXB0PC9hPiIpOwogICAgJCgiI2dldHNjcmlwdCIpLmNsaWNrKGZ1bmN0aW9uKCl7CgogICAgICAgICAgICBnZXRJUCgpOwogICAgfSkKCgogICAgJCgiI2Nwc2NyaXB0IikuY2xpY2soZnVuY3Rpb24oKXsKICAgICAgICBjb3B5VGFibGUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRibHJlc3VsdCIpKTsKICAgIH0pCiAgICAkKCIjY2xvc2UiKS5jbGljayhmdW5jdGlvbigpezsKICAgICAgICAkKCIjcmVzdWx0IikuaGlkZSgpCiAgICAgICAgJCgiI3RibHJlc3VsdCIpLmh0bWwoIiIpOwogICAgfSkKCgoKICAgIGZ1bmN0aW9uIGdldElQKCl7CiAgICAgICAgJCgiI3RibHJlc3VsdCIpLmh0bWwoIiIpOwogICAgICAgICQoIiN0YmxyZXN1bHQiKS5hcHBlbmQoIjx0cj48dGQ+L2lwIGZpcmV3YWxsIGFkZHJlc3MtbGlzdDwvdGQ+PC90cj4iKQogICAgICAgIHZhciB0ciA9ICQoJ3RhYmxlIHRyJykuZmlsdGVyKGZ1bmN0aW9uKCkgewogICAgICAgICAgICByZXR1cm4gICQodGhpcykuZmluZCgidGQiKTsKICAgICAgICB9KTsKCiAgICAgICAgdHIuZWFjaChmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIGxpc3QgPSIiOwogICAgICAgICAgICB2YXIgaXAgPSAoJCh0aGlzKS5maW5kKCdhJykuaHRtbCgpKTsKICAgICAgICAgICAgaWYobG9jYXRpb24uaHJlZi5zcGxpdCgiLyIpWzNdLnN1YnN0cigwLDIpID09ICJBUyIpewogICAgICAgICAgICAgICAgbGlzdCA9ICQoJyNoZWFkZXInKS5maW5kKCdhJylbMV0uaW5uZXJIVE1MLnNwbGl0KGxvY2F0aW9uLmhyZWYuc3BsaXQoIi8iKVszXS5zcGxpdCgnIycpWzBdKVsxXTsKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICBsaXN0ID0gJCgnI2hlYWRlcicpLmZpbmQoJ2gxJylbMF0uaW5uZXJIVE1MLnNwbGl0KCciJylbMV0uc3BsaXQoJyInKVswXTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZihpcCAmJiBpcC5zcGxpdCgiLiIpLmxlbmd0aCA9PSA0KXsKICAgICAgICAgICAgICAgICQoIiN0YmxyZXN1bHQiKS5hcHBlbmQoYDx0cj48dGQ+YWRkIGxpc3Q9ImArbGlzdCtgIiBhZGRyZXNzPWAraXArYDwvdGQ+PC90cj5gKTsKICAgICAgICAgICAgfQoKICAgICAgICB9KTsKICAgICAgICAgJCgiI3RibHJlc3VsdCIpLmFwcGVuZCgiPHRyPjx0ZD48L3RkPjwvdHI+Iik7CiAgICAgICAgJCgiI3Jlc3VsdCIpLnNob3coKTsKICAgIH0KCiAgICBmdW5jdGlvbiBjb3B5VGFibGUoZWwpIHsKICAgICAgICB2YXIgYm9keSA9IGRvY3VtZW50LmJvZHksIHJhbmdlLCBzZWw7CiAgICAgICAgaWYgKGRvY3VtZW50LmNyZWF0ZVJhbmdlICYmIHdpbmRvdy5nZXRTZWxlY3Rpb24pIHsKICAgICAgICAgICAgcmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpOwogICAgICAgICAgICBzZWwgPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7CiAgICAgICAgICAgIHNlbC5yZW1vdmVBbGxSYW5nZXMoKTsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhlbCk7CiAgICAgICAgICAgICAgICBzZWwuYWRkUmFuZ2UocmFuZ2UpOwogICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3ROb2RlKGVsKTsKICAgICAgICAgICAgICAgIHNlbC5hZGRSYW5nZShyYW5nZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKGJvZHkuY3JlYXRlVGV4dFJhbmdlKSB7CiAgICAgICAgICAgIHJhbmdlID0gYm9keS5jcmVhdGVUZXh0UmFuZ2UoKTsKICAgICAgICAgICAgcmFuZ2UubW92ZVRvRWxlbWVudFRleHQoZWwpOwogICAgICAgICAgICByYW5nZS5zZWxlY3QoKTsKICAgICAgICB9CiAgICAgICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoImNvcHkiKTsKICAgIH0KCn0pKCk7Cgo=","requires":[{"meta":{"name":"jquery-3.4.1.min.js","url":"http://code.jquery.com/jquery-3.4.1.min.js","ts":1716549252352,"mimetype":"text/javascript"},"source":""}]},{"name":"Remove Link Target","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://pahe.li/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537194,"data":{}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/3039-link-target-blank-to-removal/code/Link%20Target%20'blank'%20to%20removal.user.js","uuid":"bcdf80d9-ac3a-4537-822e-536f3ad49e7d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIFJlbW92ZSBMaW5rIFRhcmdldAovLyBAY3JlYXRvciAgICAgICAga291c2kKLy8gQGRlc2NyaXB0aW9uICAgIFJlbW92ZXMgdGFyZ2V0IGF0dHJpYnV0ZSBjb21wbGV0ZWx5LgovLyBAdmVyc2lvbiAgICAgICAgMS4wCgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vcGFoZS5saS8qCi8vID09L1VzZXJTY3JpcHQ9PQoKdmFyIGxpbmtzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2EnKTsKCmZvciAodmFyIGkgPSBsaW5rcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgewogICBsaW5rc1tpXS5yZW1vdmVBdHRyaWJ1dGUoInRhcmdldCIpOwp9"},{"name":"Menghilangkan Web Limit","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537194,"data":{}},"enabled":false,"position":3,"file_url":"https://greasyfork.org/scripts/18886-menghilangkan-web-limit/code/Menghilangkan%20Web%20Limit.user.js","uuid":"904741cd-a0be-4c60-882b-b63ecd98ca6d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWVzcGFjZSAgICAgICAgIGh0dHA6Ly93d3cuZm9ybmVzaWEuY29tCi8vIEBuYW1lICAgICAgICAgICAgICBNZW5naGlsYW5na2FuIFdlYiBMaW1pdAovLyBAZGVzY3JpcHRpb24gICAgICAgTWVuZ2hpbGFuZ2thbiBsaW1pdCBwYWRhIHdlYnNpdGUgeWFuZyB0aWRhayBiaXNhIGNvcHksIGN1dCwgc2VsZWN0IHRoZSB0ZXh0LCByaWdodC1jbGljayBtZW51LgovLyBAaG9tZXBhZ2VVUkwgICAgICAgaHR0cDovL3d3dy5mb3JuZXNpYS5jb20KLy8gQHN1cHBvcnRVUkwgICAgICAgIGh0dHA6Ly93d3cuZm9ybmVzaWEuY29tCgovLyBAYXV0aG9yICAgICAgICAgICAgZm9ybmVzaWFmcmVhawovLyBAdmVyc2lvbiAgICAgICAgICAgMS4wCi8vIEBsaWNlbnNlICAgICAgICAgICBMR1BMdjMKLy8gQGNvbXBhdGlibGUgICAgICAgIGNocm9tZSBDaHJvbWVfNDYuMC4yNDkwLjg2ICsgVGFtcGVyTW9ua2V5Ci8vIEBjb21wYXRpYmxlICAgICAgICBmaXJlZm94IEZpcmVmb3hfNDIuMCArIEdyZWFzZU1vbmtleQovLyBAY29tcGF0aWJsZSAgICAgICAgb3BlcmEgT3BlcmFfMzMuMC4xOTkwLjExNSArIFRhbXBlck1vbmtleQovLyBAY29tcGF0aWJsZSAgICAgICAgc2FmYXJpCi8vIEBtYXRjaCAgICAgICAgICAgICAqOi8vKi8qCi8vIEBncmFudCAgICAgICAgICAgICBub25lCi8vIEBydW4tYXQgICAgICAgICAgICBkb2N1bWVudC1zdGFydAovLyA9PS9Vc2VyU2NyaXB0PT0KJ3VzZSBzdHJpY3QnOwoKdmFyIHJ1bGVzID0gewogIGJsYWNrX3J1bGU6IHsKICAgIG5hbWU6ICJibGFjayIsCiAgICBob29rX2V2ZW50TmFtZXM6ICIiLAogICAgdW5ob29rX2V2ZW50TmFtZXM6ICIiCiAgfSwKICBkZWZhdWx0X3J1bGU6IHsKICAgIG5hbWU6ICJkZWZhdWx0IiwKICAgIGhvb2tfZXZlbnROYW1lczogImNvbnRleHRtZW51fHNlbGVjdHxzZWxlY3RzdGFydHxjb3B5fGN1dHxkcmFnc3RhcnQiLAogICAgdW5ob29rX2V2ZW50TmFtZXM6ICJtb3VzZWRvd258bW91c2V1cHxrZXlkb3dufGtleXVwIiwKICAgIGRvbTA6IHRydWUsCiAgICBob29rX2FkZEV2ZW50TGlzdGVuZXI6IHRydWUsCiAgICBob29rX3ByZXZlbnREZWZhdWx0OiB0cnVlLAogICAgaG9va19zZXRfcmV0dXJuVmFsdWU6IHRydWUsCiAgICBhZGRfY3NzOiB0cnVlCiAgfQp9OwoKdmFyIGxpc3RzID0gewoKICBibGFja19saXN0OiBbCiAgICAvLipcLnlvdXR1YmVcLmNvbS4qLywKICAgIC90cmFuc2xhdGVcLmdvb2dsZVwuLiovCiAgXQp9OwoKdmFyIGhvb2tfZXZlbnROYW1lcywgdW5ob29rX2V2ZW50TmFtZXMsIGV2ZW50TmFtZXM7Cgp2YXIgc3RvcmFnZU5hbWUgPSBnZXRSYW5kU3RyKCdxd2VydHl1aW9wYXNkZmdoamtsenhjdmJubVFXRVJUWVVJT1BBU0RGR0hKS0xaWENWQk5NJywgcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDEyICsgOCkpOwoKdmFyIEV2ZW50VGFyZ2V0X2FkZEV2ZW50TGlzdGVuZXIgPSBFdmVudFRhcmdldC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcjsKdmFyIGRvY3VtZW50X2FkZEV2ZW50TGlzdGVuZXIgPSBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyOwp2YXIgRXZlbnRfcHJldmVudERlZmF1bHQgPSBFdmVudC5wcm90b3R5cGUucHJldmVudERlZmF1bHQ7CgovLyBIb29rIGFkZEV2ZW50TGlzdGVuZXIgcHJvYwpmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKHR5cGUsIGZ1bmMsIHVzZUNhcHR1cmUpIHsKICB2YXIgX2FkZEV2ZW50TGlzdGVuZXIgPSB0aGlzID09PSBkb2N1bWVudCA/IGRvY3VtZW50X2FkZEV2ZW50TGlzdGVuZXIgOiBFdmVudFRhcmdldF9hZGRFdmVudExpc3RlbmVyOwogIGlmKGhvb2tfZXZlbnROYW1lcy5pbmRleE9mKHR5cGUpID49IDApIHsKICAgIF9hZGRFdmVudExpc3RlbmVyLmFwcGx5KHRoaXMsIFt0eXBlLCByZXR1cm5UcnVlLCB1c2VDYXB0dXJlXSk7CiAgfSBlbHNlIGlmKHVuaG9va19ldmVudE5hbWVzLmluZGV4T2YodHlwZSkgPj0gMCkgewogICAgdmFyIGZ1bmNzTmFtZSA9IHN0b3JhZ2VOYW1lICsgdHlwZSArICh1c2VDYXB0dXJlID8gJ3QnIDogJ2YnKTsKCiAgICBpZih0aGlzW2Z1bmNzTmFtZV0gPT09IHVuZGVmaW5lZCkgewogICAgICB0aGlzW2Z1bmNzTmFtZV0gPSBbXTsKICAgICAgX2FkZEV2ZW50TGlzdGVuZXIuYXBwbHkodGhpcywgW3R5cGUsIHVzZUNhcHR1cmUgPyB1bmhvb2tfdCA6IHVuaG9va19mLCB1c2VDYXB0dXJlXSk7CiAgICB9CgogICAgdGhpc1tmdW5jc05hbWVdLnB1c2goZnVuYykKICB9IGVsc2UgewogICAgX2FkZEV2ZW50TGlzdGVuZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Cn0KCmZ1bmN0aW9uIGNsZWFyTG9vcCgpIHsKICB2YXIgZWxlbWVudHMgPSBnZXRFbGVtZW50cygpOwoKICBmb3IodmFyIGkgaW4gZWxlbWVudHMpIHsKICAgIGZvcih2YXIgaiBpbiBldmVudE5hbWVzKSB7CiAgICAgIHZhciBuYW1lID0gJ29uJyArIGV2ZW50TmFtZXNbal07CiAgICAgIGlmKGVsZW1lbnRzW2ldW25hbWVdICE9IG51bGwgJiYgZWxlbWVudHNbaV1bbmFtZV0gIT0gb254eHgpIHsKICAgICAgICBpZih1bmhvb2tfZXZlbnROYW1lcy5pbmRleE9mKGV2ZW50TmFtZXNbal0pID49IDApIHsKICAgICAgICAgIGVsZW1lbnRzW2ldW3N0b3JhZ2VOYW1lICsgbmFtZV0gPSBlbGVtZW50c1tpXVtuYW1lXTsKICAgICAgICAgIGVsZW1lbnRzW2ldW25hbWVdID0gb254eHg7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGVsZW1lbnRzW2ldW25hbWVdID0gbnVsbDsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0KCmZ1bmN0aW9uIHJldHVyblRydWUoZSkgewogIHJldHVybiB0cnVlOwp9CmZ1bmN0aW9uIHVuaG9va190KGUpIHsKICByZXR1cm4gdW5ob29rKGUsIHRoaXMsIHN0b3JhZ2VOYW1lICsgZS50eXBlICsgJ3QnKTsKfQpmdW5jdGlvbiB1bmhvb2tfZihlKSB7CiAgcmV0dXJuIHVuaG9vayhlLCB0aGlzLCBzdG9yYWdlTmFtZSArIGUudHlwZSArICdmJyk7Cn0KZnVuY3Rpb24gdW5ob29rKGUsIHNlbGYsIGZ1bmNzTmFtZSkgewogIHZhciBsaXN0ID0gc2VsZltmdW5jc05hbWVdOwogIGZvcih2YXIgaSBpbiBsaXN0KSB7CiAgICBsaXN0W2ldKGUpOwogIH0KCiAgZS5yZXR1cm5WYWx1ZSA9IHRydWU7CiAgcmV0dXJuIHRydWU7Cn0KZnVuY3Rpb24gb254eHgoZSkgewogIHZhciBuYW1lID0gc3RvcmFnZU5hbWUgKyAnb24nICsgZS50eXBlOwogIHRoaXNbbmFtZV0oZSk7CgogIGUucmV0dXJuVmFsdWUgPSB0cnVlOwogIHJldHVybiB0cnVlOwp9CgpmdW5jdGlvbiBnZXRSYW5kU3RyKGNocywgbGVuKSB7CiAgdmFyIHN0ciA9ICcnOwoKICB3aGlsZShsZW4tLSkgewogICAgc3RyICs9IGNoc1twYXJzZUludChNYXRoLnJhbmRvbSgpICogY2hzLmxlbmd0aCldOwogIH0KCiAgcmV0dXJuIHN0cjsKfQoKCmZ1bmN0aW9uIGdldEVsZW1lbnRzKCkgewogIHZhciBlbGVtZW50cyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCcqJykpOwogIGVsZW1lbnRzLnB1c2goZG9jdW1lbnQpOwoKICByZXR1cm4gZWxlbWVudHM7Cn0KCmZ1bmN0aW9uIGFkZFN0eWxlKGNzcykgewogIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgc3R5bGUuaW5uZXJIVE1MID0gY3NzOwogIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpOwp9CgpmdW5jdGlvbiBnZXRSdWxlKHVybCkgewogIGZ1bmN0aW9uIHRlc3RVcmwobGlzdCwgdXJsKSB7CiAgICBmb3IodmFyIGkgaW4gbGlzdCkgewogICAgICBpZihsaXN0W2ldLnRlc3QodXJsKSkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgaWYodGVzdFVybChsaXN0cy5ibGFja19saXN0LCB1cmwpKSB7CiAgICByZXR1cm4gcnVsZXMuYmxhY2tfcnVsZTsKICB9CgogIHJldHVybiBydWxlcy5kZWZhdWx0X3J1bGU7Cn0KCgpmdW5jdGlvbiBpbml0KCkgewoKICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLmhvc3QgKyB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7CiAgdmFyIHJ1bGUgPSBnZXRSdWxlKHVybCk7CgogIGhvb2tfZXZlbnROYW1lcyA9IHJ1bGUuaG9va19ldmVudE5hbWVzLnNwbGl0KCJ8Iik7CiAgLy8gVE9ETyBBbGxvd2VkIHRvIHJldHVybiB2YWx1ZQogIHVuaG9va19ldmVudE5hbWVzID0gcnVsZS51bmhvb2tfZXZlbnROYW1lcy5zcGxpdCgifCIpOwogIGV2ZW50TmFtZXMgPSBob29rX2V2ZW50TmFtZXMuY29uY2F0KHVuaG9va19ldmVudE5hbWVzKTsKCiAgaWYocnVsZS5kb20wKSB7CiAgICBzZXRJbnRlcnZhbChjbGVhckxvb3AsIDMwICogMTAwMCk7CiAgICBzZXRUaW1lb3V0KGNsZWFyTG9vcCwgMjUwMCk7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGNsZWFyTG9vcCwgdHJ1ZSk7CiAgICBjbGVhckxvb3AoKTsKICB9CgogIC8vIGhvb2sgYWRkRXZlbnRMaXN0ZW5lcgogIGlmKHJ1bGUuaG9va19hZGRFdmVudExpc3RlbmVyKSB7CiAgICBFdmVudFRhcmdldC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lciA9IGFkZEV2ZW50TGlzdGVuZXI7CiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcjsKICB9CgogIC8vIGhvb2sgcHJldmVudERlZmF1bHQKICBpZihydWxlLmhvb2tfcHJldmVudERlZmF1bHQpIHsKICAgIEV2ZW50LnByb3RvdHlwZS5wcmV2ZW50RGVmYXVsdCA9IGZ1bmN0aW9uKCkgewogICAgICBpZihldmVudE5hbWVzLmluZGV4T2YodGhpcy50eXBlKSA8IDApIHsKICAgICAgICBFdmVudF9wcmV2ZW50RGVmYXVsdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CiAgICB9OwogIH0KCiAgLy8gSG9vayBzZXQgcmV0dXJuVmFsdWUKICBpZihydWxlLmhvb2tfc2V0X3JldHVyblZhbHVlKSB7CiAgICBFdmVudC5wcm90b3R5cGUuX19kZWZpbmVTZXR0ZXJfXygncmV0dXJuVmFsdWUnLCBmdW5jdGlvbigpIHsKICAgICAgaWYodGhpcy5yZXR1cm5WYWx1ZSAhPSB0cnVlICYmIGV2ZW50TmFtZXMuaW5kZXhPZih0aGlzLnR5cGUpID49IDApIHsKICAgICAgICB0aGlzLnJldHVyblZhbHVlID0gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgfQoKICBjb25zb2xlLmRlYnVnKCd1cmw6ICcgKyB1cmwsICdzdG9yYWdlTmFtZe+8micgKyBzdG9yYWdlTmFtZSwgJ3J1bGU6ICcgKyBydWxlLm5hbWUpOwoKICBpZihydWxlLmFkZF9jc3MpIHsKICAgIGFkZFN0eWxlKCdodG1sLCAqIHstd2Via2l0LXVzZXItc2VsZWN0OnRleHQhaW1wb3J0YW50OyAtbW96LXVzZXItc2VsZWN0OnRleHQhaW1wb3J0YW50O30nKTsKICB9Cn0KCmluaXQoKTsK"},{"name":"Instagram Download Button","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.instagram.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537194,"data":{}},"enabled":true,"position":4,"file_url":"https://update.greasyfork.org/scripts/406535/Instagram%20Download%20Button.user.js","uuid":"75bf9b9c-d4f3-4a13-90f2-5f41a49921c5","source":""},{"name":"Bypass All Shortlinks","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["nocaptchaai.com"],"orig_excludes":["/^(https?:\\/\\/)(.+)?((advertisingexcel|talkforfitness|rsadnetworkinfo|rsinsuranceinfo|rsfinanceinfo|rssoftwareinfo|rshostinginfo|rseducationinfo|gametechreviewer|vegan4k|phineypet|batmanfactor|techedifier|urlhives|linkhives|github|freeoseocheck|greenenez|aliyun|reddit|bing|yahoo|wiki-topia|edonmanor|vrtier|whatsapp|gearsadviser|edonmanor|tunebug|menrealitycalc|amazon|ebay|payoneer|paypal|skrill|stripe|tipalti|wise|discord|tokopedia|taobao|taboola|aliexpress|netflix|citigroup|spotify|bankofamerica|hsbc|accounts.youtube|(cloud|mail|translate|analytics|accounts|myaccount|contacts|clients6|developers|payments|pay|ogs|safety|wallet).google|(login|signup|account|officeapps|api|mail|hotmail).live|basketballsavvy|healthyfollicles|hauntingrealm|pluginmixer|boredboard|boardgamechick|healthyfollicles).com|(thumb8|thumb9|crewbase|crewus|shinchu|shinbhu|ultraten|uniqueten|topcryptoz|allcryptoz|coinsvalue|cookinguide|cryptowidgets|webfreetools|carstopia|makeupguide|carsmania|nflximg|doubleclick|luckydice).net|(linksfly|shortsfly|urlsfly|wefly|blog24).me|(greasyfork|openuserjs|adarima|telegram|wikipedia).org|mcrypto.club|misterio.ro|insurancegold.in|coinscap.info|chefknives.expert|(shopee|lazada|rakuten|maybank|binance).*|(dana|ovo|bca.co|bri.co|bni.co|bankmandiri.co|desa|(.*).go).id|(.*).(edu|gov))(\\/.*)/"],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":["/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.youtube\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?accounts\\.youtube\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.facebook\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.fbsbx\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.netflix\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?ae\\.nflximg\\.net(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?pddikti-admin\\.kemdikbud\\.go\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?seller\\.shopee\\.co\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?chat\\.openai\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?play\\.pixels\\.xyz(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?menrealitycalc\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?mnet\\.my\\.id(:[0-9]{1,5})?\\/.*$/"],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537197,"data":{}},"enabled":true,"position":5,"file_url":"https://update.greasyfork.org/scripts/431691/Bypass%20All%20Shortlinks.user.js","uuid":"85135e3b-c4d9-40f1-9fad-2f8aacfbf1e3","source":"","requires":[{"meta":{"name":"MonkeyConfig%20Modern%20Reloaded.js","url":"https://update.greasyfork.org/scripts/439099/1203718/MonkeyConfig%20Modern%20Reloaded.js","ts":1716552951960,"mimetype":"text/javascript"},"source":""}]},{"name":"Facebook, Youtube and Reddit Video Downloader","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.facebook.com/*","https://www.youtube.com/*","https://www.reddit.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":["/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.youtube\\.com(:[0-9]{1,5})?\\/.*$/"],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537197,"data":{}},"enabled":false,"position":6,"file_url":"https://greasyfork.org/scripts/453302-facebook-youtube-and-reddit-video-downloader/code/Facebook,%20Youtube%20and%20Reddit%20Video%20Downloader.user.js","uuid":"bd6ef2a0-ed9b-46f1-bd4b-de84a6feabda","source":""},{"name":"Google Drive Auto Download (without preview)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://drive.google.com/*","https://docs.google.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537192,"data":{}},"enabled":false,"position":7,"uuid":"e11698b1-d6b1-404d-824f-1926c1a10240","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBHb29nbGUgRHJpdmUgQXV0byBEb3dubG9hZCAod2l0aG91dCBwcmV2aWV3KQovLyBAbmFtZXNwYWNlICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvZW4vdXNlcnMvMjIzMzYwCi8vIEB2ZXJzaW9uICAgICAgMS4wLjAuMQovLyBAZGVzY3JpcHRpb24gIEF1dG8gZG93bmxvYWQgZmlsZXMgZnJvbSBHb29nbGUgRHJpdmUgd2l0aG91dCBwcmV2aWV3LgovLyBAYXV0aG9yICAgICAgIFplbm5hcgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gQGljb24gICAgICAgICBodHRwczovL3NzbC5nc3RhdGljLmNvbS9kb2NzL2RvY2xpc3QvaW1hZ2VzL2luZmluaXRlX2Fycm93X2Zhdmljb25fNC5pY28KLy8gQHJ1bi1hdCAgICAgICBkb2N1bWVudC1lbmQKLy8gPT0vVXNlclNjcmlwdD09dnZ2YXIgdGhpc1VybCA9IGRvY3VtZW50LmxvY2F0aW9uLmhyZWY7CnZhciB0aGlzVXJsPWxvY2F0aW9uLmhyZWY7CmlmKC9bZHJpdmV8ZG9jc10uZ29vZ2xlLmNvbVwvZmlsZS8udGVzdCh0aGlzVXJsKSkKewogICAgdmFyIGdkZl9pZD0gL1wvZmlsZVwvZFwvKFteXC9dKykvaS5leGVjKHRoaXNVcmwpOwogICAgdmFyIG5ld2hyZWYgPSBsb2NhdGlvbi5wcm90b2NvbCsnLy8nK2xvY2F0aW9uLmhvc3RuYW1lKycvdWM/aWQ9JytnZGZfaWRbMV0rJyZleHBvcnQ9ZG93bmxvYWQnCiAgICBsb2NhdGlvbi5ocmVmPW5ld2hyZWY7CiAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgIHNlbGYuY2xvc2UoKTsKfSwxMDAwMCk7Cn0KaWYoL1tkcml2ZXxkb2NzXS5nb29nbGUuY29tXC91Y1w/aWQvLnRlc3QodGhpc1VybCkpCnsKICAgIHZhciBkbGJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1Yy1kb3dubG9hZC1saW5rJyk7CiAgICBpZiAoZGxidG4uaHJlZi5sZW5ndGggPiAwKSB7CiAgICAgICAgZGxidG4uY2xpY2soKTsKICAgIH0KICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7CiAgICBzZWxmLmNsb3NlKCk7Cn0sMTAwMDApOwp9Cg=="},{"name":"Return YouTube Dislike","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["youtube.com"],"orig_excludes":["*://music.youtube.com/*","*://*.music.youtube.com/*"],"orig_includes":[],"orig_matches":["*://*.youtube.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537193,"data":{}},"enabled":true,"position":8,"file_url":"https://github.com/Anarios/return-youtube-dislike/raw/main/Extensions/UserScript/Return%20Youtube%20Dislike.user.js","uuid":"19d55e25-e9e7-4011-8b6e-b2a7a4030fe9","source":""},{"name":"YouTube™ Multi Downloader - sfrom.net (Shift + D)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.youtube.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":1705124987672},"storage":{"ts":1715999537198,"data":{}},"enabled":false,"position":9,"file_url":"https://greasyfork.org/scripts/475514-youtube-multi-downloader-sfrom-net-shift-d/code/YouTube%E2%84%A2%20Multi%20Downloader%20-%20sfromnet%20(Shift%20+%20D).user.js","uuid":"24eff7fe-59a4-4ee8-8ade-5b83616b0f3e","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgWW91VHViZeKEoiBNdWx0aSBEb3dubG9hZGVyIC0gc2Zyb20ubmV0IChTaGlmdCArIEQpCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9lbi91c2Vycy8xMTc1MTY1LWFybnZnbAovLyBAdmVyc2lvbiAgICAgIDEuMAovLyBAZGVzY3JpcHRpb24gIEFkZHMgInNmcm9tLm5ldC8iIHRvIHRoZSBmcm9udCBvZiBZb3VUdWJlIFVSTCB3aGVuIFNoaWZ0ICsgRCBpcyBwcmVzc2VkIHRvIGVuYWJsZSBkb3dubG9hZGluZyB2aWRlb3MgZWFzaWx5LgovLyBAbGljZW5zZSAgICAgIE1JVAovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbihldmVudCkgewogICAgICAgIGlmIChldmVudC5zaGlmdEtleSAmJiBldmVudC5rZXkgPT09ICdEJykgewogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICB2YXIgY3VycmVudFVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwogICAgICAgICAgICB2YXIgbmV3VXJsID0gJ2h0dHBzOi8vc2Zyb20ubmV0LycgKyBjdXJyZW50VXJsOwogICAgICAgICAgICB3aW5kb3cub3BlbihuZXdVcmwsICdfYmxhbmsnKTsKICAgICAgICB9CiAgICB9KTsKfSkoKTs="},{"name":"7_Recaptcha Solver (BackUp)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["engageub.pythonanywhere.com","engageub1.pythonanywhere.com"],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*/recaptcha/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537193,"data":{}},"enabled":true,"position":10,"uuid":"f53faab1-334b-42cf-bb43-9a7843e56f12","source":""},{"name":"All Popups Blocker and reCAPTCHA Solver","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["/^(https?:\\/\\/)(.+)?(shortzon|coinadfly|bclikeqt|fc-lc)(\\.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(downfile|promo-visits)(\\.site)(\\/.*)/","/^(https?:\\/\\/)(.+)?(bcvc|satoshi-win)(\\.xyz)(\\/.*)/","/^(https?:\\/\\/)(1dogecoin|faucet)(\\.work)(\\/.*)/"],"orig_matches":["*://linkvertise.download/download/*","*://*.trangchu.news/*","*://*.bitcoinly.in/*","*://*.vshort.link/*","*://*.linka.click/*","*://*.linkres.in/*","*://*.cashurl.in/*","*://*.linkad.in/*","*://*.cuturl.in/*","*://*.mitly.us/*","*://*.aii.sh/*","*://*.iir.ai/*","*://*/recaptcha/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537203,"data":{}},"enabled":true,"position":11,"file_url":"https://greasyfork.org/scripts/439683-all-popups-blocker-and-recaptcha-solver/code/All%20Popups%20Blocker%20and%20reCAPTCHA%20Solver.user.js","uuid":"dbfd587f-381d-4c9c-b700-5943c20e0377","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEFsbCBQb3B1cHMgQmxvY2tlciBhbmQgcmVDQVBUQ0hBIFNvbHZlcgovLyBAbmFtZXNwYWNlICAgVmlvbGVudG1vbmtleSBTY3JpcHRzCi8vIEBpbmNsdWRlICAgICAvXihodHRwcz86XC9cLykoLispPyhzaG9ydHpvbnxjb2luYWRmbHl8YmNsaWtlcXR8ZmMtbGMpKFwuY29tKShcLy4qKS8KLy8gQGluY2x1ZGUgICAgIC9eKGh0dHBzPzpcL1wvKSguKyk/KGRvd25maWxlfHByb21vLXZpc2l0cykoXC5zaXRlKShcLy4qKS8KLy8gQGluY2x1ZGUgICAgIC9eKGh0dHBzPzpcL1wvKSguKyk/KGJjdmN8c2F0b3NoaS13aW4pKFwueHl6KShcLy4qKS8KLy8gQGluY2x1ZGUgICAgIC9eKGh0dHBzPzpcL1wvKSgxZG9nZWNvaW58ZmF1Y2V0KShcLndvcmspKFwvLiopLwovLyBAbWF0Y2ggICAgICAgKjovL2xpbmt2ZXJ0aXNlLmRvd25sb2FkL2Rvd25sb2FkLyoKLy8gQG1hdGNoICAgICAgICo6Ly8qLnRyYW5nY2h1Lm5ld3MvKgovLyBAbWF0Y2ggICAgICAgKjovLyouYml0Y29pbmx5LmluLyoKLy8gQG1hdGNoICAgICAgICo6Ly8qLnZzaG9ydC5saW5rLyoKLy8gQG1hdGNoICAgICAgICo6Ly8qLmxpbmthLmNsaWNrLyoKLy8gQG1hdGNoICAgICAgICo6Ly8qLmxpbmtyZXMuaW4vKgovLyBAbWF0Y2ggICAgICAgKjovLyouY2FzaHVybC5pbi8qCi8vIEBtYXRjaCAgICAgICAqOi8vKi5saW5rYWQuaW4vKgovLyBAbWF0Y2ggICAgICAgKjovLyouY3V0dXJsLmluLyoKLy8gQG1hdGNoICAgICAgICo6Ly8qLm1pdGx5LnVzLyoKLy8gQG1hdGNoICAgICAgICo6Ly8qLmFpaS5zaC8qCi8vIEBtYXRjaCAgICAgICAqOi8vKi5paXIuYWkvKgovLyBAbWF0Y2ggICAgICAgKjovLyovcmVjYXB0Y2hhLyoKLy8gQHZlcnNpb24gICAgIDQuMQovLyBAYXV0aG9yICAgICAgQmxvZ2dlciBQZW11bGEKLy8gQHJ1bi1hdCAgICAgIGRvY3VtZW50LXN0YXJ0Ci8vIEBsaWNlbnNlICAgICBHUEwtMy4wLW9yLWxhdGVyCi8vIEBncmFudCAgICAgICBHTV94bWxodHRwUmVxdWVzdAovLyBAcmVxdWlyZSAgICAgaHR0cHM6Ly9jb2RlLmpxdWVyeS5jb20vanF1ZXJ5LTMuNi4wLm1pbi5qcwovLyBAcmVxdWlyZSAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzQ0NDg3Mi03LXJlY2FwdGNoYS1zb2x2ZXItYmFja3VwL2NvZGUvN19SZWNhcHRjaGElMjBTb2x2ZXIlMjAoQmFja1VwKS51c2VyLmpzI2J5cGFzcz10cnVlCi8vIEByZXF1aXJlICAgICBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL25vdGlmeS1qcy1sZWdhY3lAMC40LjEvbm90aWZ5LmpzCi8vIEBkZXNjcmlwdGlvbiBUaGlzIFNjcmlwdCB3aWxsIEJsb2NrIEFsbCBQb3B1cHMgU2l0ZXMgaW4gdGhlIExpc3RzICwgYW5kIEF1dG8gU29sdmluZyBHb29nbGUgcmVDQVBUQ0hBCi8vID09L1VzZXJTY3JpcHQ9PQovKmpzbGludCBldmlsOiB0cnVlICovCmZ1bmN0aW9uIHJlZGlyZWN0KHVybCwgYmxvZyA9IHRydWUpIHtsb2NhdGlvbiA9IGJsb2cgPyAnaHR0cHM6Ly9yb3RhdG9yLm51cnVsLWh1ZGEuc2NoLmlkLz91cmw9JyArIHVybCA6IHVybDt9CnZhciBibG9ja29uY2xpY2sgPSBuZXcgRnVuY3Rpb24oImNvbnNvbGUubG9nKCdCbG9ja2VkIEJ5IEJsb2dnZXJQZW11bGEnKSIpOwoKZnVuY3Rpb24gQmxvY2tQb3B1cChlKXtyZXR1cm4gMTt9CnBhcmVudC5vcGVuPUJsb2NrUG9wdXA7IHRoaXMub3Blbj1CbG9ja1BvcHVwOyB3aW5kb3cub3Blbj1CbG9ja1BvcHVwOyBvbmxvYWQ9QmxvY2tQb3B1cDsKd2luZG93Lm9wZW4gPSBmdW5jdGlvbigpeyByZXR1cm47fTsKb25sb2FkID0gZnVuY3Rpb24oKXsgcmV0dXJuO307CnRoaXMub3BlbiA9IGZ1bmN0aW9uKCl7IHJldHVybjt9OwpwYXJlbnQub3BlbiA9IGZ1bmN0aW9uKCl7IHJldHVybjt9Owp1bnNhZmVXaW5kb3cub3BlbiA9IGZ1bmN0aW9uKCl7fTsKaWYoWydsaW5rdmVydGlzZS5kb3dubG9hZCddLmluY2x1ZGVzKHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSkgPiAtMSl7bGV0ICQ9d2luZG93LmpRdWVyeSxsb2thbD0hMDtmdW5jdGlvbiBCeXBhc3NMaW5rdmVyKCl7bGV0IGU9d2luZG93LmxvY2F0aW9uOyIvIiE9ZS5wYXRobmFtZSYmInRleHQvaHRtbCI9PWRvY3VtZW50LmNvbnRlbnRUeXBlJiZieXBhc3MoZSl9YXN5bmMgZnVuY3Rpb24gYnlwYXNzKGUpe2lmKCEoImxpbmt2ZXJ0aXNlLmNvbSI9PWUuaG9zdG5hbWUmJmUucGF0aG5hbWUuc3RhcnRzV2l0aCgiLyIpJiZlLnBhdGhuYW1lLnNwbGl0KCIvIikubGVuZ3RoPj0zKSlyZXR1cm4ibGlua3ZlcnRpc2UuZG93bmxvYWQiPT1lLmhvc3RuYW1lP3ZvaWQgYnlwYXNzRG93bmxvYWQoZSk6dm9pZCAwO2lmKGxva2FsKXskLm5vdGlmeSgiU3RlcHMgMS4uLiIse2NsYXNzTmFtZToiaW5mbyIsYXV0b0hpZGVEZWxheTo3ZTN9KTtsZXQgdD1lLnBhdGhuYW1lLnNwbGl0KCIvIilbMV0sbj1lLnBhdGhuYW1lLnNwbGl0KCIvIilbMl0sYT1lLnBhdGhuYW1lLmluY2x1ZGVzKCIvZHluYW1pYyIpLHM9YSYmd2luZG93LmxvY2F0aW9uLnNlYXJjaC5pbmNsdWRlcygiJnI9Iik/d2luZG93LmxvY2F0aW9uLnNlYXJjaC5zcGxpdCgiJnI9IilbMV0uc3BsaXQoIiYiKVswXTphJiZ3aW5kb3cubG9jYXRpb24uc2VhcmNoLmluY2x1ZGVzKCI/cj0iKT93aW5kb3cubG9jYXRpb24uc2VhcmNoLnNwbGl0KCI/cj0iKVsxXS5zcGxpdCgiJiIpWzBdOiIiO0dNX3htbGh0dHBSZXF1ZXN0KHttZXRob2Q6IkdFVCIsdXJsOiJodHRwczovL3B1Ymxpc2hlci5saW5rdmVydGlzZS5jb20vYXBpL3YxL3JlZGlyZWN0L2xpbmsvIisoYT8iZHluYW1pYy8iK3QrIi8iK3M6InN0YXRpYy8iK3QrIi8iK24pLG9ubG9hZDpmdW5jdGlvbihhKXtsZXQgcz1KU09OLnBhcnNlKGEucmVzcG9uc2VUZXh0KTtuPXMuZGF0YS5saW5rLnVybDtsZXQgbz1zLmRhdGEubGluay50YXJnZXRfdHlwZTtHTV94bWxodHRwUmVxdWVzdCh7bWV0aG9kOiJHRVQiLHVybDoiaHR0cHM6Ly9iYWxhdGluLmRlL2FwaS9zZXJpYWw/cD0iK24rIiZwaWQ9Iit0KyImaWQ9IitzLmRhdGEubGluay5pZCxvbmxvYWQ6ZnVuY3Rpb24oYSl7bGV0IGk9SlNPTi5wYXJzZShhLnJlc3BvbnNlVGV4dCk7R01feG1saHR0cFJlcXVlc3Qoe21ldGhvZDoiR0VUIix1cmw6Imh0dHBzOi8vcGFwZXIub3N0cmljaGVzaWNhLmNvbS9jdD9pZD0xNDQ3MyZ1cmw9IitlbmNvZGVVUklDb21wb25lbnQoZS5ocmVmKSxvbmxvYWQ6ZnVuY3Rpb24oZSl7bGV0IGE9ZS5yZXNwb25zZVRleHQuc3BsaXQoJyJqc29ucCI6IicpWzFdLnNwbGl0KCciJylbMF07R01feG1saHR0cFJlcXVlc3Qoe21ldGhvZDoiUE9TVCIsdXJsOiJodHRwczovL3B1Ymxpc2hlci5saW5rdmVydGlzZS5jb20vYXBpL3YxL3JlZGlyZWN0L2xpbmsvIit0KyIvIituKyIvdHJhZmZpYy12YWxpZGF0aW9uIixkYXRhOkpTT04uc3RyaW5naWZ5KHt0eXBlOiJjcSIsdG9rZW46YX0pLGhlYWRlcnM6eyJDb250ZW50LVR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIn0sb25sb2FkOmZ1bmN0aW9uKGUpe3M9SlNPTi5wYXJzZShlLnJlc3BvbnNlVGV4dCk7bGV0IGE9cy5kYXRhLnRva2Vucy5UQVJHRVQ7aS50b2tlbj1hO0dNX3htbGh0dHBSZXF1ZXN0KHttZXRob2Q6IlBPU1QiLHVybDoiaHR0cHM6Ly9wdWJsaXNoZXIubGlua3ZlcnRpc2UuY29tL2FwaS92MS9yZWRpcmVjdC9saW5rLyIrdCsiLyIrbisoIlBBU1RFIj09bz8iL3Bhc3RlIjoiL3RhcmdldCIpLGRhdGE6SlNPTi5zdHJpbmdpZnkoaSksaGVhZGVyczp7IkNvbnRlbnQtVHlwZSI6ImFwcGxpY2F0aW9uL2pzb24ifSxvbmxvYWQ6ZnVuY3Rpb24oZSl7aWYoKHM9SlNPTi5wYXJzZShlLnJlc3BvbnNlVGV4dCksIlBBU1RFIiE9bykpe2xldCBlPW5ldyBVUkwocy5kYXRhLnRhcmdldCk7Imxpbmt2ZXJ0aXNlLmRvd25sb2FkIj09ZS5ob3N0bmFtZT9ieXBhc3NEb3dubG9hZChlKTpMaW5rUmVzKGUuaHJlZil9ZWxzZSBMaW5rUmVzKCJodHRwczovL2JhbGF0aW4uZGUvYXBpL3R4dC8iK2J0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHMuZGF0YS5wYXN0ZSkpKSl9fSl9fSl9fSl9fSl9fSl9ZWxzZSBHTV94bWxodHRwUmVxdWVzdCh7bWV0aG9kOiJQT1NUIix1cmw6Imh0dHBzOi8vYXBpLmJ5cGFzcy52aXAvIixoZWFkZXJzOnsiQ29udGVudC1UeXBlIjoiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9VVRGLTgifSxkYXRhOiJ1cmw9IitlbmNvZGVVUklDb21wb25lbnQoZS5ocmVmKSxvbmxvYWQ6ZnVuY3Rpb24oZSl7bGV0IHQ9SlNPTi5wYXJzZShlLnJlc3BvbnNlVGV4dCk7bnVsbCE9dCYmbnVsbCE9dC5kZXN0aW5hdGlvbj9MaW5rUmVzKHQuZGVzdGluYXRpb24pOm51bGwhPXQmJm51bGwhPXQucmVzcG9uc2U/TGlua1JlcygiaHR0cHM6Ly9iYWxhdGluLmRlL2FwaS90eHQvIitidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCh0LnJlc3BvbnNlKSkpKTokLm5vdGlmeSgiQ291bGQgbm90IGJ5cGFzcyBsaW5rIix7Y2xhc3NOYW1lOiJlcnJvciIsYXV0b0hpZGVEZWxheToxZTR9KX19KX1CeXBhc3NMaW5rdmVyKCk7Y29uc3QgU3RlcDM9ITA7YXN5bmMgZnVuY3Rpb24gYnlwYXNzRG93bmxvYWQoZSl7aWYoZS5wYXRobmFtZS5zdGFydHNXaXRoKCIvZG93bmxvYWQvIikpe2xldCB0PWUucGF0aG5hbWUuc3BsaXQoIi8iKVsyXSxuPWUucGF0aG5hbWUuc3BsaXQoIi8iKVszXTskLm5vdGlmeSgiU3RlcHMgMi4uIix7Y2xhc3NOYW1lOiJiYXNlIixhdXRvSGlkZURlbGF5OjNlM30pO2xldCBhPUpTT04uc3RyaW5naWZ5KHtrZXk6ZS5wYXRobmFtZS5zcGxpdCgiLyIpWzRdfSk7R01feG1saHR0cFJlcXVlc3Qoe21ldGhvZDoiUE9TVCIsdXJsOiJodHRwczovL3B1Ymxpc2hlci5saW5rdmVydGlzZS5jb20vYXBpL3YxL3JlZGlyZWN0L2xpbmsvIit0KyIvIituKyIvZG93bmxvYWQtaW5mbyIsZGF0YTphLGhlYWRlcnM6eyJDb250ZW50LVR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIn0sb25sb2FkOmZ1bmN0aW9uKGUpe2xldCB0PUpTT04ucGFyc2UoZS5yZXNwb25zZVRleHQpLG49bmV3IFVSTCh0LmRhdGEuZG93bmxvYWRVcmwpO24uaG9zdG5hbWUuZW5kc1dpdGgoImNsb3VkZnJvbnQubmV0Iik/R01feG1saHR0cFJlcXVlc3Qoe21ldGhvZDoiR0VUIix1cmw6Imh0dHBzOi8vYmFsYXRpbi5kZS9hcGkvc3RhZ2U2P3VybD0iK24uaHJlZixvbmxvYWQ6ZnVuY3Rpb24oZSl7dD1lLnJlc3BvbnNlVGV4dDtsZXQgbj1KU09OLnN0cmluZ2lmeSh7YToiTGlua3ZlcnRpc2UiLHM6Ikxpbmt2ZXJ0aXNlIix1OnR9KTtHTV94bWxodHRwUmVxdWVzdCh7bWV0aG9kOiJQT1NUIix1cmw6Imh0dHBzOi8vZDE3a3ozaTZoYnI3ZDMuY2xvdWRmcm9udC5uZXQvbyIsZGF0YTpuLGhlYWRlcnM6eyJDb250ZW50LVR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIn0sb25sb2FkOmZ1bmN0aW9uKGUpe0xpbmtSZXMoSlNPTi5wYXJzZShlLnJlc3BvbnNlVGV4dCkuaS5jdSl9fSl9fSk6TGlua1JlcyhuLmhyZWYpfX0pfX1jb25zdCByZXN0PTEwLG5ld3RhYj0hMTthc3luYyBmdW5jdGlvbiBMaW5rUmVzKGUpe3RyeXtuZXcgVVJMKGUpO31jYXRjaChlKXtyZXR1cm4gdm9pZChsb2thbCYmYnlwYXNzKHdpbmRvdy5sb2NhdGlvbikpfXdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5zdGFydHNXaXRoKCIvNDgxOTMvIik/c2V0VGltZW91dCgoKCk9PnskLm5vdGlmeSgiUmVkaXJlY3RpbmcuLi4iLHtjbGFzc05hbWU6InN1Y2Nlc3MiLGF1dG9IaWRlRGVsYXk6OGUzfSk7cmVkaXJlY3QoZSk7fSksMTUxMDApOnNldFRpbWVvdXQoKCgpPT57JC5ub3RpZnkoIlJlZGlyZWN0aW5nLi4uIix7Y2xhc3NOYW1lOiJzdWNjZXNzIixhdXRvSGlkZURlbGF5OjhlM30pO3JlZGlyZWN0KGUpO30pLDEwKX19ZWxzZSB7fQ==","requires":[{"meta":{"name":"jquery-3.6.0.min.js","url":"https://code.jquery.com/jquery-3.6.0.min.js","ts":1716552742905,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"notify.js","url":"https://cdn.jsdelivr.net/npm/notify-js-legacy@0.4.1/notify.js","ts":1716552744209,"mimetype":"text/javascript"},"source":"LyogTm90aWZ5LmpzIC0gaHR0cDovL25vdGlmeWpzLmNvbS8gQ29weXJpZ2h0IChjKSAyMDE1IE1JVCAqLwooZnVuY3Rpb24gKGZhY3RvcnkpIHsKCS8vIFVNRCBzdGFydAoJLy8gaHR0cHM6Ly9naXRodWIuY29tL3VtZGpzL3VtZC9ibG9iL21hc3Rlci9qcXVlcnlQbHVnaW5Db21tb25qcy5qcwoJaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewoJCS8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZS4KCQlkZWZpbmUoWydqcXVlcnknXSwgZmFjdG9yeSk7Cgl9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKSB7CgkJLy8gTm9kZS9Db21tb25KUwoJCW1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oIHJvb3QsIGpRdWVyeSApIHsKCQkJaWYgKCBqUXVlcnkgPT09IHVuZGVmaW5lZCApIHsKCQkJCS8vIHJlcXVpcmUoJ2pRdWVyeScpIHJldHVybnMgYSBmYWN0b3J5IHRoYXQgcmVxdWlyZXMgd2luZG93IHRvCgkJCQkvLyBidWlsZCBhIGpRdWVyeSBpbnN0YW5jZSwgd2Ugbm9ybWFsaXplIGhvdyB3ZSB1c2UgbW9kdWxlcwoJCQkJLy8gdGhhdCByZXF1aXJlIHRoaXMgcGF0dGVybiBidXQgdGhlIHdpbmRvdyBwcm92aWRlZCBpcyBhIG5vb3AKCQkJCS8vIGlmIGl0J3MgZGVmaW5lZCAoaG93IGpxdWVyeSB3b3JrcykKCQkJCWlmICggdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgKSB7CgkJCQkJalF1ZXJ5ID0gcmVxdWlyZSgnanF1ZXJ5Jyk7CgkJCQl9CgkJCQllbHNlIHsKCQkJCQlqUXVlcnkgPSByZXF1aXJlKCdqcXVlcnknKShyb290KTsKCQkJCX0KCQkJfQoJCQlmYWN0b3J5KGpRdWVyeSk7CgkJCXJldHVybiBqUXVlcnk7CgkJfTsKCX0gZWxzZSB7CgkJLy8gQnJvd3NlciBnbG9iYWxzCgkJZmFjdG9yeShqUXVlcnkpOwoJfQp9KGZ1bmN0aW9uICgkKSB7CgkvL0lFOCBpbmRleE9mIHBvbHlmaWxsCgl2YXIgaW5kZXhPZiA9IFtdLmluZGV4T2YgfHwgZnVuY3Rpb24oaXRlbSkgewoJCWZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKCQkJaWYgKGkgaW4gdGhpcyAmJiB0aGlzW2ldID09PSBpdGVtKSB7CgkJCQlyZXR1cm4gaTsKCQkJfQoJCX0KCQlyZXR1cm4gLTE7Cgl9OwoKCXZhciBwbHVnaW5OYW1lID0gIm5vdGlmeSI7Cgl2YXIgcGx1Z2luQ2xhc3NOYW1lID0gcGx1Z2luTmFtZSArICJqcyI7Cgl2YXIgYmxhbmtGaWVsZE5hbWUgPSBwbHVnaW5OYW1lICsgIiFibGFuayI7CgoJdmFyIHBvc2l0aW9ucyA9IHsKCQl0OiAidG9wIiwKCQltOiAibWlkZGxlIiwKCQliOiAiYm90dG9tIiwKCQlsOiAibGVmdCIsCgkJYzogImNlbnRlciIsCgkJcjogInJpZ2h0IgoJfTsKCXZhciBoQWxpZ25zID0gWyJsIiwgImMiLCAiciJdOwoJdmFyIHZBbGlnbnMgPSBbInQiLCAibSIsICJiIl07Cgl2YXIgbWFpblBvc2l0aW9ucyA9IFsidCIsICJiIiwgImwiLCAiciJdOwoJdmFyIG9wcG9zaXRlcyA9IHsKCQl0OiAiYiIsCgkJbTogbnVsbCwKCQliOiAidCIsCgkJbDogInIiLAoJCWM6IG51bGwsCgkJcjogImwiCgl9OwoKCXZhciBwYXJzZVBvc2l0aW9uID0gZnVuY3Rpb24oc3RyKSB7CgkJdmFyIHBvczsKCQlwb3MgPSBbXTsKCQkkLmVhY2goc3RyLnNwbGl0KC9cVysvKSwgZnVuY3Rpb24oaSwgd29yZCkgewoJCQl2YXIgdzsKCQkJdyA9IHdvcmQudG9Mb3dlckNhc2UoKS5jaGFyQXQoMCk7CgkJCWlmIChwb3NpdGlvbnNbd10pIHsKCQkJCXJldHVybiBwb3MucHVzaCh3KTsKCQkJfQoJCX0pOwoJCXJldHVybiBwb3M7Cgl9OwoKCXZhciBzdHlsZXMgPSB7fTsKCgl2YXIgY29yZVN0eWxlID0gewoJCW5hbWU6ICJjb3JlIiwKCQlodG1sOiAiPGRpdiBjbGFzcz1cIiIgKyBwbHVnaW5DbGFzc05hbWUgKyAiLXdyYXBwZXJcIj5cbgk8ZGl2IGNsYXNzPVwiIiArIHBsdWdpbkNsYXNzTmFtZSArICItYXJyb3dcIj48L2Rpdj5cbgk8ZGl2IGNsYXNzPVwiIiArIHBsdWdpbkNsYXNzTmFtZSArICItY29udGFpbmVyXCI+PC9kaXY+XG48L2Rpdj4iLAoJCWNzczogIi4iICsgcGx1Z2luQ2xhc3NOYW1lICsgIi1jb3JuZXIge1xuCXBvc2l0aW9uOiBmaXhlZDtcbgltYXJnaW46IDVweDtcbgl6LWluZGV4OiAxMDUwO1xufVxuXG4uIiArIHBsdWdpbkNsYXNzTmFtZSArICItY29ybmVyIC4iICsgcGx1Z2luQ2xhc3NOYW1lICsgIi13cmFwcGVyLFxuLiIgKyBwbHVnaW5DbGFzc05hbWUgKyAiLWNvcm5lciAuIiArIHBsdWdpbkNsYXNzTmFtZSArICItY29udGFpbmVyIHtcbglwb3NpdGlvbjogcmVsYXRpdmU7XG4JZGlzcGxheTogYmxvY2s7XG4JaGVpZ2h0OiBpbmhlcml0O1xuCXdpZHRoOiBpbmhlcml0O1xuCW1hcmdpbjogM3B4O1xufVxuXG4uIiArIHBsdWdpbkNsYXNzTmFtZSArICItd3JhcHBlciB7XG4Jei1pbmRleDogMTtcbglwb3NpdGlvbjogYWJzb2x1dGU7XG4JZGlzcGxheTogaW5saW5lLWJsb2NrO1xuCWhlaWdodDogMDtcbgl3aWR0aDogMDtcbn1cblxuLiIgKyBwbHVnaW5DbGFzc05hbWUgKyAiLWNvbnRhaW5lciB7XG4JZGlzcGxheTogbm9uZTtcbgl6LWluZGV4OiAxO1xuCXBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cblxuLiIgKyBwbHVnaW5DbGFzc05hbWUgKyAiLWhpZGFibGUge1xuCWN1cnNvcjogcG9pbnRlcjtcbn1cblxuW2RhdGEtbm90aWZ5LXRleHRdLFtkYXRhLW5vdGlmeS1odG1sXSB7XG4JcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uIiArIHBsdWdpbkNsYXNzTmFtZSArICItYXJyb3cge1xuCXBvc2l0aW9uOiBhYnNvbHV0ZTtcbgl6LWluZGV4OiAyO1xuCXdpZHRoOiAwO1xuCWhlaWdodDogMDtcbn0iCgl9OwoKCXZhciBzdHlsZVByZWZpeGVzID0gewoJCSJib3JkZXItcmFkaXVzIjogWyItd2Via2l0LSIsICItbW96LSJdCgl9OwoKCXZhciBnZXRTdHlsZSA9IGZ1bmN0aW9uKG5hbWUpIHsKCQlyZXR1cm4gc3R5bGVzW25hbWVdOwoJfTsKCgl2YXIgYWRkU3R5bGUgPSBmdW5jdGlvbihuYW1lLCBkZWYpIHsKCQlpZiAoIW5hbWUpIHsKCQkJdGhyb3cgIk1pc3NpbmcgU3R5bGUgbmFtZSI7CgkJfQoJCWlmICghZGVmKSB7CgkJCXRocm93ICJNaXNzaW5nIFN0eWxlIGRlZmluaXRpb24iOwoJCX0KCQlpZiAoIWRlZi5odG1sKSB7CgkJCXRocm93ICJNaXNzaW5nIFN0eWxlIEhUTUwiOwoJCX0KCQkvL3JlbW92ZSBleGlzdGluZyBzdHlsZQoJCXZhciBleGlzdGluZyA9IHN0eWxlc1tuYW1lXTsKCQlpZiAoZXhpc3RpbmcgJiYgZXhpc3RpbmcuY3NzRWxlbSkgewoJCQlpZiAod2luZG93LmNvbnNvbGUpIHsKCQkJCWNvbnNvbGUud2FybihwbHVnaW5OYW1lICsgIjogb3ZlcndyaXRpbmcgc3R5bGUgJyIgKyBuYW1lICsgIiciKTsKCQkJfQoJCQlzdHlsZXNbbmFtZV0uY3NzRWxlbS5yZW1vdmUoKTsKCQl9CgkJZGVmLm5hbWUgPSBuYW1lOwoJCXN0eWxlc1tuYW1lXSA9IGRlZjsKCQl2YXIgY3NzVGV4dCA9ICIiOwoJCWlmIChkZWYuY2xhc3NlcykgewoJCQkkLmVhY2goZGVmLmNsYXNzZXMsIGZ1bmN0aW9uKGNsYXNzTmFtZSwgcHJvcHMpIHsKCQkJCWNzc1RleHQgKz0gIi4iICsgcGx1Z2luQ2xhc3NOYW1lICsgIi0iICsgZGVmLm5hbWUgKyAiLSIgKyBjbGFzc05hbWUgKyAiIHtcbiI7CgkJCQkkLmVhY2gocHJvcHMsIGZ1bmN0aW9uKG5hbWUsIHZhbCkgewoJCQkJCWlmIChzdHlsZVByZWZpeGVzW25hbWVdKSB7CgkJCQkJCSQuZWFjaChzdHlsZVByZWZpeGVzW25hbWVdLCBmdW5jdGlvbihpLCBwcmVmaXgpIHsKCQkJCQkJCXJldHVybiBjc3NUZXh0ICs9ICIJIiArIHByZWZpeCArIG5hbWUgKyAiOiAiICsgdmFsICsgIjtcbiI7CgkJCQkJCX0pOwoJCQkJCX0KCQkJCQlyZXR1cm4gY3NzVGV4dCArPSAiCSIgKyBuYW1lICsgIjogIiArIHZhbCArICI7XG4iOwoJCQkJfSk7CgkJCQlyZXR1cm4gY3NzVGV4dCArPSAifVxuIjsKCQkJfSk7CgkJfQoJCWlmIChkZWYuY3NzKSB7CgkJCWNzc1RleHQgKz0gIi8qIHN0eWxlcyBmb3IgIiArIGRlZi5uYW1lICsgIiAqL1xuIiArIGRlZi5jc3M7CgkJfQoJCWlmIChjc3NUZXh0KSB7CgkJCWRlZi5jc3NFbGVtID0gaW5zZXJ0Q1NTKGNzc1RleHQpOwoJCQlkZWYuY3NzRWxlbS5hdHRyKCJpZCIsICJub3RpZnktIiArIGRlZi5uYW1lKTsKCQl9CgkJdmFyIGZpZWxkcyA9IHt9OwoJCXZhciBlbGVtID0gJChkZWYuaHRtbCk7CgkJZmluZEZpZWxkcygiaHRtbCIsIGVsZW0sIGZpZWxkcyk7CgkJZmluZEZpZWxkcygidGV4dCIsIGVsZW0sIGZpZWxkcyk7CgkJZGVmLmZpZWxkcyA9IGZpZWxkczsKCX07CgoJdmFyIGluc2VydENTUyA9IGZ1bmN0aW9uKGNzc1RleHQpIHsKCQl2YXIgZSwgZWxlbSwgZXJyb3I7CgkJZWxlbSA9IGNyZWF0ZUVsZW0oInN0eWxlIik7CgkJZWxlbS5hdHRyKCJ0eXBlIiwgJ3RleHQvY3NzJyk7CgkJJCgiaGVhZCIpLmFwcGVuZChlbGVtKTsKCQl0cnkgewoJCQllbGVtLmh0bWwoY3NzVGV4dCk7CgkJfSBjYXRjaCAoXykgewoJCQllbGVtWzBdLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzc1RleHQ7CgkJfQoJCXJldHVybiBlbGVtOwoJfTsKCgl2YXIgZmluZEZpZWxkcyA9IGZ1bmN0aW9uKHR5cGUsIGVsZW0sIGZpZWxkcykgewoJCXZhciBhdHRyOwoJCWlmICh0eXBlICE9PSAiaHRtbCIpIHsKCQkJdHlwZSA9ICJ0ZXh0IjsKCQl9CgkJYXR0ciA9ICJkYXRhLW5vdGlmeS0iICsgdHlwZTsKCQlyZXR1cm4gZmluZChlbGVtLCAiWyIgKyBhdHRyICsgIl0iKS5lYWNoKGZ1bmN0aW9uKCkgewoJCQl2YXIgbmFtZTsKCQkJbmFtZSA9ICQodGhpcykuYXR0cihhdHRyKTsKCQkJaWYgKCFuYW1lKSB7CgkJCQluYW1lID0gYmxhbmtGaWVsZE5hbWU7CgkJCX0KCQkJZmllbGRzW25hbWVdID0gdHlwZTsKCQl9KTsKCX07CgoJdmFyIGZpbmQgPSBmdW5jdGlvbihlbGVtLCBzZWxlY3RvcikgewoJCWlmIChlbGVtLmlzKHNlbGVjdG9yKSkgewoJCQlyZXR1cm4gZWxlbTsKCQl9IGVsc2UgewoJCQlyZXR1cm4gZWxlbS5maW5kKHNlbGVjdG9yKTsKCQl9Cgl9OwoKCXZhciBwbHVnaW5PcHRpb25zID0gewoJCWNsaWNrVG9IaWRlOiB0cnVlLAoJCWF1dG9IaWRlOiB0cnVlLAoJCWF1dG9IaWRlRGVsYXk6IDUwMDAsCgkJYXJyb3dTaG93OiB0cnVlLAoJCWFycm93U2l6ZTogNSwKCQlicmVha05ld0xpbmVzOiB0cnVlLAoJCWVsZW1lbnRQb3NpdGlvbjogImJvdHRvbSIsCgkJZ2xvYmFsUG9zaXRpb246ICJ0b3AgcmlnaHQiLAoJCXN0eWxlOiAiYm9vdHN0cmFwIiwKCQljbGFzc05hbWU6ICJlcnJvciIsCgkJc2hvd0FuaW1hdGlvbjogInNsaWRlRG93biIsCgkJc2hvd0R1cmF0aW9uOiA0MDAsCgkJaGlkZUFuaW1hdGlvbjogInNsaWRlVXAiLAoJCWhpZGVEdXJhdGlvbjogMjAwLAoJCWdhcDogNQoJfTsKCgl2YXIgaW5oZXJpdCA9IGZ1bmN0aW9uKGEsIGIpIHsKCQl2YXIgRjsKCQlGID0gZnVuY3Rpb24oKSB7fTsKCQlGLnByb3RvdHlwZSA9IGE7CgkJcmV0dXJuICQuZXh0ZW5kKHRydWUsIG5ldyBGKCksIGIpOwoJfTsKCgl2YXIgZGVmYXVsdHMgPSBmdW5jdGlvbihvcHRzKSB7CgkJcmV0dXJuICQuZXh0ZW5kKHBsdWdpbk9wdGlvbnMsIG9wdHMpOwoJfTsKCgl2YXIgY3JlYXRlRWxlbSA9IGZ1bmN0aW9uKHRhZykgewoJCXJldHVybiAkKCI8IiArIHRhZyArICI+PC8iICsgdGFnICsgIj4iKTsKCX07CgoJdmFyIGdsb2JhbEFuY2hvcnMgPSB7fTsKCgl2YXIgZ2V0QW5jaG9yRWxlbWVudCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHsKCQl2YXIgcmFkaW9zOwoJCWlmIChlbGVtZW50LmlzKCdbdHlwZT1yYWRpb10nKSkgewoJCQlyYWRpb3MgPSBlbGVtZW50LnBhcmVudHMoJ2Zvcm06Zmlyc3QnKS5maW5kKCdbdHlwZT1yYWRpb10nKS5maWx0ZXIoZnVuY3Rpb24oaSwgZSkgewoJCQkJcmV0dXJuICQoZSkuYXR0cigibmFtZSIpID09PSBlbGVtZW50LmF0dHIoIm5hbWUiKTsKCQkJfSk7CgkJCWVsZW1lbnQgPSByYWRpb3MuZmlyc3QoKTsKCQl9CgkJcmV0dXJuIGVsZW1lbnQ7Cgl9OwoKCXZhciBpbmNyID0gZnVuY3Rpb24ob2JqLCBwb3MsIHZhbCkgewoJCXZhciBvcHAsIHRlbXA7CgkJaWYgKHR5cGVvZiB2YWwgPT09ICJzdHJpbmciKSB7CgkJCXZhbCA9IHBhcnNlSW50KHZhbCwgMTApOwoJCX0gZWxzZSBpZiAodHlwZW9mIHZhbCAhPT0gIm51bWJlciIpIHsKCQkJcmV0dXJuOwoJCX0KCQlpZiAoaXNOYU4odmFsKSkgewoJCQlyZXR1cm47CgkJfQoJCW9wcCA9IHBvc2l0aW9uc1tvcHBvc2l0ZXNbcG9zLmNoYXJBdCgwKV1dOwoJCXRlbXAgPSBwb3M7CgkJaWYgKG9ialtvcHBdICE9PSB1bmRlZmluZWQpIHsKCQkJcG9zID0gcG9zaXRpb25zW29wcC5jaGFyQXQoMCldOwoJCQl2YWwgPSAtdmFsOwoJCX0KCQlpZiAob2JqW3Bvc10gPT09IHVuZGVmaW5lZCkgewoJCQlvYmpbcG9zXSA9IHZhbDsKCQl9IGVsc2UgewoJCQlvYmpbcG9zXSArPSB2YWw7CgkJfQoJCXJldHVybiBudWxsOwoJfTsKCgl2YXIgcmVhbGlnbiA9IGZ1bmN0aW9uKGFsaWdubWVudCwgaW5uZXIsIG91dGVyKSB7CgkJaWYgKGFsaWdubWVudCA9PT0gImwiIHx8IGFsaWdubWVudCA9PT0gInQiKSB7CgkJCXJldHVybiAwOwoJCX0gZWxzZSBpZiAoYWxpZ25tZW50ID09PSAiYyIgfHwgYWxpZ25tZW50ID09PSAibSIpIHsKCQkJcmV0dXJuIG91dGVyIC8gMiAtIGlubmVyIC8gMjsKCQl9IGVsc2UgaWYgKGFsaWdubWVudCA9PT0gInIiIHx8IGFsaWdubWVudCA9PT0gImIiKSB7CgkJCXJldHVybiBvdXRlciAtIGlubmVyOwoJCX0KCQl0aHJvdyAiSW52YWxpZCBhbGlnbm1lbnQiOwoJfTsKCgl2YXIgZW5jb2RlID0gZnVuY3Rpb24odGV4dCkgewoJCWVuY29kZS5lID0gZW5jb2RlLmUgfHwgY3JlYXRlRWxlbSgiZGl2Iik7CgkJcmV0dXJuIGVuY29kZS5lLnRleHQodGV4dCkuaHRtbCgpOwoJfTsKCglmdW5jdGlvbiBOb3RpZmljYXRpb24oZWxlbSwgZGF0YSwgb3B0aW9ucykgewoJCWlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIpIHsKCQkJb3B0aW9ucyA9IHsKCQkJCWNsYXNzTmFtZTogb3B0aW9ucwoJCQl9OwoJCX0KCQl0aGlzLm9wdGlvbnMgPSBpbmhlcml0KHBsdWdpbk9wdGlvbnMsICQuaXNQbGFpbk9iamVjdChvcHRpb25zKSA/IG9wdGlvbnMgOiB7fSk7CgkJdGhpcy5sb2FkSFRNTCgpOwoJCXRoaXMud3JhcHBlciA9ICQoY29yZVN0eWxlLmh0bWwpOwoJCWlmICh0aGlzLm9wdGlvbnMuY2xpY2tUb0hpZGUpIHsKCQkJdGhpcy53cmFwcGVyLmFkZENsYXNzKHBsdWdpbkNsYXNzTmFtZSArICItaGlkYWJsZSIpOwoJCX0KCQl0aGlzLndyYXBwZXIuZGF0YShwbHVnaW5DbGFzc05hbWUsIHRoaXMpOwoJCXRoaXMuYXJyb3cgPSB0aGlzLndyYXBwZXIuZmluZCgiLiIgKyBwbHVnaW5DbGFzc05hbWUgKyAiLWFycm93Iik7CgkJdGhpcy5jb250YWluZXIgPSB0aGlzLndyYXBwZXIuZmluZCgiLiIgKyBwbHVnaW5DbGFzc05hbWUgKyAiLWNvbnRhaW5lciIpOwoJCXRoaXMuY29udGFpbmVyLmFwcGVuZCh0aGlzLnVzZXJDb250YWluZXIpOwoJCWlmIChlbGVtICYmIGVsZW0ubGVuZ3RoKSB7CgkJCXRoaXMuZWxlbWVudFR5cGUgPSBlbGVtLmF0dHIoInR5cGUiKTsKCQkJdGhpcy5vcmlnaW5hbEVsZW1lbnQgPSBlbGVtOwoJCQl0aGlzLmVsZW0gPSBnZXRBbmNob3JFbGVtZW50KGVsZW0pOwoJCQl0aGlzLmVsZW0uZGF0YShwbHVnaW5DbGFzc05hbWUsIHRoaXMpOwoJCQl0aGlzLmVsZW0uYmVmb3JlKHRoaXMud3JhcHBlcik7CgkJfQoJCXRoaXMuY29udGFpbmVyLmhpZGUoKTsKCQl0aGlzLnJ1bihkYXRhKTsKCX0KCglOb3RpZmljYXRpb24ucHJvdG90eXBlLmxvYWRIVE1MID0gZnVuY3Rpb24oKSB7CgkJdmFyIHN0eWxlOwoJCXN0eWxlID0gdGhpcy5nZXRTdHlsZSgpOwoJCXRoaXMudXNlckNvbnRhaW5lciA9ICQoc3R5bGUuaHRtbCk7CgkJdGhpcy51c2VyRmllbGRzID0gc3R5bGUuZmllbGRzOwoJfTsKCglOb3RpZmljYXRpb24ucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbihzaG93LCB1c2VyQ2FsbGJhY2spIHsKCQl2YXIgYXJncywgY2FsbGJhY2ssIGVsZW1zLCBmbiwgaGlkZGVuOwoJCWNhbGxiYWNrID0gKGZ1bmN0aW9uKF90aGlzKSB7CgkJCXJldHVybiBmdW5jdGlvbigpIHsKCQkJCWlmICghc2hvdyAmJiAhX3RoaXMuZWxlbSkgewoJCQkJCV90aGlzLmRlc3Ryb3koKTsKCQkJCX0KCQkJCWlmICh1c2VyQ2FsbGJhY2spIHsKCQkJCQlyZXR1cm4gdXNlckNhbGxiYWNrKCk7CgkJCQl9CgkJCX07CgkJfSkodGhpcyk7CgkJaGlkZGVuID0gdGhpcy5jb250YWluZXIucGFyZW50KCkucGFyZW50cygnOmhpZGRlbicpLmxlbmd0aCA+IDA7CgkJZWxlbXMgPSB0aGlzLmNvbnRhaW5lci5hZGQodGhpcy5hcnJvdyk7CgkJYXJncyA9IFtdOwoJCWlmIChoaWRkZW4gJiYgc2hvdykgewoJCQlmbiA9ICJzaG93IjsKCQl9IGVsc2UgaWYgKGhpZGRlbiAmJiAhc2hvdykgewoJCQlmbiA9ICJoaWRlIjsKCQl9IGVsc2UgaWYgKCFoaWRkZW4gJiYgc2hvdykgewoJCQlmbiA9IHRoaXMub3B0aW9ucy5zaG93QW5pbWF0aW9uOwoJCQlhcmdzLnB1c2godGhpcy5vcHRpb25zLnNob3dEdXJhdGlvbik7CgkJfSBlbHNlIGlmICghaGlkZGVuICYmICFzaG93KSB7CgkJCWZuID0gdGhpcy5vcHRpb25zLmhpZGVBbmltYXRpb247CgkJCWFyZ3MucHVzaCh0aGlzLm9wdGlvbnMuaGlkZUR1cmF0aW9uKTsKCQl9IGVsc2UgewoJCQlyZXR1cm4gY2FsbGJhY2soKTsKCQl9CgkJYXJncy5wdXNoKGNhbGxiYWNrKTsKCQlyZXR1cm4gZWxlbXNbZm5dLmFwcGx5KGVsZW1zLCBhcmdzKTsKCX07CgoJTm90aWZpY2F0aW9uLnByb3RvdHlwZS5zZXRHbG9iYWxQb3NpdGlvbiA9IGZ1bmN0aW9uKCkgewoJCXZhciBwID0gdGhpcy5nZXRQb3NpdGlvbigpOwoJCXZhciBwTWFpbiA9IHBbMF07CgkJdmFyIHBBbGlnbiA9IHBbMV07CgkJdmFyIG1haW4gPSBwb3NpdGlvbnNbcE1haW5dOwoJCXZhciBhbGlnbiA9IHBvc2l0aW9uc1twQWxpZ25dOwoJCXZhciBrZXkgPSBwTWFpbiArICJ8IiArIHBBbGlnbjsKCQl2YXIgYW5jaG9yID0gZ2xvYmFsQW5jaG9yc1trZXldOwoJCWlmICghYW5jaG9yKSB7CgkJCWFuY2hvciA9IGdsb2JhbEFuY2hvcnNba2V5XSA9IGNyZWF0ZUVsZW0oImRpdiIpOwoJCQl2YXIgY3NzID0ge307CgkJCWNzc1ttYWluXSA9IDA7CgkJCWlmIChhbGlnbiA9PT0gIm1pZGRsZSIpIHsKCQkJCWNzcy50b3AgPSAnNDUlJzsKCQkJfSBlbHNlIGlmIChhbGlnbiA9PT0gImNlbnRlciIpIHsKCQkJCWNzcy5sZWZ0ID0gJzQ1JSc7CgkJCX0gZWxzZSB7CgkJCQljc3NbYWxpZ25dID0gMDsKCQkJfQoJCQlhbmNob3IuY3NzKGNzcykuYWRkQ2xhc3MocGx1Z2luQ2xhc3NOYW1lICsgIi1jb3JuZXIiKTsKCQkJJCgiYm9keSIpLmFwcGVuZChhbmNob3IpOwoJCX0KCQlyZXR1cm4gYW5jaG9yLnByZXBlbmQodGhpcy53cmFwcGVyKTsKCX07CgoJTm90aWZpY2F0aW9uLnByb3RvdHlwZS5zZXRFbGVtZW50UG9zaXRpb24gPSBmdW5jdGlvbigpIHsKCQl2YXIgYXJyb3dDb2xvciwgYXJyb3dDc3MsIGFycm93U2l6ZSwgY29sb3IsIGNvbnRILCBjb250VywgY3NzLCBlbGVtSCwgZWxlbUlILCBlbGVtSVcsIGVsZW1Qb3MsIGVsZW1XLCBnYXAsIGosIGssIGxlbiwgbGVuMSwgbWFpbkZ1bGwsIG1hcmdpbiwgb3BwLCBvcHBGdWxsLCBwQWxpZ24sIHBBcnJvdywgcE1haW4sIHBvcywgcG9zRnVsbCwgcG9zaXRpb24sIHJlZiwgd3JhcFBvczsKCQlwb3NpdGlvbiA9IHRoaXMuZ2V0UG9zaXRpb24oKTsKCQlwTWFpbiA9IHBvc2l0aW9uWzBdOwoJCXBBbGlnbiA9IHBvc2l0aW9uWzFdOwoJCXBBcnJvdyA9IHBvc2l0aW9uWzJdOwoJCWVsZW1Qb3MgPSB0aGlzLmVsZW0ucG9zaXRpb24oKTsKCQllbGVtSCA9IHRoaXMuZWxlbS5vdXRlckhlaWdodCgpOwoJCWVsZW1XID0gdGhpcy5lbGVtLm91dGVyV2lkdGgoKTsKCQllbGVtSUggPSB0aGlzLmVsZW0uaW5uZXJIZWlnaHQoKTsKCQllbGVtSVcgPSB0aGlzLmVsZW0uaW5uZXJXaWR0aCgpOwoJCXdyYXBQb3MgPSB0aGlzLndyYXBwZXIucG9zaXRpb24oKTsKCQljb250SCA9IHRoaXMuY29udGFpbmVyLmhlaWdodCgpOwoJCWNvbnRXID0gdGhpcy5jb250YWluZXIud2lkdGgoKTsKCQltYWluRnVsbCA9IHBvc2l0aW9uc1twTWFpbl07CgkJb3BwID0gb3Bwb3NpdGVzW3BNYWluXTsKCQlvcHBGdWxsID0gcG9zaXRpb25zW29wcF07CgkJY3NzID0ge307CgkJY3NzW29wcEZ1bGxdID0gcE1haW4gPT09ICJiIiA/IGVsZW1IIDogcE1haW4gPT09ICJyIiA/IGVsZW1XIDogMDsKCQlpbmNyKGNzcywgInRvcCIsIGVsZW1Qb3MudG9wIC0gd3JhcFBvcy50b3ApOwoJCWluY3IoY3NzLCAibGVmdCIsIGVsZW1Qb3MubGVmdCAtIHdyYXBQb3MubGVmdCk7CgkJcmVmID0gWyJ0b3AiLCAibGVmdCJdOwoJCWZvciAoaiA9IDAsIGxlbiA9IHJlZi5sZW5ndGg7IGogPCBsZW47IGorKykgewoJCQlwb3MgPSByZWZbal07CgkJCW1hcmdpbiA9IHBhcnNlSW50KHRoaXMuZWxlbS5jc3MoIm1hcmdpbi0iICsgcG9zKSwgMTApOwoJCQlpZiAobWFyZ2luKSB7CgkJCQlpbmNyKGNzcywgcG9zLCBtYXJnaW4pOwoJCQl9CgkJfQoJCWdhcCA9IE1hdGgubWF4KDAsIHRoaXMub3B0aW9ucy5nYXAgLSAodGhpcy5vcHRpb25zLmFycm93U2hvdyA/IGFycm93U2l6ZSA6IDApKTsKCQlpbmNyKGNzcywgb3BwRnVsbCwgZ2FwKTsKCQlpZiAoIXRoaXMub3B0aW9ucy5hcnJvd1Nob3cpIHsKCQkJdGhpcy5hcnJvdy5oaWRlKCk7CgkJfSBlbHNlIHsKCQkJYXJyb3dTaXplID0gdGhpcy5vcHRpb25zLmFycm93U2l6ZTsKCQkJYXJyb3dDc3MgPSAkLmV4dGVuZCh7fSwgY3NzKTsKCQkJYXJyb3dDb2xvciA9IHRoaXMudXNlckNvbnRhaW5lci5jc3MoImJvcmRlci1jb2xvciIpIHx8IHRoaXMudXNlckNvbnRhaW5lci5jc3MoImJvcmRlci10b3AtY29sb3IiKSB8fCB0aGlzLnVzZXJDb250YWluZXIuY3NzKCJiYWNrZ3JvdW5kLWNvbG9yIikgfHwgIndoaXRlIjsKCQkJZm9yIChrID0gMCwgbGVuMSA9IG1haW5Qb3NpdGlvbnMubGVuZ3RoOyBrIDwgbGVuMTsgaysrKSB7CgkJCQlwb3MgPSBtYWluUG9zaXRpb25zW2tdOwoJCQkJcG9zRnVsbCA9IHBvc2l0aW9uc1twb3NdOwoJCQkJaWYgKHBvcyA9PT0gb3BwKSB7CgkJCQkJY29udGludWU7CgkJCQl9CgkJCQljb2xvciA9IHBvc0Z1bGwgPT09IG1haW5GdWxsID8gYXJyb3dDb2xvciA6ICJ0cmFuc3BhcmVudCI7CgkJCQlhcnJvd0Nzc1siYm9yZGVyLSIgKyBwb3NGdWxsXSA9IGFycm93U2l6ZSArICJweCBzb2xpZCAiICsgY29sb3I7CgkJCX0KCQkJaW5jcihjc3MsIHBvc2l0aW9uc1tvcHBdLCBhcnJvd1NpemUpOwoJCQlpZiAoaW5kZXhPZi5jYWxsKG1haW5Qb3NpdGlvbnMsIHBBbGlnbikgPj0gMCkgewoJCQkJaW5jcihhcnJvd0NzcywgcG9zaXRpb25zW3BBbGlnbl0sIGFycm93U2l6ZSAqIDIpOwoJCQl9CgkJfQoJCWlmIChpbmRleE9mLmNhbGwodkFsaWducywgcE1haW4pID49IDApIHsKCQkJaW5jcihjc3MsICJsZWZ0IiwgcmVhbGlnbihwQWxpZ24sIGNvbnRXLCBlbGVtVykpOwoJCQlpZiAoYXJyb3dDc3MpIHsKCQkJCWluY3IoYXJyb3dDc3MsICJsZWZ0IiwgcmVhbGlnbihwQWxpZ24sIGFycm93U2l6ZSwgZWxlbUlXKSk7CgkJCX0KCQl9IGVsc2UgaWYgKGluZGV4T2YuY2FsbChoQWxpZ25zLCBwTWFpbikgPj0gMCkgewoJCQlpbmNyKGNzcywgInRvcCIsIHJlYWxpZ24ocEFsaWduLCBjb250SCwgZWxlbUgpKTsKCQkJaWYgKGFycm93Q3NzKSB7CgkJCQlpbmNyKGFycm93Q3NzLCAidG9wIiwgcmVhbGlnbihwQWxpZ24sIGFycm93U2l6ZSwgZWxlbUlIKSk7CgkJCX0KCQl9CgkJaWYgKHRoaXMuY29udGFpbmVyLmlzKCI6dmlzaWJsZSIpKSB7CgkJCWNzcy5kaXNwbGF5ID0gImJsb2NrIjsKCQl9CgkJdGhpcy5jb250YWluZXIucmVtb3ZlQXR0cigic3R5bGUiKS5jc3MoY3NzKTsKCQlpZiAoYXJyb3dDc3MpIHsKCQkJcmV0dXJuIHRoaXMuYXJyb3cucmVtb3ZlQXR0cigic3R5bGUiKS5jc3MoYXJyb3dDc3MpOwoJCX0KCX07CgoJTm90aWZpY2F0aW9uLnByb3RvdHlwZS5nZXRQb3NpdGlvbiA9IGZ1bmN0aW9uKCkgewoJCXZhciBwb3MsIHJlZiwgcmVmMSwgcmVmMiwgcmVmMywgcmVmNCwgcmVmNSwgdGV4dDsKCQl0ZXh0ID0gdGhpcy5vcHRpb25zLnBvc2l0aW9uIHx8ICh0aGlzLmVsZW0gPyB0aGlzLm9wdGlvbnMuZWxlbWVudFBvc2l0aW9uIDogdGhpcy5vcHRpb25zLmdsb2JhbFBvc2l0aW9uKTsKCQlwb3MgPSBwYXJzZVBvc2l0aW9uKHRleHQpOwoJCWlmIChwb3MubGVuZ3RoID09PSAwKSB7CgkJCXBvc1swXSA9ICJiIjsKCQl9CgkJaWYgKHJlZiA9IHBvc1swXSwgaW5kZXhPZi5jYWxsKG1haW5Qb3NpdGlvbnMsIHJlZikgPCAwKSB7CgkJCXRocm93ICJNdXN0IGJlIG9uZSBvZiBbIiArIG1haW5Qb3NpdGlvbnMgKyAiXSI7CgkJfQoJCWlmIChwb3MubGVuZ3RoID09PSAxIHx8ICgocmVmMSA9IHBvc1swXSwgaW5kZXhPZi5jYWxsKHZBbGlnbnMsIHJlZjEpID49IDApICYmIChyZWYyID0gcG9zWzFdLCBpbmRleE9mLmNhbGwoaEFsaWducywgcmVmMikgPCAwKSkgfHwgKChyZWYzID0gcG9zWzBdLCBpbmRleE9mLmNhbGwoaEFsaWducywgcmVmMykgPj0gMCkgJiYgKHJlZjQgPSBwb3NbMV0sIGluZGV4T2YuY2FsbCh2QWxpZ25zLCByZWY0KSA8IDApKSkgewoJCQlwb3NbMV0gPSAocmVmNSA9IHBvc1swXSwgaW5kZXhPZi5jYWxsKGhBbGlnbnMsIHJlZjUpID49IDApID8gIm0iIDogImwiOwoJCX0KCQlpZiAocG9zLmxlbmd0aCA9PT0gMikgewoJCQlwb3NbMl0gPSBwb3NbMV07CgkJfQoJCXJldHVybiBwb3M7Cgl9OwoKCU5vdGlmaWNhdGlvbi5wcm90b3R5cGUuZ2V0U3R5bGUgPSBmdW5jdGlvbihuYW1lKSB7CgkJdmFyIHN0eWxlOwoJCWlmICghbmFtZSkgewoJCQluYW1lID0gdGhpcy5vcHRpb25zLnN0eWxlOwoJCX0KCQlpZiAoIW5hbWUpIHsKCQkJbmFtZSA9ICJkZWZhdWx0IjsKCQl9CgkJc3R5bGUgPSBzdHlsZXNbbmFtZV07CgkJaWYgKCFzdHlsZSkgewoJCQl0aHJvdyAiTWlzc2luZyBzdHlsZTogIiArIG5hbWU7CgkJfQoJCXJldHVybiBzdHlsZTsKCX07CgoJTm90aWZpY2F0aW9uLnByb3RvdHlwZS51cGRhdGVDbGFzc2VzID0gZnVuY3Rpb24oKSB7CgkJdmFyIGNsYXNzZXMsIHN0eWxlOwoJCWNsYXNzZXMgPSBbImJhc2UiXTsKCQlpZiAoJC5pc0FycmF5KHRoaXMub3B0aW9ucy5jbGFzc05hbWUpKSB7CgkJCWNsYXNzZXMgPSBjbGFzc2VzLmNvbmNhdCh0aGlzLm9wdGlvbnMuY2xhc3NOYW1lKTsKCQl9IGVsc2UgaWYgKHRoaXMub3B0aW9ucy5jbGFzc05hbWUpIHsKCQkJY2xhc3Nlcy5wdXNoKHRoaXMub3B0aW9ucy5jbGFzc05hbWUpOwoJCX0KCQlzdHlsZSA9IHRoaXMuZ2V0U3R5bGUoKTsKCQljbGFzc2VzID0gJC5tYXAoY2xhc3NlcywgZnVuY3Rpb24obikgewoJCQlyZXR1cm4gcGx1Z2luQ2xhc3NOYW1lICsgIi0iICsgc3R5bGUubmFtZSArICItIiArIG47CgkJfSkuam9pbigiICIpOwoJCXJldHVybiB0aGlzLnVzZXJDb250YWluZXIuYXR0cigiY2xhc3MiLCBjbGFzc2VzKTsKCX07CgoJTm90aWZpY2F0aW9uLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbihkYXRhLCBvcHRpb25zKSB7CgkJdmFyIGQsIGRhdGFzLCBuYW1lLCB0eXBlLCB2YWx1ZTsKCQlpZiAoJC5pc1BsYWluT2JqZWN0KG9wdGlvbnMpKSB7CgkJCSQuZXh0ZW5kKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7CgkJfSBlbHNlIGlmICgkLnR5cGUob3B0aW9ucykgPT09ICJzdHJpbmciKSB7CgkJCXRoaXMub3B0aW9ucy5jbGFzc05hbWUgPSBvcHRpb25zOwoJCX0KCQlpZiAodGhpcy5jb250YWluZXIgJiYgIWRhdGEpIHsKCQkJdGhpcy5zaG93KGZhbHNlKTsKCQkJcmV0dXJuOwoJCX0gZWxzZSBpZiAoIXRoaXMuY29udGFpbmVyICYmICFkYXRhKSB7CgkJCXJldHVybjsKCQl9CgkJZGF0YXMgPSB7fTsKCQlpZiAoJC5pc1BsYWluT2JqZWN0KGRhdGEpKSB7CgkJCWRhdGFzID0gZGF0YTsKCQl9IGVsc2UgewoJCQlkYXRhc1tibGFua0ZpZWxkTmFtZV0gPSBkYXRhOwoJCX0KCQlmb3IgKG5hbWUgaW4gZGF0YXMpIHsKCQkJZCA9IGRhdGFzW25hbWVdOwoJCQl0eXBlID0gdGhpcy51c2VyRmllbGRzW25hbWVdOwoJCQlpZiAoIXR5cGUpIHsKCQkJCWNvbnRpbnVlOwoJCQl9CgkJCWlmICh0eXBlID09PSAidGV4dCIpIHsKCQkJCWQgPSBlbmNvZGUoZCk7CgkJCQlpZiAodGhpcy5vcHRpb25zLmJyZWFrTmV3TGluZXMpIHsKCQkJCQlkID0gZC5yZXBsYWNlKC9cbi9nLCAnPGJyLz4nKTsKCQkJCX0KCQkJfQoJCQl2YWx1ZSA9IG5hbWUgPT09IGJsYW5rRmllbGROYW1lID8gJycgOiAnPScgKyBuYW1lOwoJCQlmaW5kKHRoaXMudXNlckNvbnRhaW5lciwgIltkYXRhLW5vdGlmeS0iICsgdHlwZSArIHZhbHVlICsgIl0iKS5odG1sKGQpOwoJCX0KCQl0aGlzLnVwZGF0ZUNsYXNzZXMoKTsKCQlpZiAodGhpcy5lbGVtKSB7CgkJCXRoaXMuc2V0RWxlbWVudFBvc2l0aW9uKCk7CgkJfSBlbHNlIHsKCQkJdGhpcy5zZXRHbG9iYWxQb3NpdGlvbigpOwoJCX0KCQl0aGlzLnNob3codHJ1ZSk7CgkJaWYgKHRoaXMub3B0aW9ucy5hdXRvSGlkZSkgewoJCQljbGVhclRpbWVvdXQodGhpcy5hdXRvaGlkZVRpbWVyKTsKCQkJdGhpcy5hdXRvaGlkZVRpbWVyID0gc2V0VGltZW91dCh0aGlzLnNob3cuYmluZCh0aGlzLCBmYWxzZSksIHRoaXMub3B0aW9ucy5hdXRvSGlkZURlbGF5KTsKCQl9Cgl9OwoKCU5vdGlmaWNhdGlvbi5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkgewoJCXRoaXMud3JhcHBlci5kYXRhKHBsdWdpbkNsYXNzTmFtZSwgbnVsbCk7CgkJdGhpcy53cmFwcGVyLnJlbW92ZSgpOwoJfTsKCgkkW3BsdWdpbk5hbWVdID0gZnVuY3Rpb24oZWxlbSwgZGF0YSwgb3B0aW9ucykgewoJCWlmICgoZWxlbSAmJiBlbGVtLm5vZGVOYW1lKSB8fCBlbGVtLmpxdWVyeSkgewoJCQkkKGVsZW0pW3BsdWdpbk5hbWVdKGRhdGEsIG9wdGlvbnMpOwoJCX0gZWxzZSB7CgkJCW9wdGlvbnMgPSBkYXRhOwoJCQlkYXRhID0gZWxlbTsKCQkJbmV3IE5vdGlmaWNhdGlvbihudWxsLCBkYXRhLCBvcHRpb25zKTsKCQl9CgkJcmV0dXJuIGVsZW07Cgl9OwoKCSQuZm5bcGx1Z2luTmFtZV0gPSBmdW5jdGlvbihkYXRhLCBvcHRpb25zKSB7CgkJJCh0aGlzKS5lYWNoKGZ1bmN0aW9uKCkgewoJCQl2YXIgcHJldiA9IGdldEFuY2hvckVsZW1lbnQoJCh0aGlzKSkuZGF0YShwbHVnaW5DbGFzc05hbWUpOwoJCQlpZiAocHJldikgewoJCQkJcHJldi5kZXN0cm95KCk7CgkJCX0KCQkJdmFyIGN1cnIgPSBuZXcgTm90aWZpY2F0aW9uKCQodGhpcyksIGRhdGEsIG9wdGlvbnMpOwoJCX0pOwoJCXJldHVybiB0aGlzOwoJfTsKCgkkLmV4dGVuZCgkW3BsdWdpbk5hbWVdLCB7CgkJZGVmYXVsdHM6IGRlZmF1bHRzLAoJCWFkZFN0eWxlOiBhZGRTdHlsZSwKCQlwbHVnaW5PcHRpb25zOiBwbHVnaW5PcHRpb25zLAoJCWdldFN0eWxlOiBnZXRTdHlsZSwKCQlpbnNlcnRDU1M6IGluc2VydENTUwoJfSk7CgoJLy9hbHdheXMgaW5jbHVkZSB0aGUgZGVmYXVsdCBib290c3RyYXAgc3R5bGUKCWFkZFN0eWxlKCJib290c3RyYXAiLCB7CgkJaHRtbDogIjxkaXY+XG48c3BhbiBkYXRhLW5vdGlmeS10ZXh0Pjwvc3Bhbj5cbjwvZGl2PiIsCgkJY2xhc3NlczogewoJCQliYXNlOiB7CgkJCQkiZm9udC13ZWlnaHQiOiAiYm9sZCIsCgkJCQkicGFkZGluZyI6ICI4cHggMTVweCA4cHggMTRweCIsCgkJCQkidGV4dC1zaGFkb3ciOiAiMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSkiLAoJCQkJImJhY2tncm91bmQtY29sb3IiOiAiI2ZjZjhlMyIsCgkJCQkiYm9yZGVyIjogIjFweCBzb2xpZCAjZmJlZWQ1IiwKCQkJCSJib3JkZXItcmFkaXVzIjogIjRweCIsCgkJCQkid2hpdGUtc3BhY2UiOiAibm93cmFwIiwKCQkJCSJwYWRkaW5nLWxlZnQiOiAiMjVweCIsCgkJCQkiYmFja2dyb3VuZC1yZXBlYXQiOiAibm8tcmVwZWF0IiwKCQkJCSJiYWNrZ3JvdW5kLXBvc2l0aW9uIjogIjNweCA3cHgiCgkJCX0sCgkJCWVycm9yOiB7CgkJCQkiY29sb3IiOiAiI0I5NEE0OCIsCgkJCQkiYmFja2dyb3VuZC1jb2xvciI6ICIjRjJERURFIiwKCQkJCSJib3JkZXItY29sb3IiOiAiI0VFRDNENyIsCgkJCQkiYmFja2dyb3VuZC1pbWFnZSI6ICJ1cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCUUFBQUFVQ0FZQUFBQ05pUjBOQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUF0UkpSRUZVZU5xa1ZjMXUwMEFRSHErZE9EKzBwb0lRZmtJamFsVzBTRUdxUk11Um5Ib3MzRGp3QUgwQXJseVFlQU5PT1NNZUFBNVZqeUJ4S0JRaGdTcFZVS0tRTkdsb0ZkdzRjV3cyanRmTU9uYTZKT1VBckRUYXpYaS9iM2RtNTVzb2NQcVFoRmthKythSEJzSThHc29wUkpFUk5GbFk4OEZDRWs5WWl3ZjhSaGdSeWFIRlFwUEhDRG1aRzVvWDJ1aTJ5aWxrY1RUMUFjRHNiWUMxTk1BeU9pN3pUWDJBZ3g3QTlsdUFsODhCYXVpaVEvY0phWlFmSXBBbG5nRGN2WlpNcmw4dkZQSzUrWGt0cldseDMvZWhaNXI5K3Q2ZStXVm5wMXB4bk5JamdCZTQvNmRBeXNRYzhkc21Id1BjVzlDMGgzZlcxaGFuczFsdHdKaHkwR3hLN1haYlVsTXA1V3cyZXlhbjYrZnQvZjJGQXFYR0s0Q3ZRazVIdWVGejdENkdPWnRJcksrc3J1cGR4MUdSQkJxTkJ0emMyQWlNcjduUHBsUmRLaGIxcTZxNnpqRmhya2xFRk9VdXRvUTUweGNYODZabHFhWnBRcmZiQmR1MlI2L0cxOXpYNlhTZ2g2Ulg1dWJ5SENNOG5xU0lENklDckdpWmpHWVl4b2pFc2l3NFBEd01TTDVWS3NDOFlmNFZSWUZ6TXpNYXh3amxKU2xDeUFROWwwQ1c0NFBCQUR6WGhlN3hNZGk5SHRUcmRZakZZa0RRTDBjbjRYZHEyL0VBRStJbkNudkFEVGYyZWFoNFN4OXZFeFFqa3FYVDZhQUVSSUNNZXdkL1VBcC9JZVlBTk0yam94dCtxNVZJK2llcTJpMFdnM2w2RE56SHdURVJQZ28xa283WEJYajN2ZGxzVDJGK1V1aEloWWtwN3U3Q2Fya2NyRk9DdFIzSDVKaXdiQUllSW1qVC9ZUUtLQnRHalJGQ1U1SVVnRlJlN2ZGNGNDTlZJUE1ZbzNWS3F4d2p5TkFYTmVwdW9weXFubGQ2MDJxVnNmUnBFa2t6K0dGTDF3UGo2eVNYQnBKdFdWYTV4bGhwY3loQk53cFpIbXRYOEFHZ2ZJRXhvMFpwemtXVlRCR2lYQ1NFYUhoNjIvUG9SMHAvdkhhY3p4WEduajRiU28rRzc4bEVMVTgwaDF1b2dCd1dMZjVZbHNQbWdERWQ0TTIzNnhqbSs4bm00SXVFLzl1Ky9QSDJKWFpmYnd6NHp3MVdiTytTUVBwWGZ3Ry9CQmdBaENOWmlTYi9wT1FBQUFBQVNVVk9SSzVDWUlJPSkiCgkJCX0sCgkJCXN1Y2Nlc3M6IHsKCQkJCSJjb2xvciI6ICIjNDY4ODQ3IiwKCQkJCSJiYWNrZ3JvdW5kLWNvbG9yIjogIiNERkYwRDgiLAoJCQkJImJvcmRlci1jb2xvciI6ICIjRDZFOUM2IiwKCQkJCSJiYWNrZ3JvdW5kLWltYWdlIjogInVybChkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJRQUFBQVVDQVlBQUFDTmlSME5BQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQXV0SlJFRlVlTnEwbGN0UEUwRWN4Mzh6dS9SRlMxRXJ5cXRnSkZBMDhZQ2lNWklBUVE0ZVJHOGVER2RQSmlZZVRJd0hUZndQaUFjdlhJd1hMd29YUGFEeGtXZ1E2aXNsS2xKTFNRV0xVcmFQTFR2N0dtZTMyem9GOUtTVGZMTzd2NTN2WjNkL003L2ZJdGgrSU82SU50Mmpqb0E3YmpIQ0pvQWx6Q1J3NTlZd0hZakJuZk1QcUFLV1FZS2pHa2ZDSnFBRjB4d1pqaXBRdEEzTXhlU0c4N1ZoT09ZZWdWclVDeTdVWk05UzZUTElkQWFteVNUY2xaZFloRmhSSGxvR1lnN21nWnYxWnp6dHZndWQ3VjF0YlEydHdZQTM0TEptRjRwNWRYRjFLVHVmbkUrU3hlSnR1Q1pOc0xEQ1FVMCtSeUtURjI3VW53MTAxbDhlNmhuczN1MFBCYWxPUlZWVmtjYUVLQkpEZ1YzK2NHTTR0S0ttSStvaGxJR255Z0tYMDByU0Jmc3p6L24ydVh2ODF3ZDYrcnQxb3JzWkNIUmRyMUltazJGMktvYjNodXRTeFc4dGhzZDhBWE5hbG45RDdDVGZBNk8rMFVna011d1Z2RUZGVWJiQWNya2NUQTgrQXRPazhFNktpUWlEbU1GU0RxWkl0QXpFVlF2aVJrZERkYUZnUHA4SFNaS0FFQUw1UWg3U3EybElKQkp3djJzY1Vxa1VuS29aZ05oY0RLaEtnNWFIKzFJa2NvdUNBZEZHQVFzdVdaWWhPandGSFE5Nm9hZ1dnUm9Vb3YxVDlrUkJFT0RBd3hNMlF0RVVsK1dwK0xuOVZSbzZCY013NEVySFJZakg0L0IyNkFsUW9RUVRSZEhXd2NkOUFINTcrVUFYZGR2REQzN0RtckJCVjM0V2ZxaVhQbDYxZyt2cjZ4QTl6c0dlTTlnT2RzTlhrZ3BFdFR3VnZ3T2tsWExLbTYrL3A1ZXp3azRCK2o2ZHJvQnMyQ3NHYS9nTnM2Ukl4YXpsNFRjMjVtcFRndy9hcFBSMUxZbE5SRkF6Z3NPeGt5WFlMSU0xVjhOTXd5QWtKU2N0RDFlR1ZLaXE1d1dqU1Bkam1lVGtpS3ZWVzRmMllQSFdsM0dBVnE2eW1jeUNUZ292TTNGenlSaURlMlRhS2NFS3NMcEp2TkhqWmdQTnFFdHlpNm1aSW00U1JGeUxNVXNPTlNTZGtQZUZ0WTFuMG1jem9ZM0JIVExod1BSeTkvbHpjemlDdzlBQ0kreXFsMFZMemNHQVpiWVNNNUNDU1pnMS85b2Mvbm43K2k4TjlwLzhBbjRKTUFEeGhIK3hIZnVpS3dBQUFBQkpSVTVFcmtKZ2dnPT0pIgoJCQl9LAoJCQlpbmZvOiB7CgkJCQkiY29sb3IiOiAiIzNBODdBRCIsCgkJCQkiYmFja2dyb3VuZC1jb2xvciI6ICIjRDlFREY3IiwKCQkJCSJib3JkZXItY29sb3IiOiAiI0JDRThGMSIsCgkJCQkiYmFja2dyb3VuZC1pbWFnZSI6ICJ1cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCUUFBQUFVQ0FZQUFBQ05pUjBOQUFBQUJtSkxSMFFBL3dEL0FQK2d2YWVUQUFBQUNYQklXWE1BQUFzVEFBQUxFd0VBbXB3WUFBQUFCM1JKVFVVSDNRWUZBaGtTc2Rlcy9RQUFBOGRKUkVGVU9NdlZsR3RNVzJVWXgvL1BPYVdIWGc2bExhVzB5cEF0dzFVQ2dibmlOT0xjVk9MbUFqSFpvbE9ZbHhtVEdYVlpkQW5SZlhRbSs3U29VNG1YYU9haVpzRXBDOUZraVFzNlo2YmRDbk5ZcnVNNktOQnc2WVdld3psOXorc0hJbUVXdit2ejdYbVQ5NWYvKzMvKzd3UDgxNHYrZWZET1YzL1NvWDNsSEFBKzZPRGVVRmZNZmpPV01BRGdkaytlRUt6MHBGN2FRZE1BY09LTExqcmNWTVZYM3hkV04yOS9HaFlQN1N2blAwY1dmUzhjYVNrZkhac1BFOUZnbnQwMkpOdXRRMFFZSEIyZER6OS9wS1g4UWpqdU85eFV4ZC82NkhkeFRlQ0haM3JvalFPYkdRQmN1TmpmcGxrRDNiMTlZLzZNcmltU2FLZ1NNbXBHVTVXZXZtRS9zd2E2T3k3M3RRSEEwUmRyMk1tdi82QTFuOXc5c3VRNzA5N1o5bE00RmxUZ1REcnpaVHU0U3RYVmZwaUk0OHJWY1VETTVjbUVrc3JGbkh4ZnBUdFUvM0JGUXpDUUYvMmJZVm9OYkg3em1JdGJTb01qNDBKU3ptTXlYNXFEdnJpQTdRZHJJSXBBKzNjZHNNcHUwblhJOGNWME10S1hDUFplditnQ0VNMVMyTkhQdldmUC9oTCs3RlNyMyswcDVSQkV5aEVONUpDS1lyOFhuQVNNVDB4Qk55elFHUWVJOGZqc0dEMzlSTVBrN3NlMmJkNVp0VHlvRllYZnRGNnkzN2d4N05lVXRKSk9URmxBSERaTER1SUxVM2ozK0g1b09yRDN5V2JJenR1Z2FBemduQktKdUJMcEdmUXJTOHdPNEZaZ1YrYzFJeGFMZ1dWVTB0TUxFRVRDb3M0eE16RUl2OWNKWFFjeWFnSXdpZ0RHd0pnT0F0SEF3QWhpc1FVankwT1JHRVJpRUxnRzRpYWtrem80TVlBeGNNNWhBTWkxV1dHMXlZQ0pJY01VYUJrVlJMZEdlU1UyOTk1VExXemNVQXpPTko3SjZGQlZCWUlnZ016bUZidmRCVjQ0Q29yZzh2amh6QytFSkVsOFUxa0p0Z1lyaEN6Z2MvdnZUd1hLU2liMXBhUkZWUlZPUkRBSkFzdzVGdVRhSkVoV00yU0hCM21PQWxoa054d3VMemVKc0d3cVd6ZjVURk5kS2d0WTVxSHA2WkZmNjdZL3NBVmFkQ2FWWTVZQUNERGIzT2k0TklqTG5XTXcyUXRoQ0JJc1Zoc1VUVTl0dlhzamVxOStYMWQ3NS9LRXM0TE5PZmNkZi8rSHRoTW52d3hPRDB3bUhhWHI3Wkl0bjJ3dUgyU25CemJaQWJQSndwUHgrVlF1emNtN2RnUkNCNTdhMXVCelVEUkw0YmZuSTBSRTBlYVhkOVc4OW1wanFIWm5VSTVIaDJsMmRrWlpVaE9xcGkycVNtcE9tWjY0VHV1OXFsei9TRVhvNk1FSGEzd09pcDQ2RjFuNzYzM2Vla1Y4ZHM4V3hqbjM3V2w2M1ZWYStlajVvZUVaLzgyWkJFVEpqcEoxUmJpajJEM1ovMXRyWFV2THNibENLMFhmT3gwU1gya01zbjlkWCtkKzdLZjZoOG80QUl5a3VmZmpUOEwyMExVK3c0QVpkNVZ2RVBZK1hwV3FMVjMyN0hSN0R6WHVEbkQ4citvdmtCZWhKOGkreThZQUFBQUFTVVZPUks1Q1lJST0pIgoJCQl9LAoJCQl3YXJuOiB7CgkJCQkiY29sb3IiOiAiI0MwOTg1MyIsCgkJCQkiYmFja2dyb3VuZC1jb2xvciI6ICIjRkNGOEUzIiwKCQkJCSJib3JkZXItY29sb3IiOiAiI0ZCRUVENSIsCgkJCQkiYmFja2dyb3VuZC1pbWFnZSI6ICJ1cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCUUFBQUFVQ0FNQUFBQzZWKzAvQUFBQkpsQk1WRVhyNmViLzJvRC93aTcveGpyLzBtUC95a2YvdFFEL3ZCai8zbzcvdVEvL3Z5TC90d2ViaGdELzRwelgxSzN6OGUzNDl2SzZ0SENpbENXYmlReW1uMGpHd29ycjZkWFF6YTNIeGNLa24xdld2Vi81dVJmazRkWFoxYkQxOCsvNTJZZWJpQW15cjVTOW1oQ3pyV3E1dDZ1ZmpSSDU0YUxzMG9TK3FENzUxWHFQaEF5Ymh3WHN1akczc20rWmswUFR3RzZTaGcrUGhoT2Jod09QZ1FMNHpWMm5seXJmMjd1TGZnQ1BoUkh1N09tTGdBYWZreWlXa0QzbDQ5aWJpQWZUczBDK2xnQ25pd0Q0c2dESnhxT2lsekRXb3dXRmZBSDA4dWViaWc2cXBGSEJ2SC9hdzI2RmZRVFF6c3Z5OE95RWZ6MjByM2pBdmFLYmhnRzlxMG5jMkxiWnhYYW5vVXUvdTVXU2dnQ3RwMWFucEpLZG1Gei96bFgvMW5HSmlZbXVxNUR4NytzQUFBRG9QVVpTQUFBQUFYUlNUbE1BUU9iWVpnQUFBQUZpUzBkRUFJZ0ZIVWdBQUFBSmNFaFpjd0FBQ3hNQUFBc1RBUUNhbkJnQUFBQUhkRWxOUlFmZEJnVUJHaGg0YWFoNUFBQUFsa2xFUVZRWTAyTmdvQklJRThFVWN3bjFGa0lYTTFUajVkRFVRaFBVNTAyTWk3WFhReEd6NXVWSWpHT0pVVVVXODFIbllFeU1pMkhWY1VPSUNRWnpNTVlteHJFeU15bEp3Z1V0NUJsaldSTGptSm00cEkxaFlwNVNRTEdZeERnbUxuWk9WeHVvb0NsSURLZ1hLTWJONWdnVjFBQ0xKY2FCeE5nY29pR0NCaVp3ZFd4T0VUQkRyVHlFRmV5MGpZSjRlSGpNR1dnRUFJcFJGUkNVdDA4cUFBQUFBRWxGVGtTdVFtQ0MpIgoJCQl9CgkJfQoJfSk7CgoJJChmdW5jdGlvbigpIHsKCQlpbnNlcnRDU1MoY29yZVN0eWxlLmNzcykuYXR0cigiaWQiLCAiY29yZS1ub3RpZnkiKTsKCQkkKGRvY3VtZW50KS5vbigiY2xpY2siLCAiLiIgKyBwbHVnaW5DbGFzc05hbWUgKyAiLWhpZGFibGUiLCBmdW5jdGlvbihlKSB7CgkJCSQodGhpcykudHJpZ2dlcigibm90aWZ5LWhpZGUiKTsKCQl9KTsKCQkkKGRvY3VtZW50KS5vbigibm90aWZ5LWhpZGUiLCAiLiIgKyBwbHVnaW5DbGFzc05hbWUgKyAiLXdyYXBwZXIiLCBmdW5jdGlvbihlKSB7CgkJCXZhciBlbGVtID0gJCh0aGlzKS5kYXRhKHBsdWdpbkNsYXNzTmFtZSk7CgkJCWlmKGVsZW0pIHsKCQkJCWVsZW0uc2hvdyhmYWxzZSk7CgkJCX0KCQl9KTsKCX0pOwoKfSkpOwo="}]},{"name":"Kill YouTube Channel Video Autoplay","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.youtube.com/*"],"orig_noframes":true,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null},"storage":{"ts":1715999537203,"data":{}},"enabled":false,"position":12,"file_url":"https://greasyfork.org/scripts/399862-kill-youtube-channel-video-autoplay/code/Kill%20YouTube%20Channel%20Video%20Autoplay.user.js","uuid":"d27f61f4-946e-4c3e-9813-c5179bfcce98","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICBLaWxsIFlvdVR1YmUgQ2hhbm5lbCBWaWRlbyBBdXRvcGxheQovLyBAbmFtZTpkZSAgICAgICAgIEtpbGwgWW91VHViZSBDaGFubmVsIFZpZGVvIEF1dG9wbGF5Ci8vIEBuYW1lOmVuICAgICAgICAgS2lsbCBZb3VUdWJlIENoYW5uZWwgVmlkZW8gQXV0b3BsYXkKLy8gQG5hbWU6ZXMgICAgICAgICBLaWxsIFlvdVR1YmUgQ2hhbm5lbCBWaWRlbyBBdXRvcGxheQovLyBAbmFtZTppdCAgICAgICAgIEtpbGwgWW91VHViZSBDaGFubmVsIFZpZGVvIEF1dG9wbGF5Ci8vIEBuYW1lOmphICAgICAgICAgS2lsbCBZb3VUdWJlIENoYW5uZWwgVmlkZW8gQXV0b3BsYXkKLy8gQG5hbWU6ZnIgICAgICAgICBLaWxsIFlvdVR1YmUgQ2hhbm5lbCBWaWRlbyBBdXRvcGxheQovLyBAbmFtZTprbyAgICAgICAgIEtpbGwgWW91VHViZSBDaGFubmVsIFZpZGVvIEF1dG9wbGF5Ci8vIEBuYW1lOnBsICAgICAgICAgS2lsbCBZb3VUdWJlIENoYW5uZWwgVmlkZW8gQXV0b3BsYXkKLy8gQG5hbWU6cnUgICAgICAgICBLaWxsIFlvdVR1YmUgQ2hhbm5lbCBWaWRlbyBBdXRvcGxheQovLyBAbmFtZTp6aCAgICAgICAgIEtpbGwgWW91VHViZSBDaGFubmVsIFZpZGVvIEF1dG9wbGF5Ci8vIEBuYW1lc3BhY2UgICAgICAga2lsbFlvdVR1YmVDaGFubmVsVmlkZW9BdXRvcGxheQovLyBAdmVyc2lvbiAgICAgICAgIDAuMi4xCi8vIEBkZXNjcmlwdGlvbiAgICAgS2lsbCBhdXRvcGxheSBvbiBZb3VUdWJlIGNoYW5uZWwgYW5kIHVzZXIgcGFnZXMKLy8gQGRlc2NyaXB0aW9uOmRlICBCZWVuZGVuIFNpZSBkaWUgYXV0b21hdGlzY2hlIFdpZWRlcmdhYmUgYXVmIGRlbSBZb3VUdWJlLUthbmFsIHVuZCBkZW4gQmVudXR6ZXJzZWl0ZW4KLy8gQGRlc2NyaXB0aW9uOmVuICBLaWxsIGF1dG9wbGF5IG9uIFlvdVR1YmUgY2hhbm5lbCBhbmQgdXNlciBwYWdlcwovLyBAZGVzY3JpcHRpb246ZXMgIEVsaW1pbmEgbGEgcmVwcm9kdWNjacOzbiBhdXRvbcOhdGljYSBlbiBlbCBjYW5hbCBkZSBZb3VUdWJlIHkgZW4gbGFzIHDDoWdpbmFzIGRlbCB1c3VhcmlvCi8vIEBkZXNjcmlwdGlvbjppdCAgVWNjaWRpIGxhIHJpcHJvZHV6aW9uZSBhdXRvbWF0aWNhIHN1bCBjYW5hbGUgWW91VHViZSBlIHN1bGxlIHBhZ2luZSB1dGVudGUKLy8gQGRlc2NyaXB0aW9uOmphICBZb3VUdWJl44OB44Oj44Oz44ON44Or44Go44Om44O844K244O844Oa44O844K444Gu6Ieq5YuV5YaN55Sf44KS57WC5LqG44GZ44KLCi8vIEBkZXNjcmlwdGlvbjpmciAgVHVleiBsYSBsZWN0dXJlIGF1dG9tYXRpcXVlIHN1ciBsYSBjaGHDrm5lIFlvdVR1YmUgZXQgbGVzIHBhZ2VzIHV0aWxpc2F0ZXVyCi8vIEBkZXNjcmlwdGlvbjprbyAgWW91VHViZSDssYTrhJAg67CPIOyCrOyaqeyekCDtjpjsnbTsp4Dsl5DshJwg7J6Q64+ZIOyerOyDnSDspJHsp4AKLy8gQGRlc2NyaXB0aW9uOnBsICBaYWJpaiBhdXRvb2R0d2FyemFuaWUgbmEga2FuYWxlIFlvdVR1YmUgaSBzdHJvbmFjaCB1xbx5dGtvd25pa8OzdwovLyBAZGVzY3JpcHRpb246cnUgINCj0LHQuNGA0LDQtdGCINCw0LLRgtC+0LfQsNC/0YPRgdC6INCy0LjQtNC10L4g0L3QsCDRgdGC0YDQsNC90LjRhtCw0YUg0LrQsNC90LDQu9CwINC4INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjyDQvdCwIFlvdVR1YmUKLy8gQGRlc2NyaXB0aW9uOnpoICDnu4jmraJZb3VUdWJl6aKR6YGT5ZKM55So5oi36aG16Z2i5LiK55qE6Ieq5Yqo5pKt5pS+Ci8vIEBhdXRob3IgICAgICAgICAgQmxhbmsKLy8gQG1hdGNoICAgICAgICAgICBodHRwczovL3d3dy55b3V0dWJlLmNvbS8qCi8vIEBydW4tYXQgICAgICAgICAgZG9jdW1lbnQtZW5kCi8vIEBncmFudCAgICAgICAgICAgbm9uZQovLyBAbm9mcmFtZXMKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24gbWFpbigpIHsKICAndXNlIHN0cmljdCc7CgogIGNvbnN0IGxvZyA9ICguLi5hcmdzKSA9PiBjb25zb2xlLmxvZyhgJHtHTS5pbmZvLnNjcmlwdC5uYW1lfTpgLCAuLi5hcmdzKTsKICBsb2coJ3N0YXJ0Jyk7CgogIGNvbnN0IHJvb3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCd5dGQtcGFnZS1tYW5hZ2VyJyk7CiAgaWYgKCFyb290KSByZXR1cm4gbG9nKCdyb290IG5vZGUgbm90IGZvdW5kLCBleGl0Jyk7CgogIHsgLy8gdHJ5IHRvIHByZXZlbnQgYXV0b3BsYXkgdy9vIG9ic2VydmVyCiAgICBjb25zdCB2aWRlbyA9IHJvb3QucXVlcnlTZWxlY3RvcigneXRkLWNoYW5uZWwtdmlkZW8tcGxheWVyLXJlbmRlcmVyJyk/LnF1ZXJ5U2VsZWN0b3IoJ3ZpZGVvJyk7CiAgICBpZiAodmlkZW8pIHsKICAgICAgdmlkZW8uYWRkRXZlbnRMaXN0ZW5lcignbG9hZHN0YXJ0JywgKGUpID0+IGUudGFyZ2V0LnBhdXNlKCksIHsgcGFzc2l2ZTogdHJ1ZSB9KTsKICAgICAgcmV0dXJuIGxvZygnY2hhbm5lbCB2aWRlbyBhdXRvcGxheSBwcmV2ZW50ZWQgdy9vIG9ic2VydmVyJyk7CiAgICB9CiAgfQoKICBjb25zdCBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnNMaXN0KSA9PiB7CiAgICBjb25zdCBjaGFubmVsUmVuZGVyZXIgPSByb290LnF1ZXJ5U2VsZWN0b3IoJ3l0ZC1jaGFubmVsLXZpZGVvLXBsYXllci1yZW5kZXJlcicpOwogICAgbXV0YXRpb25zTGlzdC5zb21lKChtdXRhdGlvblJlY29yZCkgPT4gewogICAgICBpZiAoIW11dGF0aW9uUmVjb3JkLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2h0bWw1LXZpZGVvLWNvbnRhaW5lcicpKSByZXR1cm4gZmFsc2U7CiAgICAgIHJldHVybiBBcnJheS5mcm9tKG11dGF0aW9uUmVjb3JkLmFkZGVkTm9kZXMpLnNvbWUoKG5vZGUpID0+IHsKICAgICAgICBpZiAobm9kZS5ub2RlTmFtZSA9PT0gJ1ZJREVPJykgewogICAgICAgICAgbG9nKCd2aWRlbyBjYXB0dXJlZCcpOwogICAgICAgICAgaWYgKGNoYW5uZWxSZW5kZXJlcj8uY29udGFpbnMobm9kZSkpIHsKICAgICAgICAgICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpOwogICAgICAgICAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWRzdGFydCcsIChlKSA9PiBlLnRhcmdldC5wYXVzZSgpLCB7IHBhc3NpdmU6IHRydWUgfSk7CiAgICAgICAgICAgIGxvZygnY2hhbm5lbCB2aWRlbyBhdXRvcGxheSBwcmV2ZW50ZWQnKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfSk7CiAgfSk7CiAgb2JzZXJ2ZXIub2JzZXJ2ZShyb290LCB7IGNoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZSB9KTsKICByZXR1cm4gbG9nKCdvYnNlcnZlciBvYnNlcnZlJyk7Cn0oKSk7Cg=="}],"settings":{"configMode":100,"connect_mode":"ask","default_tab_types":"incognito+normal","enabled":true,"external_connect":"all","external_update_interval":1,"favicon_service":"google","forbiddenPages":["*example.org/*","*paypal.tld/*","*kemdikbud.go.id/*","*stripe.com/*","https://*deutsche-bank-24.tld/*","https://*bankofamerica.tld/*","/^.*:\\/\\/apis\\.google\\.com\\/((?!render)([^\\/]+)\\/)+([^\\/]+)?$/","*://www.facebook.com/plugins/*","*://platform.twitter.com/widgets/*","https://drive.google.com/*","http://rerips.com/*","http://drakoric.com/*","https://torrentwal.net/*","https://*.google.com/*","https://*.google.co.id/*","https://www.google.com/","https://www.google.com/*","https://www.google.co.id/","https://www.google.co.id/*","https://softgateon.herokuapp.com/*","http://driverename.iblogbox.com/*","https://www.mm1rza.com/*","https://blog.mm1rza.com/*","https://www.tokopedia.com/*","https://shopee.co.id/*","https://account.microsoft.com/*","https://ibanking.bankjateng.co.id/*","https://mm1rza.com/*","https://web.whatsapp.com/*","https://speedtest.cbn.id/*","https://www.netflix.com/*","https://laksa19.github.io/*","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?portal\\.biznetgio\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?toweroffantasy\\.interactivemap\\.app(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?seller\\.tokopedia\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?chat\\.openai\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?cloud-as\\.ruijienetworks\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?laporankerma\\.kemdikbud\\.go\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?pddikti-admin\\.kemdikbud\\.go\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?sister\\.kemdikbud\\.go\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?pddikti\\.kemdikbud\\.go\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?web3triads\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?mnet\\.my\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?login\\.teamviewer\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?stats\\.uptimerobot\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?tunnel\\.hostddns\\.us(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?ad4msan\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?103\\.189\\.96\\.18(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?127\\.0\\.0\\.1(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?inviglory\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?192\\.168\\.99\\.253(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?hallonet\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?dev\\.miuiflash\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?play\\.pixels\\.xyz(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?pmb\\.akubisa\\.ac\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?akuntansi\\.akubisa\\.ac\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?akubisa\\.ac\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?10\\.10\\.2\\.18(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?bilhanet\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?my\\.idnix\\.net(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?new\\.clientzone\\.rumahweb\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?account\\.ui\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?ispdesign\\.ui\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?reyee\\.ruijie\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.ruijienetworks\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?preview\\.themeforest\\.net(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?192\\.168\\.18\\.1(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?mega\\.nz(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?10\\.10\\.2\\.11(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?192\\.168\\.99\\.245(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.visionplus\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?103\\.216\\.106\\.2(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.zedge\\.net(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?one\\.one\\.one\\.one(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?order\\.rumahweb\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?chatgpt\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?seller\\.shopee\\.co\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?sibraja\\.lldikti6\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?akuntansi\\.trunojoyo\\.ac\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?nms-iptr\\.ldp\\.net\\.id(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?mrtg\\.biznetnetworks\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.maxmind\\.com(:[0-9]{1,5})?\\/.*$/"],"incognito_mode":"temporary","layout":"default","layout_user_css":"","native_import":true,"native_import_path":"","native_import_post_action":"disable","notification_showUpdate":"changelog","page_filter_mode":"black","page_whitelist":["/https?:\\/\\/greasyfork\\.org\\/.*/","http://xkcd.com/970/"],"require_sri_mode":"supported","reset_sync":null,"run_sync":null,"sandbox_mode":"default","scriptUpdateCheckPeriod":21600000,"script_blacklist_server":[{"rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"],"severity":2},{"name":"SaveFrom.net helper","reason":"Shows advertisements","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"severity":3},{"reasons":{"en":"Used for a phishing compain to compromise users of baon-nutrition.com"},"rules":["/https?:\\/\\/files\\.ulysse\\.travel\\/.*\\.user\\.js/"],"severity":8}],"script_include_mode":"default","statistics_enabled":false,"sync_enabled":false,"sync_type":"4","webrequest_fixCSP":"yes","webrequest_modHeaders":"yes"}}